<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Castle.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.#ctor(Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AddObjectObject">
            <summary>Sets the shim of AbstractDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.Clear">
            <summary>Sets the shim of AbstractDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.Constructor">
            <summary>Sets the shim of AbstractDictionaryAdapter.AbstractDictionaryAdapter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.CopyToArrayInt32">
            <summary>Sets the shim of AbstractDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.CountGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.GetEnumerator">
            <summary>Sets the shim of AbstractDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.IsFixedSizeGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.KeysGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.RemoveObject">
            <summary>Sets the shim of AbstractDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.SyncRootGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AbstractDictionaryAdapter.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.ValuesGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.AddObjectObject">
            <summary>Sets the shim of AbstractDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.Clear">
            <summary>Sets the shim of AbstractDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of AbstractDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.CountGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.GetEnumerator">
            <summary>Sets the shim of AbstractDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.KeysGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.RemoveObject">
            <summary>Sets the shim of AbstractDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.SyncRootGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AbstractDictionaryAdapter.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapter.AllInstances.ValuesGet">
            <summary>Sets the shim of AbstractDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.#ctor(Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.Bind(Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.CancelledGet">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.get_Cancelled()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.CancelledSetBoolean">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.set_Cancelled(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.CastleComponentsDictionaryAdapterIDictionaryAdapterVisitorVisitCollectionIDictionaryAdapterPropertyDescriptorTypeObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.CastleComponentsDictionaryAdapterIDictionaryAdapterVisitorVisitInterfaceIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.CastleComponentsDictionaryAdapterIDictionaryAdapterVisitorVisitPropertyIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.Constructor">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.AbstractDictionaryAdapterVisitor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.ConstructorAbstractDictionaryAdapterVisitor">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.AbstractDictionaryAdapterVisitor(AbstractDictionaryAdapterVisitor parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.IsCollectionPropertyDescriptorTypeOut">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.IsCollection(PropertyDescriptor property, Type&amp; collectionItemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.PopScopeIDictionaryAdapter">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.PopScope(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.PushScopeIDictionaryAdapter">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.PushScope(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.VisitCollectionIDictionaryAdapterPropertyDescriptorTypeObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.VisitDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Func`2&lt;PropertyDescriptor,Boolean&gt; selector, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.VisitDictionaryAdapterIDictionaryAdapterObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.VisitInterfaceIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.VisitPropertyIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.CancelledGet">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.get_Cancelled()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.CancelledSetBoolean">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.set_Cancelled(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.CastleComponentsDictionaryAdapterIDictionaryAdapterVisitorVisitCollectionIDictionaryAdapterPropertyDescriptorTypeObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.CastleComponentsDictionaryAdapterIDictionaryAdapterVisitorVisitInterfaceIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.CastleComponentsDictionaryAdapterIDictionaryAdapterVisitorVisitPropertyIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.PopScopeIDictionaryAdapter">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.PopScope(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.PushScopeIDictionaryAdapter">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.PushScope(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.VisitCollectionIDictionaryAdapterPropertyDescriptorTypeObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.VisitDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Func`2&lt;PropertyDescriptor,Boolean&gt; selector, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.VisitDictionaryAdapterIDictionaryAdapterObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.VisitInterfaceIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimAbstractDictionaryAdapterVisitor.AllInstances.VisitPropertyIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the shim of AbstractDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.BindingList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.#ctor(Castle.Components.DictionaryAdapter.BindingList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(Castle.Components.DictionaryAdapter.IBindingListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(Castle.Components.DictionaryAdapter.IBindingList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.ComponentModel.ICancelAddNew)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.ComponentModel.IRaiseItemChangedEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AddNew">
            <summary>Sets the shim of BindingList`1.AddNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AddT0">
            <summary>Sets the shim of BindingList`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AddingNewAddAddingNewEventHandler">
            <summary>Sets the shim of BindingList`1.add_AddingNew(AddingNewEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AddingNewRemoveAddingNewEventHandler">
            <summary>Sets the shim of BindingList`1.remove_AddingNew(AddingNewEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllowEditGet">
            <summary>Sets the shim of BindingList`1.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllowEditSetBoolean">
            <summary>Sets the shim of BindingList`1.set_AllowEdit(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllowNewGet">
            <summary>Sets the shim of BindingList`1.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllowNewSetBoolean">
            <summary>Sets the shim of BindingList`1.set_AllowNew(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllowRemoveGet">
            <summary>Sets the shim of BindingList`1.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllowRemoveSetBoolean">
            <summary>Sets the shim of BindingList`1.set_AllowRemove(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AsBindingListGet">
            <summary>Sets the shim of BindingList`1.get_AsBindingList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CancelNewInt32">
            <summary>Sets the shim of BindingList`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CastleComponentsDictionaryAdapterIBindingListTAddIndexPropertyDescriptor">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CastleComponentsDictionaryAdapterIBindingListTApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CastleComponentsDictionaryAdapterIBindingListTFindPropertyDescriptorObject">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CastleComponentsDictionaryAdapterIBindingListTRemoveIndexPropertyDescriptor">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CastleComponentsDictionaryAdapterIBindingListTRemoveSort">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveSort()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Clear">
            <summary>Sets the shim of BindingList`1.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.Constructor">
            <summary>Sets the shim of BindingList`1.BindingList`1()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ConstructorBindingListOfT0">
            <summary>Sets the shim of BindingList`1.BindingList`1(BindingList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ConstructorIListOfT0">
            <summary>Sets the shim of BindingList`1.BindingList`1(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ContainsT0">
            <summary>Sets the shim of BindingList`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of BindingList`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.CountGet">
            <summary>Sets the shim of BindingList`1.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.EndNewInt32">
            <summary>Sets the shim of BindingList`1.EndNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.GetEnumerator">
            <summary>Sets the shim of BindingList`1.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.IndexOfT0">
            <summary>Sets the shim of BindingList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.InnerListGet">
            <summary>Sets the shim of BindingList`1.get_InnerList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.InsertInt32T0">
            <summary>Sets the shim of BindingList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of BindingList`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.IsSortedCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of BindingList`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ItemGetInt32">
            <summary>Sets the shim of BindingList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ItemSetInt32T0">
            <summary>Sets the shim of BindingList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ListChangedAddListChangedEventHandler">
            <summary>Sets the shim of BindingList`1.add_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ListChangedRemoveListChangedEventHandler">
            <summary>Sets the shim of BindingList`1.remove_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.RaiseListChangedEventsGet">
            <summary>Sets the shim of BindingList`1.get_RaiseListChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.RaiseListChangedEventsSetBoolean">
            <summary>Sets the shim of BindingList`1.set_RaiseListChangedEvents(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.RaisesItemChangedEventsSystemComponentModelIRaiseItemChangedEventsget">
            <summary>Sets the shim of BindingList`1.System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.RemoveAtInt32">
            <summary>Sets the shim of BindingList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.RemoveT0">
            <summary>Sets the shim of BindingList`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ResetBindings">
            <summary>Sets the shim of BindingList`1.ResetBindings()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.ResetItemInt32">
            <summary>Sets the shim of BindingList`1.ResetItem(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SortDirectionCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SortPropertyCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SupportsChangeNotificationCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SupportsSearchingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SupportsSortingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSorting()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of BindingList`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of BindingList`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of BindingList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsIListAddObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Add(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Insert(Int32 index, Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Remove(Object item)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AddNew">
            <summary>Sets the shim of BindingList`1.AddNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AddT0">
            <summary>Sets the shim of BindingList`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AddingNewAddAddingNewEventHandler">
            <summary>Sets the shim of BindingList`1.add_AddingNew(AddingNewEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AddingNewRemoveAddingNewEventHandler">
            <summary>Sets the shim of BindingList`1.remove_AddingNew(AddingNewEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AllowEditGet">
            <summary>Sets the shim of BindingList`1.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AllowEditSetBoolean">
            <summary>Sets the shim of BindingList`1.set_AllowEdit(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AllowNewGet">
            <summary>Sets the shim of BindingList`1.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AllowNewSetBoolean">
            <summary>Sets the shim of BindingList`1.set_AllowNew(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AllowRemoveGet">
            <summary>Sets the shim of BindingList`1.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AllowRemoveSetBoolean">
            <summary>Sets the shim of BindingList`1.set_AllowRemove(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.AsBindingListGet">
            <summary>Sets the shim of BindingList`1.get_AsBindingList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CancelNewInt32">
            <summary>Sets the shim of BindingList`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTAddIndexPropertyDescriptor">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTFindPropertyDescriptorObject">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTRemoveIndexPropertyDescriptor">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTRemoveSort">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveSort()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.Clear">
            <summary>Sets the shim of BindingList`1.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ContainsT0">
            <summary>Sets the shim of BindingList`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of BindingList`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.CountGet">
            <summary>Sets the shim of BindingList`1.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.EndNewInt32">
            <summary>Sets the shim of BindingList`1.EndNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of BindingList`1.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of BindingList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.InnerListGet">
            <summary>Sets the shim of BindingList`1.get_InnerList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of BindingList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of BindingList`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.IsSortedCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of BindingList`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of BindingList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of BindingList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ListChangedAddListChangedEventHandler">
            <summary>Sets the shim of BindingList`1.add_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ListChangedRemoveListChangedEventHandler">
            <summary>Sets the shim of BindingList`1.remove_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.RaiseListChangedEventsGet">
            <summary>Sets the shim of BindingList`1.get_RaiseListChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.RaiseListChangedEventsSetBoolean">
            <summary>Sets the shim of BindingList`1.set_RaiseListChangedEvents(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.RaisesItemChangedEventsSystemComponentModelIRaiseItemChangedEventsget">
            <summary>Sets the shim of BindingList`1.System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of BindingList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.RemoveT0">
            <summary>Sets the shim of BindingList`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ResetBindings">
            <summary>Sets the shim of BindingList`1.ResetBindings()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.ResetItemInt32">
            <summary>Sets the shim of BindingList`1.ResetItem(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SortDirectionCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SortPropertyCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SupportsChangeNotificationCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SupportsSearchingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SupportsSortingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of BindingList`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSorting()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of BindingList`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of BindingList`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of BindingList`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Add(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Insert(Int32 index, Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingList`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of BindingList`1.System.Collections.IList.Remove(Object item)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.BindingListInitializer`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.#ctor(Castle.Components.DictionaryAdapter.BindingListInitializer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.Bind(Castle.Components.DictionaryAdapter.IValueInitializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.ConstructorFuncOfInt32ObjectObjectFuncOfObjectFuncOfInt32ObjectObjectActionOfInt32Action">
            <summary>Sets the shim of BindingListInitializer`1.BindingListInitializer`1(Func`3&lt;Int32,Object,Object&gt; addAt, Func`1&lt;Object&gt; addNew, Func`3&lt;Int32,Object,Object&gt; setAt, Action`1&lt;Int32&gt; removeAt, Action reset)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.InitializeIDictionaryAdapterObject">
            <summary>Sets the shim of BindingListInitializer`1.Initialize(IDictionaryAdapter dictionaryAdapter, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1._Initializeb__0ObjectAddingNewEventArgs">
            <summary>Sets the shim of BindingListInitializer`1.&lt;Initialize&gt;b__0(Object sender, AddingNewEventArgs args)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.AllInstances.InitializeIDictionaryAdapterObject">
            <summary>Sets the shim of BindingListInitializer`1.Initialize(IDictionaryAdapter dictionaryAdapter, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimBindingListInitializer`1.AllInstances._Initializeb__0ObjectAddingNewEventArgs">
            <summary>Sets the shim of BindingListInitializer`1.&lt;Initialize&gt;b__0(Object sender, AddingNewEventArgs args)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.CascadingDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.#ctor(Castle.Components.DictionaryAdapter.CascadingDictionaryAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.ConstructorIDictionaryIDictionary">
            <summary>Sets the shim of CascadingDictionaryAdapter.CascadingDictionaryAdapter(IDictionary primary, IDictionary secondary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.ContainsObject">
            <summary>Sets the shim of CascadingDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.ItemGetObject">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the shim of CascadingDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.PrimaryGet">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_Primary()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.SecondaryGet">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_Secondary()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances.ContainsObject">
            <summary>Sets the shim of CascadingDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances.ItemGetObject">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of CascadingDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances.PrimaryGet">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_Primary()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimCascadingDictionaryAdapter.AllInstances.SecondaryGet">
            <summary>Sets the shim of CascadingDictionaryAdapter.get_Secondary()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.ComponentAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.#ctor(Castle.Components.DictionaryAdapter.ComponentAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of ComponentAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of ComponentAttribute.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.Constructor">
            <summary>Sets the shim of ComponentAttribute.ComponentAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.NoPrefixGet">
            <summary>Sets the shim of ComponentAttribute.get_NoPrefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.NoPrefixSetBoolean">
            <summary>Sets the shim of ComponentAttribute.set_NoPrefix(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.PrefixGet">
            <summary>Sets the shim of ComponentAttribute.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.PrefixSetString">
            <summary>Sets the shim of ComponentAttribute.set_Prefix(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of ComponentAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of ComponentAttribute.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances.NoPrefixGet">
            <summary>Sets the shim of ComponentAttribute.get_NoPrefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances.NoPrefixSetBoolean">
            <summary>Sets the shim of ComponentAttribute.set_NoPrefix(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances.PrefixGet">
            <summary>Sets the shim of ComponentAttribute.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimComponentAttribute.AllInstances.PrefixSetString">
            <summary>Sets the shim of ComponentAttribute.set_Prefix(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DefaultPropertyGetter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.#ctor(Castle.Components.DictionaryAdapter.DefaultPropertyGetter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.ConstructorTypeConverter">
            <summary>Sets the shim of DefaultPropertyGetter.DefaultPropertyGetter(TypeConverter converter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.Copy">
            <summary>Sets the shim of DefaultPropertyGetter.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.ExecutionOrderGet">
            <summary>Sets the shim of DefaultPropertyGetter.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of DefaultPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.AllInstances.Copy">
            <summary>Sets the shim of DefaultPropertyGetter.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.AllInstances.ExecutionOrderGet">
            <summary>Sets the shim of DefaultPropertyGetter.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDefaultPropertyGetter.AllInstances.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of DefaultPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.ConstructorType">
            <summary>Sets the shim of DictionaryAdapterAttribute.DictionaryAdapterAttribute(Type interfaceType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.InterfaceTypeGet">
            <summary>Sets the shim of DictionaryAdapterAttribute.get_InterfaceType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.InterfaceTypeSetType">
            <summary>Sets the shim of DictionaryAdapterAttribute.set_InterfaceType(Type value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.AllInstances.InterfaceTypeGet">
            <summary>Sets the shim of DictionaryAdapterAttribute.get_InterfaceType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterAttribute.AllInstances.InterfaceTypeSetType">
            <summary>Sets the shim of DictionaryAdapterAttribute.set_InterfaceType(Type value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(Castle.Components.DictionaryAdapter.IDictionaryCreate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(Castle.Components.DictionaryAdapter.IDictionaryEdit)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(Castle.Components.DictionaryAdapter.IDictionaryNotify)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(Castle.Components.DictionaryAdapter.IDictionaryValidate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(System.ComponentModel.IChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(System.ComponentModel.IEditableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(System.ComponentModel.INotifyPropertyChanging)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Bind(System.ComponentModel.IRevertibleChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CoerceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Coerce()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CreateOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create(Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CreateOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CreateOf1IDictionaryActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,System.Action{``0},``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create(IDictionary dictionary, Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.GetPropertyOfTypeOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of DictionaryAdapterBase.GetPropertyOfType(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AcceptChanges">
            <summary>Sets the shim of DictionaryAdapterBase.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AddEditDependencyIEditableObject">
            <summary>Sets the shim of DictionaryAdapterBase.AddEditDependency(IEditableObject editDependency)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AddValidatorIDictionaryValidator">
            <summary>Sets the shim of DictionaryAdapterBase.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.BeginEdit">
            <summary>Sets the shim of DictionaryAdapterBase.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CanEditGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_CanEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CanEditSetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CanNotifyGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_CanNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CanNotifySetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_CanNotify(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CanValidateGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_CanValidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CanValidateSetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_CanValidate(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CancelEdit">
            <summary>Sets the shim of DictionaryAdapterBase.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ClearEditPropertyPropertyDescriptorString">
            <summary>Sets the shim of DictionaryAdapterBase.ClearEditProperty(PropertyDescriptor property, String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ClearPropertyPropertyDescriptorString">
            <summary>Sets the shim of DictionaryAdapterBase.ClearProperty(PropertyDescriptor property, String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CoerceType">
            <summary>Sets the shim of DictionaryAdapterBase.Coerce(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ConstructorDictionaryAdapterInstance">
            <summary>Sets the shim of DictionaryAdapterBase.DictionaryAdapterBase(DictionaryAdapterInstance instance)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CopyToIDictionaryAdapter">
            <summary>Sets the shim of DictionaryAdapterBase.CopyTo(IDictionaryAdapter other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CopyToIDictionaryAdapterFuncOfPropertyDescriptorBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.CopyTo(IDictionaryAdapter other, Func`2&lt;PropertyDescriptor,Boolean&gt; selector)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CreateType">
            <summary>Sets the shim of DictionaryAdapterBase.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.CreateTypeIDictionary">
            <summary>Sets the shim of DictionaryAdapterBase.Create(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.EditPropertyPropertyDescriptorStringObject">
            <summary>Sets the shim of DictionaryAdapterBase.EditProperty(PropertyDescriptor property, String key, Object propertyValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.EndEdit">
            <summary>Sets the shim of DictionaryAdapterBase.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.EqualsObject">
            <summary>Sets the shim of DictionaryAdapterBase.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ErrorGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_Error()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.GetDictionaryIDictionaryStringRef">
            <summary>Sets the shim of DictionaryAdapterBase.GetDictionary(IDictionary dictionary, String&amp; key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.GetEditedPropertyStringObjectOut">
            <summary>Sets the shim of DictionaryAdapterBase.GetEditedProperty(String propertyName, Object&amp; propertyValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.GetHashCode">
            <summary>Sets the shim of DictionaryAdapterBase.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.GetKeyString">
            <summary>Sets the shim of DictionaryAdapterBase.GetKey(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.GetPropertyStringBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.GetProperty(String propertyName, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Initialize">
            <summary>Sets the shim of DictionaryAdapterBase.Initialize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.Invalidate">
            <summary>Sets the shim of DictionaryAdapterBase.Invalidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.IsChangedGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.IsEditingGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_IsEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.IsValidGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_IsValid()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ItemGetString">
            <summary>Sets the shim of DictionaryAdapterBase.get_Item(String columnName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.NotifyPropertyChangedPropertyDescriptorObjectObject">
            <summary>Sets the shim of DictionaryAdapterBase.NotifyPropertyChanged(PropertyDescriptor property, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.NotifyPropertyChangedString">
            <summary>Sets the shim of DictionaryAdapterBase.NotifyPropertyChanged(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.NotifyPropertyChangingPropertyDescriptorObjectObject">
            <summary>Sets the shim of DictionaryAdapterBase.NotifyPropertyChanging(PropertyDescriptor property, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.add_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.remove_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ReadPropertyString">
            <summary>Sets the shim of DictionaryAdapterBase.ReadProperty(String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.RejectChanges">
            <summary>Sets the shim of DictionaryAdapterBase.RejectChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ResumeEditing">
            <summary>Sets the shim of DictionaryAdapterBase.ResumeEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ResumeNotifications">
            <summary>Sets the shim of DictionaryAdapterBase.ResumeNotifications()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SetPropertyStringObjectRef">
            <summary>Sets the shim of DictionaryAdapterBase.SetProperty(String propertyName, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShouldClearPropertyPropertyDescriptorObject">
            <summary>Sets the shim of DictionaryAdapterBase.ShouldClearProperty(PropertyDescriptor property, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShouldNotifyGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_ShouldNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.StorePropertyPropertyDescriptorStringObject">
            <summary>Sets the shim of DictionaryAdapterBase.StoreProperty(PropertyDescriptor property, String key, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SupportsMultiLevelEditGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_SupportsMultiLevelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SupportsMultiLevelEditSetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_SupportsMultiLevelEdit(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SuppressEditing">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SuppressEditingBlock">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressEditingBlock()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SuppressNotifications">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressNotifications()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.SuppressNotificationsBlock">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressNotificationsBlock()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ThisGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_This()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ThisSetDictionaryAdapterInstance">
            <summary>Sets the shim of DictionaryAdapterBase.set_This(DictionaryAdapterInstance value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.TrackPropertyChangePropertyDescriptorObjectObject">
            <summary>Sets the shim of DictionaryAdapterBase.TrackPropertyChange(PropertyDescriptor property, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.TrackReadonlyPropertyChanges">
            <summary>Sets the shim of DictionaryAdapterBase.TrackReadonlyPropertyChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ValidateGroupsObjectArray">
            <summary>Sets the shim of DictionaryAdapterBase.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ValidatorsGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_Validators()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._CopyTob__1PropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;CopyTo&gt;b__1(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_Errorb__12IDictionaryValidator">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_Error&gt;b__12(IDictionaryValidator v)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_Errorb__13String">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_Error&gt;b__13(String e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_IsChangedb__aPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_IsChanged&gt;b__a(PropertyDescriptor prop)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_IsChangedb__bPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_IsChanged&gt;b__b(PropertyDescriptor prop)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_IsChangedb__cIChangeTracking">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_IsChanged&gt;b__c(IChangeTracking track)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_IsValidb__10IDictionaryValidator">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_IsValid&gt;b__10(IDictionaryValidator v)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase._get_Itemb__17String">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_Item&gt;b__17(String e)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CoerceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterBase,``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Coerce()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterBase,``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CreateOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterBase,System.Action{``0},``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create(Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CreateOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterBase,System.Collections.IDictionary,``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CreateOf1IDictionaryActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterBase,System.Collections.IDictionary,System.Action{``0},``0})">
            <summary>Sets the shim of DictionaryAdapterBase.Create(IDictionary dictionary, Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.GetPropertyOfTypeOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterBase,System.String,``0})">
            <summary>Sets the shim of DictionaryAdapterBase.GetPropertyOfType(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.AcceptChanges">
            <summary>Sets the shim of DictionaryAdapterBase.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.AddEditDependencyIEditableObject">
            <summary>Sets the shim of DictionaryAdapterBase.AddEditDependency(IEditableObject editDependency)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.AddValidatorIDictionaryValidator">
            <summary>Sets the shim of DictionaryAdapterBase.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.BeginEdit">
            <summary>Sets the shim of DictionaryAdapterBase.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CanEditGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_CanEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CanEditSetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_CanEdit(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CanNotifyGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_CanNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CanNotifySetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_CanNotify(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CanValidateGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_CanValidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CanValidateSetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_CanValidate(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CancelEdit">
            <summary>Sets the shim of DictionaryAdapterBase.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ClearEditPropertyPropertyDescriptorString">
            <summary>Sets the shim of DictionaryAdapterBase.ClearEditProperty(PropertyDescriptor property, String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ClearPropertyPropertyDescriptorString">
            <summary>Sets the shim of DictionaryAdapterBase.ClearProperty(PropertyDescriptor property, String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CoerceType">
            <summary>Sets the shim of DictionaryAdapterBase.Coerce(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CopyToIDictionaryAdapter">
            <summary>Sets the shim of DictionaryAdapterBase.CopyTo(IDictionaryAdapter other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CopyToIDictionaryAdapterFuncOfPropertyDescriptorBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.CopyTo(IDictionaryAdapter other, Func`2&lt;PropertyDescriptor,Boolean&gt; selector)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CreateType">
            <summary>Sets the shim of DictionaryAdapterBase.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.CreateTypeIDictionary">
            <summary>Sets the shim of DictionaryAdapterBase.Create(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.EditPropertyPropertyDescriptorStringObject">
            <summary>Sets the shim of DictionaryAdapterBase.EditProperty(PropertyDescriptor property, String key, Object propertyValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.EndEdit">
            <summary>Sets the shim of DictionaryAdapterBase.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.EqualsObject">
            <summary>Sets the shim of DictionaryAdapterBase.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ErrorGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_Error()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.GetEditedPropertyStringObjectOut">
            <summary>Sets the shim of DictionaryAdapterBase.GetEditedProperty(String propertyName, Object&amp; propertyValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.GetHashCode01">
            <summary>Sets the shim of DictionaryAdapterBase.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.GetKeyString">
            <summary>Sets the shim of DictionaryAdapterBase.GetKey(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.GetPropertyStringBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.GetProperty(String propertyName, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.Initialize">
            <summary>Sets the shim of DictionaryAdapterBase.Initialize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.Invalidate">
            <summary>Sets the shim of DictionaryAdapterBase.Invalidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.IsChangedGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.IsEditingGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_IsEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.IsValidGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_IsValid()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ItemGetString">
            <summary>Sets the shim of DictionaryAdapterBase.get_Item(String columnName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.NotifyPropertyChangedPropertyDescriptorObjectObject">
            <summary>Sets the shim of DictionaryAdapterBase.NotifyPropertyChanged(PropertyDescriptor property, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.NotifyPropertyChangedString">
            <summary>Sets the shim of DictionaryAdapterBase.NotifyPropertyChanged(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.NotifyPropertyChangingPropertyDescriptorObjectObject">
            <summary>Sets the shim of DictionaryAdapterBase.NotifyPropertyChanging(PropertyDescriptor property, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.PropertyChangingAddPropertyChangingEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.add_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.PropertyChangingRemovePropertyChangingEventHandler">
            <summary>Sets the shim of DictionaryAdapterBase.remove_PropertyChanging(PropertyChangingEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ReadPropertyString">
            <summary>Sets the shim of DictionaryAdapterBase.ReadProperty(String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.RejectChanges">
            <summary>Sets the shim of DictionaryAdapterBase.RejectChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ResumeEditing">
            <summary>Sets the shim of DictionaryAdapterBase.ResumeEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ResumeNotifications">
            <summary>Sets the shim of DictionaryAdapterBase.ResumeNotifications()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SetPropertyStringObjectRef">
            <summary>Sets the shim of DictionaryAdapterBase.SetProperty(String propertyName, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ShouldClearPropertyPropertyDescriptorObject">
            <summary>Sets the shim of DictionaryAdapterBase.ShouldClearProperty(PropertyDescriptor property, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ShouldNotifyGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_ShouldNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.StorePropertyPropertyDescriptorStringObject">
            <summary>Sets the shim of DictionaryAdapterBase.StoreProperty(PropertyDescriptor property, String key, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SupportsMultiLevelEditGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_SupportsMultiLevelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SupportsMultiLevelEditSetBoolean">
            <summary>Sets the shim of DictionaryAdapterBase.set_SupportsMultiLevelEdit(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SuppressEditing">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SuppressEditingBlock">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressEditingBlock()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SuppressNotifications">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressNotifications()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.SuppressNotificationsBlock">
            <summary>Sets the shim of DictionaryAdapterBase.SuppressNotificationsBlock()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ThisGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_This()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ThisSetDictionaryAdapterInstance">
            <summary>Sets the shim of DictionaryAdapterBase.set_This(DictionaryAdapterInstance value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.TrackPropertyChangePropertyDescriptorObjectObject">
            <summary>Sets the shim of DictionaryAdapterBase.TrackPropertyChange(PropertyDescriptor property, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.TrackReadonlyPropertyChanges">
            <summary>Sets the shim of DictionaryAdapterBase.TrackReadonlyPropertyChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ValidateGroupsObjectArray">
            <summary>Sets the shim of DictionaryAdapterBase.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances.ValidatorsGet">
            <summary>Sets the shim of DictionaryAdapterBase.get_Validators()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances._get_Errorb__12IDictionaryValidator">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_Error&gt;b__12(IDictionaryValidator v)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances._get_IsChangedb__bPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_IsChanged&gt;b__b(PropertyDescriptor prop)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.AllInstances._get_IsValidb__10IDictionaryValidator">
            <summary>Sets the shim of DictionaryAdapterBase.&lt;get_IsValid&gt;b__10(IDictionaryValidator v)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterBase+TrackPropertyChangeScope</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterBase.TrackPropertyChangeScope)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.ConstructorDictionaryAdapterBase">
            <summary>Sets the shim of TrackPropertyChangeScope.TrackPropertyChangeScope(DictionaryAdapterBase adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.ConstructorDictionaryAdapterBasePropertyDescriptorObject">
            <summary>Sets the shim of TrackPropertyChangeScope.TrackPropertyChangeScope(DictionaryAdapterBase adapter, PropertyDescriptor property, Object existingValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.Dispose">
            <summary>Sets the shim of TrackPropertyChangeScope.Dispose()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.GetEffectivePropertyValuePropertyDescriptor">
            <summary>Sets the shim of TrackPropertyChangeScope.GetEffectivePropertyValue(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.Notify">
            <summary>Sets the shim of TrackPropertyChangeScope.Notify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.NotifyIfChangedPropertyDescriptorObjectObject">
            <summary>Sets the shim of TrackPropertyChangeScope.NotifyIfChanged(PropertyDescriptor descriptor, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.NotifyReadonly">
            <summary>Sets the shim of TrackPropertyChangeScope.NotifyReadonly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope._ctorb__1cPropertyDescriptor">
            <summary>Sets the shim of TrackPropertyChangeScope.&lt;.ctor&gt;b__1c(PropertyDescriptor pd)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope._ctorb__1dPropertyDescriptor">
            <summary>Sets the shim of TrackPropertyChangeScope.&lt;.ctor&gt;b__1d(PropertyDescriptor pd)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope._ctorb__1ePropertyDescriptor">
            <summary>Sets the shim of TrackPropertyChangeScope.&lt;.ctor&gt;b__1e(PropertyDescriptor pd)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances.Dispose">
            <summary>Sets the shim of TrackPropertyChangeScope.Dispose()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances.GetEffectivePropertyValuePropertyDescriptor">
            <summary>Sets the shim of TrackPropertyChangeScope.GetEffectivePropertyValue(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances.Notify">
            <summary>Sets the shim of TrackPropertyChangeScope.Notify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances.NotifyIfChangedPropertyDescriptorObjectObject">
            <summary>Sets the shim of TrackPropertyChangeScope.NotifyIfChanged(PropertyDescriptor descriptor, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances.NotifyReadonly">
            <summary>Sets the shim of TrackPropertyChangeScope.NotifyReadonly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterBase.ShimTrackPropertyChangeScope.AllInstances._ctorb__1ePropertyDescriptor">
            <summary>Sets the shim of TrackPropertyChangeScope.&lt;.ctor&gt;b__1e(PropertyDescriptor pd)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterExtensions.AsVirtualIDictionaryAdapter">
            <summary>Sets the shim of DictionaryAdapterExtensions.AsVirtual(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterFactory</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.Bind(Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterOf1NameValueCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Specialized.NameValueCollection,``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(NameValueCollection nameValues)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterOf1TypeIDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Collections.Generic.IDictionary{System.String,``0},System.Object})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, IDictionary`2&lt;String,!!0&gt; dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterOf1XmlNode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.XmlNode,``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(XmlNode xmlNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterOf2IDictionaryOfStringM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``1},``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(IDictionary`2&lt;String,!!1&gt; dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AddDefaultGetterPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.AddDefaultGetter(PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CollectPropertiesTypeActionOfPropertyInfo">
            <summary>Sets the shim of DictionaryAdapterFactory.CollectProperties(Type currentType, Action`1&lt;PropertyInfo&gt; onProperty)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.Constructor">
            <summary>Sets the shim of DictionaryAdapterFactory.DictionaryAdapterFactory()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateAdapterConstructorTypeBuilder">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateAdapterConstructor(TypeBuilder typeBuilder)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateAdapterFactoryMethodTypeBuilderConstructorInfo">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateAdapterFactoryMethod(TypeBuilder typeBuilder, ConstructorInfo constructor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateAdapterMetaTypeTypeBuilderPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateAdapterMeta(Type type, TypeBuilder typeBuilder, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateAdapterPropertyTypeBuilderPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateAdapterProperty(TypeBuilder typeBuilder, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateAdapterTypeTypeModuleBuilder">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateAdapterType(Type type, ModuleBuilder moduleBuilder)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateMetaPropertyTypeBuilderPropertyInfoFieldInfo">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateMetaProperty(TypeBuilder typeBuilder, PropertyInfo prop, FieldInfo field)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreatePropertyGetMethodTypeBuilderPropertyBuilderPropertyDescriptorMethodAttributes">
            <summary>Sets the shim of DictionaryAdapterFactory.CreatePropertyGetMethod(TypeBuilder typeBuilder, PropertyBuilder propertyBuilder, PropertyDescriptor descriptor, MethodAttributes propAttribs)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreatePropertySetMethodTypeBuilderPropertyBuilderPropertyDescriptorMethodAttributes">
            <summary>Sets the shim of DictionaryAdapterFactory.CreatePropertySetMethod(TypeBuilder typeBuilder, PropertyBuilder propertyBuilder, PropertyDescriptor descriptor, MethodAttributes propAttribs)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.CreateTypeBuilderTypeAppDomain">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateTypeBuilder(Type type, AppDomain appDomain)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.ExpandBehaviorsIEnumerableOfObject">
            <summary>Sets the shim of DictionaryAdapterFactory.ExpandBehaviors(IEnumerable`1&lt;Object&gt; behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterMetaType">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapterMeta(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterMetaTypeDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapterMeta(Type type, DictionaryAdapterMeta other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterMetaTypePropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapterMeta(Type type, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterTypeIDictionary">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterTypeIDictionaryPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterTypeNameValueCollection">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, NameValueCollection nameValues)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetAdapterTypeXmlNode">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, XmlNode xmlNode)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.GetPropertyDescriptorsTypePropertyDescriptorObjectArrayOut">
            <summary>Sets the shim of DictionaryAdapterFactory.GetPropertyDescriptors(Type type, PropertyDescriptor initializers, Object[]&amp; typeBehaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.InternalGetAdapterMetaTypePropertyDescriptorDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterFactory.InternalGetAdapterMeta(Type type, PropertyDescriptor descriptor, DictionaryAdapterMeta other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.InternalGetAdapterTypeIDictionaryPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.InternalGetAdapter(Type type, IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.PreparePropertyMethodPropertyDescriptorILGenerator">
            <summary>Sets the shim of DictionaryAdapterFactory.PreparePropertyMethod(PropertyDescriptor descriptor, ILGenerator propILGenerator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.StaticConstructor">
            <summary>Sets the shim of DictionaryAdapterFactory.DictionaryAdapterFactory()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory._CollectPropertiesb__13Type">
            <summary>Sets the shim of DictionaryAdapterFactory.&lt;CollectProperties&gt;b__13(Type t)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory._GetPropertyDescriptorsb__0FetchAttribute">
            <summary>Sets the shim of DictionaryAdapterFactory.&lt;GetPropertyDescriptors&gt;b__0(FetchAttribute b)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterFactory,System.Collections.IDictionary,``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterOf1NameValueCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterFactory,System.Collections.Specialized.NameValueCollection,``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(NameValueCollection nameValues)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterOf1TypeIDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterFactory,System.Type,System.Collections.Generic.IDictionary{System.String,``0},System.Object})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, IDictionary`2&lt;String,!!0&gt; dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterOf1XmlNode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterFactory,System.Xml.XmlNode,``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(XmlNode xmlNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterOf2IDictionaryOfStringM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterFactory,System.Collections.Generic.IDictionary{System.String,``1},``0})">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(IDictionary`2&lt;String,!!1&gt; dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.CreateAdapterMetaTypeTypeBuilderPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.CreateAdapterMeta(Type type, TypeBuilder typeBuilder, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterMetaType">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapterMeta(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterMetaTypeDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapterMeta(Type type, DictionaryAdapterMeta other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterMetaTypePropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapterMeta(Type type, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterTypeIDictionary">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterTypeIDictionaryPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterTypeNameValueCollection">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, NameValueCollection nameValues)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.GetAdapterTypeXmlNode">
            <summary>Sets the shim of DictionaryAdapterFactory.GetAdapter(Type type, XmlNode xmlNode)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.InternalGetAdapterMetaTypePropertyDescriptorDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterFactory.InternalGetAdapterMeta(Type type, PropertyDescriptor descriptor, DictionaryAdapterMeta other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterFactory.AllInstances.InternalGetAdapterTypeIDictionaryPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterFactory.InternalGetAdapter(Type type, IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterInstance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterInstance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AddCopyStrategyIDictionaryCopyStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.AddCopyStrategy(IDictionaryCopyStrategy copyStrategy)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.CoerceStrategyGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_CoerceStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.CoerceStrategySetIDictionaryCoerceStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.set_CoerceStrategy(IDictionaryCoerceStrategy value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.ConstructorIDictionaryDictionaryAdapterMetaPropertyDescriptorIDictionaryAdapterFactory">
            <summary>Sets the shim of DictionaryAdapterInstance.DictionaryAdapterInstance(IDictionary dictionary, DictionaryAdapterMeta meta, PropertyDescriptor descriptor, IDictionaryAdapterFactory factory)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.CopyStrategiesGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_CopyStrategies()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.CreateStrategyGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_CreateStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.CreateStrategySetIDictionaryCreateStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.set_CreateStrategy(IDictionaryCreateStrategy value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.DescriptorGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Descriptor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.DescriptorSetPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Descriptor(PropertyDescriptor value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.DictionaryGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Dictionary()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.DictionarySetIDictionary">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Dictionary(IDictionary value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.EqualityHashCodeStrategyGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_EqualityHashCodeStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.EqualityHashCodeStrategySetIDictionaryEqualityHashCodeStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.set_EqualityHashCodeStrategy(IDictionaryEqualityHashCodeStrategy value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.ExtendedPropertiesGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.FactoryGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Factory()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.FactorySetIDictionaryAdapterFactory">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Factory(IDictionaryAdapterFactory value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.InitializersGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Initializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.InitializersSetIDictionaryInitializerArray">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Initializers(IDictionaryInitializer[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.MergeInitializersIDictionaryInitializerArrayListOfIDictionaryBehavior">
            <summary>Sets the shim of DictionaryAdapterInstance.MergeInitializers(IDictionaryInitializer[] source, List`1&lt;IDictionaryBehavior&gt; behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.MergePropertiesIDictionaryOfStringPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterInstance.MergeProperties(IDictionary`2&lt;String,PropertyDescriptor&gt; source)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.MergePropertiesIDictionaryOfStringPropertyDescriptorListOfIDictionaryBehavior">
            <summary>Sets the shim of DictionaryAdapterInstance.MergeProperties(IDictionary`2&lt;String,PropertyDescriptor&gt; source, List`1&lt;IDictionaryBehavior&gt; behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.OldHashCodeGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_OldHashCode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.OldHashCodeSetNullableOfInt32">
            <summary>Sets the shim of DictionaryAdapterInstance.set_OldHashCode(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.PropertiesGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Properties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.PropertiesSetIDictionaryOfStringPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Properties(IDictionary`2&lt;String,PropertyDescriptor&gt; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.StaticConstructor">
            <summary>Sets the shim of DictionaryAdapterInstance.DictionaryAdapterInstance()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.AddCopyStrategyIDictionaryCopyStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.AddCopyStrategy(IDictionaryCopyStrategy copyStrategy)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.CoerceStrategyGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_CoerceStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.CoerceStrategySetIDictionaryCoerceStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.set_CoerceStrategy(IDictionaryCoerceStrategy value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.CopyStrategiesGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_CopyStrategies()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.CreateStrategyGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_CreateStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.CreateStrategySetIDictionaryCreateStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.set_CreateStrategy(IDictionaryCreateStrategy value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.DescriptorGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Descriptor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.DescriptorSetPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Descriptor(PropertyDescriptor value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.DictionaryGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Dictionary()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.DictionarySetIDictionary">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Dictionary(IDictionary value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.EqualityHashCodeStrategyGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_EqualityHashCodeStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.EqualityHashCodeStrategySetIDictionaryEqualityHashCodeStrategy">
            <summary>Sets the shim of DictionaryAdapterInstance.set_EqualityHashCodeStrategy(IDictionaryEqualityHashCodeStrategy value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.ExtendedPropertiesGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.FactoryGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Factory()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.FactorySetIDictionaryAdapterFactory">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Factory(IDictionaryAdapterFactory value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.InitializersGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Initializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.InitializersSetIDictionaryInitializerArray">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Initializers(IDictionaryInitializer[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.OldHashCodeGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_OldHashCode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.OldHashCodeSetNullableOfInt32">
            <summary>Sets the shim of DictionaryAdapterInstance.set_OldHashCode(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.PropertiesGet">
            <summary>Sets the shim of DictionaryAdapterInstance.get_Properties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterInstance.AllInstances.PropertiesSetIDictionaryOfStringPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterInstance.set_Properties(IDictionary`2&lt;String,PropertyDescriptor&gt; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryAdapterMeta</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterMeta)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.CollectSharedBehaviorsOf1M0ArrayIDictionaryMetaInitializerArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer[],System.Collections.Generic.List{``0}})">
            <summary>Sets the shim of DictionaryAdapterMeta.CollectSharedBehaviors(!!0[] source, IDictionaryMetaInitializer[] predicates)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.BehaviorsGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Behaviors()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.BehaviorsSetObjectArray">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Behaviors(Object[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.ConstructorTypeTypeObjectArrayIDictionaryMetaInitializerArrayIDictionaryInitializerArrayIDictionaryOfStringPropertyDescriptorIDictionaryAdapterFactoryFuncOfDictionaryAdapterInstanceIDictionaryAdapter">
            <summary>Sets the shim of DictionaryAdapterMeta.DictionaryAdapterMeta(Type type, Type implementation, Object[] behaviors, IDictionaryMetaInitializer[] metaInitializers, IDictionaryInitializer[] initializers, IDictionary`2&lt;String,PropertyDescriptor&gt; properties, IDictionaryAdapterFactory factory, Func`2&lt;DictionaryAdapterInstance,IDictionaryAdapter&gt; creator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.CreateDescriptor">
            <summary>Sets the shim of DictionaryAdapterMeta.CreateDescriptor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.CreateInstanceIDictionaryPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterMeta.CreateInstance(IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.ExtendedPropertiesGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.FactoryGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Factory()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.FactorySetIDictionaryAdapterFactory">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Factory(IDictionaryAdapterFactory value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.GetAdapterMetaType">
            <summary>Sets the shim of DictionaryAdapterMeta.GetAdapterMeta(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.ImplementationGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Implementation()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.ImplementationSetType">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Implementation(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.InitializeMeta">
            <summary>Sets the shim of DictionaryAdapterMeta.InitializeMeta()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.InitializersGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Initializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.InitializersSetIDictionaryInitializerArray">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Initializers(IDictionaryInitializer[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.MetaInitializersGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_MetaInitializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.MetaInitializersSetIDictionaryMetaInitializerArray">
            <summary>Sets the shim of DictionaryAdapterMeta.set_MetaInitializers(IDictionaryMetaInitializer[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.PropertiesGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Properties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.PropertiesSetIDictionaryOfStringPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Properties(IDictionary`2&lt;String,PropertyDescriptor&gt; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.TypeGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Type()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.TypeSetType">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Type(Type value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.BehaviorsGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Behaviors()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.BehaviorsSetObjectArray">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Behaviors(Object[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.CreateDescriptor">
            <summary>Sets the shim of DictionaryAdapterMeta.CreateDescriptor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.CreateInstanceIDictionaryPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterMeta.CreateInstance(IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.ExtendedPropertiesGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.FactoryGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Factory()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.FactorySetIDictionaryAdapterFactory">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Factory(IDictionaryAdapterFactory value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.GetAdapterMetaType">
            <summary>Sets the shim of DictionaryAdapterMeta.GetAdapterMeta(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.ImplementationGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Implementation()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.ImplementationSetType">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Implementation(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.InitializeMeta">
            <summary>Sets the shim of DictionaryAdapterMeta.InitializeMeta()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.InitializersGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Initializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.InitializersSetIDictionaryInitializerArray">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Initializers(IDictionaryInitializer[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.MetaInitializersGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_MetaInitializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.MetaInitializersSetIDictionaryMetaInitializerArray">
            <summary>Sets the shim of DictionaryAdapterMeta.set_MetaInitializers(IDictionaryMetaInitializer[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.PropertiesGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Properties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.PropertiesSetIDictionaryOfStringPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Properties(IDictionary`2&lt;String,PropertyDescriptor&gt; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.TypeGet">
            <summary>Sets the shim of DictionaryAdapterMeta.get_Type()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryAdapterMeta.AllInstances.TypeSetType">
            <summary>Sets the shim of DictionaryAdapterMeta.set_Type(Type value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.#ctor(Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.Constructor">
            <summary>Sets the shim of DictionaryBehaviorAttribute.DictionaryBehaviorAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.Copy">
            <summary>Sets the shim of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.ExecutionOrderGet">
            <summary>Sets the shim of DictionaryBehaviorAttribute.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.ExecutionOrderSetInt32">
            <summary>Sets the shim of DictionaryBehaviorAttribute.set_ExecutionOrder(Int32 value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.AllInstances.Copy">
            <summary>Sets the shim of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.AllInstances.ExecutionOrderGet">
            <summary>Sets the shim of DictionaryBehaviorAttribute.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryBehaviorAttribute.AllInstances.ExecutionOrderSetInt32">
            <summary>Sets the shim of DictionaryBehaviorAttribute.set_ExecutionOrder(Int32 value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DictionaryValidateGroup</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.#ctor(Castle.Components.DictionaryAdapter.DictionaryValidateGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.Bind(Castle.Components.DictionaryAdapter.IDictionaryValidate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.Bind(System.ComponentModel.IDataErrorInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AddValidatorIDictionaryValidator">
            <summary>Sets the shim of DictionaryValidateGroup.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.CanValidateGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_CanValidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.CanValidateSetBoolean">
            <summary>Sets the shim of DictionaryValidateGroup.set_CanValidate(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.ConstructorObjectArrayIDictionaryAdapter">
            <summary>Sets the shim of DictionaryValidateGroup.DictionaryValidateGroup(Object[] groups, IDictionaryAdapter adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.Dispose">
            <summary>Sets the shim of DictionaryValidateGroup.Dispose()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.ErrorGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_Error()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.IsValidGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_IsValid()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.ItemGetString">
            <summary>Sets the shim of DictionaryValidateGroup.get_Item(String columnName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryValidateGroup.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryValidateGroup.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.ValidateGroupsObjectArray">
            <summary>Sets the shim of DictionaryValidateGroup.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.ValidatorsGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_Validators()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup._ctorb__1PropertyDescriptor">
            <summary>Sets the shim of DictionaryValidateGroup.&lt;.ctor&gt;b__1(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup._ctorb__5ObjectPropertyChangedEventArgs">
            <summary>Sets the shim of DictionaryValidateGroup.&lt;.ctor&gt;b__5(Object sender, PropertyChangedEventArgs args)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup._get_Errorb__bString">
            <summary>Sets the shim of DictionaryValidateGroup.&lt;get_Error&gt;b__b(String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup._get_Errorb__cString">
            <summary>Sets the shim of DictionaryValidateGroup.&lt;get_Error&gt;b__c(String errors)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.AddValidatorIDictionaryValidator">
            <summary>Sets the shim of DictionaryValidateGroup.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.CanValidateGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_CanValidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.CanValidateSetBoolean">
            <summary>Sets the shim of DictionaryValidateGroup.set_CanValidate(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.Dispose">
            <summary>Sets the shim of DictionaryValidateGroup.Dispose()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.ErrorGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_Error()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.IsValidGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_IsValid()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.ItemGetString">
            <summary>Sets the shim of DictionaryValidateGroup.get_Item(String columnName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryValidateGroup.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of DictionaryValidateGroup.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.ValidateGroupsObjectArray">
            <summary>Sets the shim of DictionaryValidateGroup.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances.ValidatorsGet">
            <summary>Sets the shim of DictionaryValidateGroup.get_Validators()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances._ctorb__5ObjectPropertyChangedEventArgs">
            <summary>Sets the shim of DictionaryValidateGroup.&lt;.ctor&gt;b__5(Object sender, PropertyChangedEventArgs args)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDictionaryValidateGroup.AllInstances._get_Errorb__bString">
            <summary>Sets the shim of DictionaryValidateGroup.&lt;get_Error&gt;b__b(String propertyName)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DynamicValue`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.#ctor(Castle.Components.DictionaryAdapter.DynamicValue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.Bind(Castle.Components.DictionaryAdapter.IDynamicValue)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.Bind(Castle.Components.DictionaryAdapter.IDynamicValue{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.CastleComponentsDictionaryAdapterIDynamicValueGetValue">
            <summary>Sets the shim of DynamicValue`1.Castle.Components.DictionaryAdapter.IDynamicValue.GetValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.Constructor">
            <summary>Sets the shim of DynamicValue`1.DynamicValue`1()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.ToString">
            <summary>Sets the shim of DynamicValue`1.ToString()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.AllInstances.CastleComponentsDictionaryAdapterIDynamicValueGetValue">
            <summary>Sets the shim of DynamicValue`1.Castle.Components.DictionaryAdapter.IDynamicValue.GetValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValue`1.AllInstances.ToString01">
            <summary>Sets the shim of DynamicValue`1.ToString()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.DynamicValueDelegate`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.#ctor(Castle.Components.DictionaryAdapter.DynamicValueDelegate{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.Bind(Castle.Components.DictionaryAdapter.IDynamicValue)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.Bind(Castle.Components.DictionaryAdapter.IDynamicValue{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.ConstructorFuncOfT0">
            <summary>Sets the shim of DynamicValueDelegate`1.DynamicValueDelegate`1(Func`1&lt;!0&gt; dynamicDelegate)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.ValueGet">
            <summary>Sets the shim of DynamicValueDelegate`1.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimDynamicValueDelegate`1.AllInstances.ValueGet">
            <summary>Sets the shim of DynamicValueDelegate`1.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.EditableBindingList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.#ctor(Castle.Components.DictionaryAdapter.EditableBindingList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.ComponentModel.IBindingList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.ComponentModel.ICancelAddNew)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.ComponentModel.IChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.ComponentModel.IEditableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.ComponentModel.IRaiseItemChangedEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.ComponentModel.IRevertibleChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AcceptChanges">
            <summary>Sets the shim of EditableBindingList`1.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.BeginEdit">
            <summary>Sets the shim of EditableBindingList`1.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.CancelEdit">
            <summary>Sets the shim of EditableBindingList`1.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.Constructor">
            <summary>Sets the shim of EditableBindingList`1.EditableBindingList`1()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.ConstructorIListOfT0">
            <summary>Sets the shim of EditableBindingList`1.EditableBindingList`1(IList`1&lt;!0&gt; initial)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.EndEdit">
            <summary>Sets the shim of EditableBindingList`1.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.IsChangedGet">
            <summary>Sets the shim of EditableBindingList`1.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.RejectChanges">
            <summary>Sets the shim of EditableBindingList`1.RejectChanges()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances.AcceptChanges">
            <summary>Sets the shim of EditableBindingList`1.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances.BeginEdit">
            <summary>Sets the shim of EditableBindingList`1.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances.CancelEdit">
            <summary>Sets the shim of EditableBindingList`1.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances.EndEdit">
            <summary>Sets the shim of EditableBindingList`1.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances.IsChangedGet">
            <summary>Sets the shim of EditableBindingList`1.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableBindingList`1.AllInstances.RejectChanges">
            <summary>Sets the shim of EditableBindingList`1.RejectChanges()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList">
            <summary>Shim type of Castle.Components.DictionaryAdapter.EditableList</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.#ctor(Castle.Components.DictionaryAdapter.EditableList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.ComponentModel.IChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.ComponentModel.IEditableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.ComponentModel.IRevertibleChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.Generic.ICollection{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.Generic.IList{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.Generic.IReadOnlyCollection{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Bind(System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.Constructor">
            <summary>Sets the shim of EditableList.EditableList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.ConstructorIEnumerableOfObject">
            <summary>Sets the shim of EditableList.EditableList(IEnumerable`1&lt;Object&gt; collection)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.EditableList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.#ctor(Castle.Components.DictionaryAdapter.EditableList{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.ComponentModel.IChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.ComponentModel.IEditableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.ComponentModel.IRevertibleChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AcceptChanges">
            <summary>Sets the shim of EditableList`1.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.BeginEdit">
            <summary>Sets the shim of EditableList`1.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.CancelEdit">
            <summary>Sets the shim of EditableList`1.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.Constructor">
            <summary>Sets the shim of EditableList`1.EditableList`1()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.ConstructorIEnumerableOfT0">
            <summary>Sets the shim of EditableList`1.EditableList`1(IEnumerable`1&lt;!0&gt; collection)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.EndEdit">
            <summary>Sets the shim of EditableList`1.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.IsChangedGet">
            <summary>Sets the shim of EditableList`1.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.RejectChanges">
            <summary>Sets the shim of EditableList`1.RejectChanges()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances.AcceptChanges">
            <summary>Sets the shim of EditableList`1.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances.BeginEdit">
            <summary>Sets the shim of EditableList`1.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances.CancelEdit">
            <summary>Sets the shim of EditableList`1.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances.EndEdit">
            <summary>Sets the shim of EditableList`1.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances.IsChangedGet">
            <summary>Sets the shim of EditableList`1.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimEditableList`1.AllInstances.RejectChanges">
            <summary>Sets the shim of EditableList`1.RejectChanges()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.FetchAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.#ctor(Castle.Components.DictionaryAdapter.FetchAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.Constructor">
            <summary>Sets the shim of FetchAttribute.FetchAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.ConstructorBoolean">
            <summary>Sets the shim of FetchAttribute.FetchAttribute(Boolean fetch)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.FetchGet">
            <summary>Sets the shim of FetchAttribute.get_Fetch()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.FetchSetBoolean">
            <summary>Sets the shim of FetchAttribute.set_Fetch(Boolean value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.AllInstances.FetchGet">
            <summary>Sets the shim of FetchAttribute.get_Fetch()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimFetchAttribute.AllInstances.FetchSetBoolean">
            <summary>Sets the shim of FetchAttribute.set_Fetch(Boolean value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.GenericDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter.ForDictionaryAdapterOf1IDictionaryOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{System.String,``0},Castle.Components.DictionaryAdapter.GenericDictionaryAdapter{``0}})">
            <summary>Sets the shim of GenericDictionaryAdapter.ForDictionaryAdapter(IDictionary`2&lt;String,!!0&gt; dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.GenericDictionaryAdapter`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.#ctor(Castle.Components.DictionaryAdapter.GenericDictionaryAdapter{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.ConstructorIDictionaryOfStringT0">
            <summary>Sets the shim of GenericDictionaryAdapter`1.GenericDictionaryAdapter`1(IDictionary`2&lt;String,!0&gt; dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.ContainsObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.GetKeyObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.GetKey(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.IsReadOnlyGet">
            <summary>Sets the shim of GenericDictionaryAdapter`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.ItemGetObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.ItemSetObjectObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.set_Item(Object key, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.AllInstances.ContainsObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of GenericDictionaryAdapter`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.AllInstances.ItemGetObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGenericDictionaryAdapter`1.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of GenericDictionaryAdapter`1.set_Item(Object key, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.GroupAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.#ctor(Castle.Components.DictionaryAdapter.GroupAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.ConstructorObject">
            <summary>Sets the shim of GroupAttribute.GroupAttribute(Object group)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.ConstructorObjectArray">
            <summary>Sets the shim of GroupAttribute.GroupAttribute(Object[] group)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.GroupGet">
            <summary>Sets the shim of GroupAttribute.get_Group()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.GroupSetObjectArray">
            <summary>Sets the shim of GroupAttribute.set_Group(Object[] value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.AllInstances.GroupGet">
            <summary>Sets the shim of GroupAttribute.get_Group()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimGroupAttribute.AllInstances.GroupSetObjectArray">
            <summary>Sets the shim of GroupAttribute.set_Group(Object[] value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.IfExistsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.#ctor(Castle.Components.DictionaryAdapter.IfExistsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.Constructor">
            <summary>Sets the shim of IfExistsAttribute.IfExistsAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimIfExistsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.KeyAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.#ctor(Castle.Components.DictionaryAdapter.KeyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of KeyAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.ConstructorString">
            <summary>Sets the shim of KeyAttribute.KeyAttribute(String key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.ConstructorStringArray">
            <summary>Sets the shim of KeyAttribute.KeyAttribute(String[] keys)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.KeyGet">
            <summary>Sets the shim of KeyAttribute.get_Key()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.KeySetString">
            <summary>Sets the shim of KeyAttribute.set_Key(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of KeyAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.AllInstances.KeyGet">
            <summary>Sets the shim of KeyAttribute.get_Key()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyAttribute.AllInstances.KeySetString">
            <summary>Sets the shim of KeyAttribute.set_Key(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.KeyPrefixAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.#ctor(Castle.Components.DictionaryAdapter.KeyPrefixAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of KeyPrefixAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.Constructor">
            <summary>Sets the shim of KeyPrefixAttribute.KeyPrefixAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.ConstructorString">
            <summary>Sets the shim of KeyPrefixAttribute.KeyPrefixAttribute(String keyPrefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.KeyPrefixGet">
            <summary>Sets the shim of KeyPrefixAttribute.get_KeyPrefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.KeyPrefixSetString">
            <summary>Sets the shim of KeyPrefixAttribute.set_KeyPrefix(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of KeyPrefixAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.AllInstances.KeyPrefixGet">
            <summary>Sets the shim of KeyPrefixAttribute.get_KeyPrefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeyPrefixAttribute.AllInstances.KeyPrefixSetString">
            <summary>Sets the shim of KeyPrefixAttribute.set_KeyPrefix(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.KeySubstitutionAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.#ctor(Castle.Components.DictionaryAdapter.KeySubstitutionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of KeySubstitutionAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.ConstructorStringString">
            <summary>Sets the shim of KeySubstitutionAttribute.KeySubstitutionAttribute(String oldValue, String newValue)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimKeySubstitutionAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of KeySubstitutionAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.ListProjection`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.#ctor(Castle.Components.DictionaryAdapter.ListProjection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(Castle.Components.DictionaryAdapter.IBindingListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(Castle.Components.DictionaryAdapter.ICollectionProjection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(Castle.Components.DictionaryAdapter.IBindingList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(Castle.Components.DictionaryAdapter.ICollectionAdapterObserver{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.ComponentModel.IBindingList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.ComponentModel.ICancelAddNew)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.ComponentModel.IChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.ComponentModel.IEditableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.ComponentModel.IRaiseItemChangedEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.ComponentModel.IRevertibleChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AcceptChanges">
            <summary>Sets the shim of ListProjection`1.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AdapterGet">
            <summary>Sets the shim of ListProjection`1.get_Adapter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AddNew">
            <summary>Sets the shim of ListProjection`1.AddNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AddT0">
            <summary>Sets the shim of ListProjection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllowEditCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllowEditSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllowNewCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllowNewSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllowRemoveCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllowRemoveSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AsBindingListGet">
            <summary>Sets the shim of ListProjection`1.get_AsBindingList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AttachPropertyChangedT0">
            <summary>Sets the shim of ListProjection`1.AttachPropertyChanged(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.BeginEdit">
            <summary>Sets the shim of ListProjection`1.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CanHandleObjectPropertyChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.CanHandle(Object sender, PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CancelEdit">
            <summary>Sets the shim of ListProjection`1.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CancelNewInt32">
            <summary>Sets the shim of ListProjection`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterIBindingListTAddIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterIBindingListTApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterIBindingListTFindPropertyDescriptorObject">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterIBindingListTRemoveIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterIBindingListTRemoveSort">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveSort()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnInsertedT0Int32">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnInsertingT0">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnInserting(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnRemovedT0Int32">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnRemovingT0">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnReplacedT0T0Int32">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnReplacingT0T0">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionProjectionClearReferences">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionProjection.ClearReferences()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CastleComponentsDictionaryAdapterICollectionProjectionReplaceIEnumerable">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionProjection.Replace(IEnumerable items)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.Clear">
            <summary>Sets the shim of ListProjection`1.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ComparerGet">
            <summary>Sets the shim of ListProjection`1.get_Comparer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ConstructorICollectionAdapterOfT0">
            <summary>Sets the shim of ListProjection`1.ListProjection`1(ICollectionAdapter`1&lt;!0&gt; adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ContainsT0">
            <summary>Sets the shim of ListProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of ListProjection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.CountGet">
            <summary>Sets the shim of ListProjection`1.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.DetachPropertyChangedT0">
            <summary>Sets the shim of ListProjection`1.DetachPropertyChanged(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.EndEdit">
            <summary>Sets the shim of ListProjection`1.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.EndNewInt32">
            <summary>Sets the shim of ListProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.EventsEnabledGet">
            <summary>Sets the shim of ListProjection`1.get_EventsEnabled()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.GetChangedPropertyPropertyChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.GetChangedProperty(PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.GetEnumerator">
            <summary>Sets the shim of ListProjection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.HandlePropertyChangedObjectPropertyChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.HandlePropertyChanged(Object sender, PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IndexOfT0">
            <summary>Sets the shim of ListProjection`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.InsertInt32T0">
            <summary>Sets the shim of ListProjection`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsChangedGet">
            <summary>Sets the shim of ListProjection`1.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsNewInt32">
            <summary>Sets the shim of ListProjection`1.IsNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of ListProjection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsSortedCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsSortedSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ListProjection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ItemGetInt32">
            <summary>Sets the shim of ListProjection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ItemSetInt32T0">
            <summary>Sets the shim of ListProjection`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ListChangedAddListChangedEventHandler">
            <summary>Sets the shim of ListProjection`1.add_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ListChangedRemoveListChangedEventHandler">
            <summary>Sets the shim of ListProjection`1.remove_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.NotifyListChangedListChangedTypeInt32">
            <summary>Sets the shim of ListProjection`1.NotifyListChanged(ListChangedType type, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.NotifyListReset">
            <summary>Sets the shim of ListProjection`1.NotifyListReset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnInsertedT0Int32">
            <summary>Sets the shim of ListProjection`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnInsertingT0">
            <summary>Sets the shim of ListProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnListChangedListChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.OnListChanged(ListChangedEventArgs args)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnRemovedT0Int32">
            <summary>Sets the shim of ListProjection`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnRemovingT0">
            <summary>Sets the shim of ListProjection`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnReplacedT0T0Int32">
            <summary>Sets the shim of ListProjection`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.OnReplacingT0T0">
            <summary>Sets the shim of ListProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.RaisesItemChangedEventsSystemComponentModelIRaiseItemChangedEventsget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.RejectChanges">
            <summary>Sets the shim of ListProjection`1.RejectChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.RemoveAtInt32">
            <summary>Sets the shim of ListProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.RemoveT0">
            <summary>Sets the shim of ListProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ReplaceIEnumerableOfT0">
            <summary>Sets the shim of ListProjection`1.Replace(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.ResumeEvents">
            <summary>Sets the shim of ListProjection`1.ResumeEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SortDirectionCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SortDirectionSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SortPropertyCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SortPropertySystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SupportsChangeNotificationCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SupportsChangeNotificationSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SupportsSearchingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SupportsSearchingSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SupportsSortingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSorting()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SupportsSortingSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SupportsSorting()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SuspendEvents">
            <summary>Sets the shim of ListProjection`1.SuspendEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ListProjection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of ListProjection`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ListProjection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ListProjection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsIListAddObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Add(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Contains(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.IndexOf(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Insert(Int32 index, Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemComponentModelIBindingListAddIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemComponentModelIBindingListAddNew">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.AddNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemComponentModelIBindingListApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemComponentModelIBindingListFindPropertyDescriptorObject">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemComponentModelIBindingListRemoveIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.SystemComponentModelIBindingListRemoveSort">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.RemoveSort()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.TryGetChangedIndexT0">
            <summary>Sets the shim of ListProjection`1.TryGetChangedIndex(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.TryGetChangedItemObjectT0Out">
            <summary>Sets the shim of ListProjection`1.TryGetChangedItem(Object sender, !0&amp; item)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AcceptChanges">
            <summary>Sets the shim of ListProjection`1.AcceptChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AdapterGet">
            <summary>Sets the shim of ListProjection`1.get_Adapter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AddNew">
            <summary>Sets the shim of ListProjection`1.AddNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AddT0">
            <summary>Sets the shim of ListProjection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AllowEditCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AllowEditSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AllowNewCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AllowNewSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AllowRemoveCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AllowRemoveSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AsBindingListGet">
            <summary>Sets the shim of ListProjection`1.get_AsBindingList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.AttachPropertyChangedT0">
            <summary>Sets the shim of ListProjection`1.AttachPropertyChanged(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.BeginEdit">
            <summary>Sets the shim of ListProjection`1.BeginEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CanHandleObjectPropertyChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.CanHandle(Object sender, PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CancelEdit">
            <summary>Sets the shim of ListProjection`1.CancelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CancelNewInt32">
            <summary>Sets the shim of ListProjection`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTAddIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTFindPropertyDescriptorObject">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTRemoveIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterIBindingListTRemoveSort">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.RemoveSort()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnInsertedT0Int32">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnInsertingT0">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnInserting(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnRemovedT0Int32">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnRemovingT0">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnReplacedT0T0Int32">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionAdapterObserverTOnReplacingT0T0">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionAdapterObserver&lt;T&gt;.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionProjectionClearReferences">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionProjection.ClearReferences()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CastleComponentsDictionaryAdapterICollectionProjectionReplaceIEnumerable">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.ICollectionProjection.Replace(IEnumerable items)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.Clear">
            <summary>Sets the shim of ListProjection`1.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ComparerGet">
            <summary>Sets the shim of ListProjection`1.get_Comparer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of ListProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of ListProjection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.CountGet">
            <summary>Sets the shim of ListProjection`1.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.DetachPropertyChangedT0">
            <summary>Sets the shim of ListProjection`1.DetachPropertyChanged(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.EndEdit">
            <summary>Sets the shim of ListProjection`1.EndEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.EndNewInt32">
            <summary>Sets the shim of ListProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.EventsEnabledGet">
            <summary>Sets the shim of ListProjection`1.get_EventsEnabled()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ListProjection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.HandlePropertyChangedObjectPropertyChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.HandlePropertyChanged(Object sender, PropertyChangedEventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of ListProjection`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of ListProjection`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsChangedGet">
            <summary>Sets the shim of ListProjection`1.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsNewInt32">
            <summary>Sets the shim of ListProjection`1.IsNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of ListProjection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsSortedCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsSortedSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ListProjection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ListProjection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of ListProjection`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ListChangedAddListChangedEventHandler">
            <summary>Sets the shim of ListProjection`1.add_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ListChangedRemoveListChangedEventHandler">
            <summary>Sets the shim of ListProjection`1.remove_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.NotifyListChangedListChangedTypeInt32">
            <summary>Sets the shim of ListProjection`1.NotifyListChanged(ListChangedType type, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.NotifyListReset">
            <summary>Sets the shim of ListProjection`1.NotifyListReset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnInsertedT0Int32">
            <summary>Sets the shim of ListProjection`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnInsertingT0">
            <summary>Sets the shim of ListProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnListChangedListChangedEventArgs">
            <summary>Sets the shim of ListProjection`1.OnListChanged(ListChangedEventArgs args)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnRemovedT0Int32">
            <summary>Sets the shim of ListProjection`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnRemovingT0">
            <summary>Sets the shim of ListProjection`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnReplacedT0T0Int32">
            <summary>Sets the shim of ListProjection`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.OnReplacingT0T0">
            <summary>Sets the shim of ListProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.RaisesItemChangedEventsSystemComponentModelIRaiseItemChangedEventsget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.RejectChanges">
            <summary>Sets the shim of ListProjection`1.RejectChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of ListProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.RemoveT0">
            <summary>Sets the shim of ListProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ReplaceIEnumerableOfT0">
            <summary>Sets the shim of ListProjection`1.Replace(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.ResumeEvents">
            <summary>Sets the shim of ListProjection`1.ResumeEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SortDirectionCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SortDirectionSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SortPropertyCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SortPropertySystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SupportsChangeNotificationCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SupportsChangeNotificationSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SupportsSearchingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SupportsSearchingSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SupportsSortingCastleComponentsDictionaryAdapterIBindingListTget">
            <summary>Sets the shim of ListProjection`1.Castle.Components.DictionaryAdapter.IBindingList&lt;T&gt;.get_SupportsSorting()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SupportsSortingSystemComponentModelIBindingListget">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.get_SupportsSorting()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SuspendEvents">
            <summary>Sets the shim of ListProjection`1.SuspendEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ListProjection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of ListProjection`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ListProjection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ListProjection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Add(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Contains(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.IndexOf(Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Insert(Int32 index, Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of ListProjection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemComponentModelIBindingListAddIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemComponentModelIBindingListAddNew">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.AddNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemComponentModelIBindingListApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemComponentModelIBindingListFindPropertyDescriptorObject">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemComponentModelIBindingListRemoveIndexPropertyDescriptor">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.SystemComponentModelIBindingListRemoveSort">
            <summary>Sets the shim of ListProjection`1.System.ComponentModel.IBindingList.RemoveSort()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.TryGetChangedIndexT0">
            <summary>Sets the shim of ListProjection`1.TryGetChangedIndex(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimListProjection`1.AllInstances.TryGetChangedItemObjectT0Out">
            <summary>Sets the shim of ListProjection`1.TryGetChangedItem(Object sender, !0&amp; item)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy">
            <summary>Shim type of Castle.Components.DictionaryAdapter.MemberwiseEqualityHashCodeStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.#ctor(Castle.Components.DictionaryAdapter.MemberwiseEqualityHashCodeStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.Bind(Castle.Components.DictionaryAdapter.IDictionaryEqualityHashCodeStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.Bind(Castle.Components.DictionaryAdapter.IDictionaryInitializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.Bind(System.Collections.Generic.IEqualityComparer{Castle.Components.DictionaryAdapter.IDictionaryAdapter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.CastleComponentsDictionaryAdapterIDictionaryInitializerInitializeIDictionaryAdapterObjectArray">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.Castle.Components.DictionaryAdapter.IDictionaryInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.Constructor">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.MemberwiseEqualityHashCodeStrategy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.EqualsIDictionaryAdapterIDictionaryAdapter">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.Equals(IDictionaryAdapter adapter1, IDictionaryAdapter adapter2)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.GetHashCodeIDictionaryAdapter">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.GetHashCode(IDictionaryAdapter adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.GetHashCodeIDictionaryAdapterInt32Out">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.GetHashCode(IDictionaryAdapter adapter, Int32&amp; hashCode)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.AllInstances.CastleComponentsDictionaryAdapterIDictionaryInitializerInitializeIDictionaryAdapterObjectArray">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.Castle.Components.DictionaryAdapter.IDictionaryInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.AllInstances.EqualsIDictionaryAdapterIDictionaryAdapter">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.Equals(IDictionaryAdapter adapter1, IDictionaryAdapter adapter2)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.AllInstances.GetHashCodeIDictionaryAdapter">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.GetHashCode(IDictionaryAdapter adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMemberwiseEqualityHashCodeStrategy.AllInstances.GetHashCodeIDictionaryAdapterInt32Out">
            <summary>Sets the shim of MemberwiseEqualityHashCodeStrategy.GetHashCode(IDictionaryAdapter adapter, Int32&amp; hashCode)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.MultiLevelEditAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.#ctor(Castle.Components.DictionaryAdapter.MultiLevelEditAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryInitializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.Constructor">
            <summary>Sets the shim of MultiLevelEditAttribute.MultiLevelEditAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.InitializeIDictionaryAdapterObjectArray">
            <summary>Sets the shim of MultiLevelEditAttribute.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimMultiLevelEditAttribute.AllInstances.InitializeIDictionaryAdapterObjectArray">
            <summary>Sets the shim of MultiLevelEditAttribute.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.NameValueCollectionAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.#ctor(Castle.Components.DictionaryAdapter.NameValueCollectionAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.AdaptNameValueCollection">
            <summary>Sets the shim of NameValueCollectionAdapter.Adapt(NameValueCollection nameValues)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.ConstructorNameValueCollection">
            <summary>Sets the shim of NameValueCollectionAdapter.NameValueCollectionAdapter(NameValueCollection nameValues)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.ContainsObject">
            <summary>Sets the shim of NameValueCollectionAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.IsReadOnlyGet">
            <summary>Sets the shim of NameValueCollectionAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.ItemGetObject">
            <summary>Sets the shim of NameValueCollectionAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.ItemSetObjectObject">
            <summary>Sets the shim of NameValueCollectionAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.AllInstances.ContainsObject">
            <summary>Sets the shim of NameValueCollectionAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of NameValueCollectionAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.AllInstances.ItemGetObject">
            <summary>Sets the shim of NameValueCollectionAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNameValueCollectionAdapter.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of NameValueCollectionAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.NewGuidAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.#ctor(Castle.Components.DictionaryAdapter.NewGuidAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.Constructor">
            <summary>Sets the shim of NewGuidAttribute.NewGuidAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of NewGuidAttribute.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.StaticConstructor">
            <summary>Sets the shim of NewGuidAttribute.NewGuidAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimNewGuidAttribute.AllInstances.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of NewGuidAttribute.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.OnDemandAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.#ctor(Castle.Components.DictionaryAdapter.OnDemandAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.Constructor">
            <summary>Sets the shim of OnDemandAttribute.OnDemandAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.ConstructorObject">
            <summary>Sets the shim of OnDemandAttribute.OnDemandAttribute(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.ConstructorType">
            <summary>Sets the shim of OnDemandAttribute.OnDemandAttribute(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.GetInferredTypeIDictionaryAdapterPropertyDescriptorIValueInitializerOut">
            <summary>Sets the shim of OnDemandAttribute.GetInferredType(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, IValueInitializer&amp; initializer)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of OnDemandAttribute.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.IsAcceptedTypeType">
            <summary>Sets the shim of OnDemandAttribute.IsAcceptedType(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.TypeGet">
            <summary>Sets the shim of OnDemandAttribute.get_Type()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.TypeSetType">
            <summary>Sets the shim of OnDemandAttribute.set_Type(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.ValueGet">
            <summary>Sets the shim of OnDemandAttribute.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.ValueSetObject">
            <summary>Sets the shim of OnDemandAttribute.set_Value(Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.AllInstances.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of OnDemandAttribute.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.AllInstances.TypeGet">
            <summary>Sets the shim of OnDemandAttribute.get_Type()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.AllInstances.TypeSetType">
            <summary>Sets the shim of OnDemandAttribute.set_Type(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of OnDemandAttribute.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimOnDemandAttribute.AllInstances.ValueSetObject">
            <summary>Sets the shim of OnDemandAttribute.set_Value(Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx">
            <summary>Shim type of Castle.Components.DictionaryAdapter.PropertyChangedEventArgsEx</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.#ctor(Castle.Components.DictionaryAdapter.PropertyChangedEventArgsEx)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.ConstructorStringObjectObject">
            <summary>Sets the shim of PropertyChangedEventArgsEx.PropertyChangedEventArgsEx(String propertyName, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.NewValueGet">
            <summary>Sets the shim of PropertyChangedEventArgsEx.get_NewValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.OldValueGet">
            <summary>Sets the shim of PropertyChangedEventArgsEx.get_OldValue()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.AllInstances.NewValueGet">
            <summary>Sets the shim of PropertyChangedEventArgsEx.get_NewValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangedEventArgsEx.AllInstances.OldValueGet">
            <summary>Sets the shim of PropertyChangedEventArgsEx.get_OldValue()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx">
            <summary>Shim type of Castle.Components.DictionaryAdapter.PropertyChangingEventArgsEx</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.#ctor(Castle.Components.DictionaryAdapter.PropertyChangingEventArgsEx)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.CancelGet">
            <summary>Sets the shim of PropertyChangingEventArgsEx.get_Cancel()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.CancelSetBoolean">
            <summary>Sets the shim of PropertyChangingEventArgsEx.set_Cancel(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.ConstructorStringObjectObject">
            <summary>Sets the shim of PropertyChangingEventArgsEx.PropertyChangingEventArgsEx(String propertyName, Object oldValue, Object newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.NewValueGet">
            <summary>Sets the shim of PropertyChangingEventArgsEx.get_NewValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.OldValueGet">
            <summary>Sets the shim of PropertyChangingEventArgsEx.get_OldValue()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.AllInstances.CancelGet">
            <summary>Sets the shim of PropertyChangingEventArgsEx.get_Cancel()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.AllInstances.CancelSetBoolean">
            <summary>Sets the shim of PropertyChangingEventArgsEx.set_Cancel(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.AllInstances.NewValueGet">
            <summary>Sets the shim of PropertyChangingEventArgsEx.get_NewValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyChangingEventArgsEx.AllInstances.OldValueGet">
            <summary>Sets the shim of PropertyChangingEventArgsEx.get_OldValue()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.PropertyDescriptor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.#ctor(Castle.Components.DictionaryAdapter.PropertyDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Bind(Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AddBehaviorIDictionaryBehavior">
            <summary>Sets the shim of PropertyDescriptor.AddBehavior(IDictionaryBehavior behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AddBehaviorsIDictionaryBehaviorArray">
            <summary>Sets the shim of PropertyDescriptor.AddBehaviors(IDictionaryBehavior[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AddBehaviorsIEnumerableOfIDictionaryBehavior">
            <summary>Sets the shim of PropertyDescriptor.AddBehaviors(IEnumerable`1&lt;IDictionaryBehavior&gt; behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AnnotationsGet">
            <summary>Sets the shim of PropertyDescriptor.get_Annotations()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AnnotationsSetObjectArray">
            <summary>Sets the shim of PropertyDescriptor.set_Annotations(Object[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.BehaviorsGet">
            <summary>Sets the shim of PropertyDescriptor.get_Behaviors()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.BehaviorsInternalGet">
            <summary>Sets the shim of PropertyDescriptor.get_BehaviorsInternal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Constructor">
            <summary>Sets the shim of PropertyDescriptor.PropertyDescriptor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.ConstructorObjectArray">
            <summary>Sets the shim of PropertyDescriptor.PropertyDescriptor(Object[] annotations)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.ConstructorPropertyDescriptorBoolean">
            <summary>Sets the shim of PropertyDescriptor.PropertyDescriptor(PropertyDescriptor source, Boolean copyBehaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.ConstructorPropertyInfoObjectArray">
            <summary>Sets the shim of PropertyDescriptor.PropertyDescriptor(PropertyInfo property, Object[] annotations)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.Copy">
            <summary>Sets the shim of PropertyDescriptor.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.CopyBehaviorsPropertyDescriptor">
            <summary>Sets the shim of PropertyDescriptor.CopyBehaviors(PropertyDescriptor other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.ExecutionOrderGet">
            <summary>Sets the shim of PropertyDescriptor.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.ExtendedPropertiesGet">
            <summary>Sets the shim of PropertyDescriptor.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.FetchGet">
            <summary>Sets the shim of PropertyDescriptor.get_Fetch()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.FetchSetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_Fetch(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.GetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of PropertyDescriptor.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of PropertyDescriptor.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor descriptor, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.GettersGet">
            <summary>Sets the shim of PropertyDescriptor.get_Getters()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.IfExistsGet">
            <summary>Sets the shim of PropertyDescriptor.get_IfExists()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.IfExistsSetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_IfExists(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.InitializersGet">
            <summary>Sets the shim of PropertyDescriptor.get_Initializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.IsDynamicPropertyGet">
            <summary>Sets the shim of PropertyDescriptor.get_IsDynamicProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.IsDynamicPropertySetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_IsDynamicProperty(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.KeyBuildersGet">
            <summary>Sets the shim of PropertyDescriptor.get_KeyBuilders()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.MetaInitializersGet">
            <summary>Sets the shim of PropertyDescriptor.get_MetaInitializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.ObtainTypeConverter">
            <summary>Sets the shim of PropertyDescriptor.ObtainTypeConverter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.PropertyGet">
            <summary>Sets the shim of PropertyDescriptor.get_Property()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.PropertyNameGet">
            <summary>Sets the shim of PropertyDescriptor.get_PropertyName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.PropertySetPropertyInfo">
            <summary>Sets the shim of PropertyDescriptor.set_Property(PropertyInfo value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.PropertyTypeGet">
            <summary>Sets the shim of PropertyDescriptor.get_PropertyType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.SettersGet">
            <summary>Sets the shim of PropertyDescriptor.get_Setters()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.StateGet">
            <summary>Sets the shim of PropertyDescriptor.get_State()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.StaticConstructor">
            <summary>Sets the shim of PropertyDescriptor.PropertyDescriptor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.SuppressNotificationsGet">
            <summary>Sets the shim of PropertyDescriptor.get_SuppressNotifications()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.SuppressNotificationsSetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_SuppressNotifications(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.TypeConverterGet">
            <summary>Sets the shim of PropertyDescriptor.get_TypeConverter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.TypeConverterSetTypeConverter">
            <summary>Sets the shim of PropertyDescriptor.set_TypeConverter(TypeConverter value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.AddBehaviorIDictionaryBehavior">
            <summary>Sets the shim of PropertyDescriptor.AddBehavior(IDictionaryBehavior behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.AddBehaviorsIDictionaryBehaviorArray">
            <summary>Sets the shim of PropertyDescriptor.AddBehaviors(IDictionaryBehavior[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.AddBehaviorsIEnumerableOfIDictionaryBehavior">
            <summary>Sets the shim of PropertyDescriptor.AddBehaviors(IEnumerable`1&lt;IDictionaryBehavior&gt; behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.AnnotationsGet">
            <summary>Sets the shim of PropertyDescriptor.get_Annotations()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.AnnotationsSetObjectArray">
            <summary>Sets the shim of PropertyDescriptor.set_Annotations(Object[] value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.BehaviorsGet">
            <summary>Sets the shim of PropertyDescriptor.get_Behaviors()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.BehaviorsInternalGet">
            <summary>Sets the shim of PropertyDescriptor.get_BehaviorsInternal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.Copy">
            <summary>Sets the shim of PropertyDescriptor.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.CopyBehaviorsPropertyDescriptor">
            <summary>Sets the shim of PropertyDescriptor.CopyBehaviors(PropertyDescriptor other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.ExecutionOrderGet">
            <summary>Sets the shim of PropertyDescriptor.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.ExtendedPropertiesGet">
            <summary>Sets the shim of PropertyDescriptor.get_ExtendedProperties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.FetchGet">
            <summary>Sets the shim of PropertyDescriptor.get_Fetch()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.FetchSetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_Fetch(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.GetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of PropertyDescriptor.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of PropertyDescriptor.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor descriptor, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.GettersGet">
            <summary>Sets the shim of PropertyDescriptor.get_Getters()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.IfExistsGet">
            <summary>Sets the shim of PropertyDescriptor.get_IfExists()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.IfExistsSetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_IfExists(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.InitializersGet">
            <summary>Sets the shim of PropertyDescriptor.get_Initializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.IsDynamicPropertyGet">
            <summary>Sets the shim of PropertyDescriptor.get_IsDynamicProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.IsDynamicPropertySetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_IsDynamicProperty(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.KeyBuildersGet">
            <summary>Sets the shim of PropertyDescriptor.get_KeyBuilders()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.MetaInitializersGet">
            <summary>Sets the shim of PropertyDescriptor.get_MetaInitializers()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.ObtainTypeConverter">
            <summary>Sets the shim of PropertyDescriptor.ObtainTypeConverter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.PropertyGet">
            <summary>Sets the shim of PropertyDescriptor.get_Property()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.PropertyNameGet">
            <summary>Sets the shim of PropertyDescriptor.get_PropertyName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.PropertySetPropertyInfo">
            <summary>Sets the shim of PropertyDescriptor.set_Property(PropertyInfo value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.PropertyTypeGet">
            <summary>Sets the shim of PropertyDescriptor.get_PropertyType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.SettersGet">
            <summary>Sets the shim of PropertyDescriptor.get_Setters()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.StateGet">
            <summary>Sets the shim of PropertyDescriptor.get_State()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.SuppressNotificationsGet">
            <summary>Sets the shim of PropertyDescriptor.get_SuppressNotifications()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.SuppressNotificationsSetBoolean">
            <summary>Sets the shim of PropertyDescriptor.set_SuppressNotifications(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.TypeConverterGet">
            <summary>Sets the shim of PropertyDescriptor.get_TypeConverter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimPropertyDescriptor.AllInstances.TypeConverterSetTypeConverter">
            <summary>Sets the shim of PropertyDescriptor.set_TypeConverter(TypeConverter value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.ReferenceAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.#ctor(Castle.Components.DictionaryAdapter.ReferenceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.Constructor">
            <summary>Sets the shim of ReferenceAttribute.ReferenceAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimReferenceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.RemoveIfAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.#ctor(Castle.Components.DictionaryAdapter.RemoveIfAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.ConstructOf1TypeString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.String,``0})">
            <summary>Sets the shim of RemoveIfAttribute.Construct(Type type, String paramName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.ConditionSetType">
            <summary>Sets the shim of RemoveIfAttribute.set_Condition(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.Constructor">
            <summary>Sets the shim of RemoveIfAttribute.RemoveIfAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.ConstructorICondition">
            <summary>Sets the shim of RemoveIfAttribute.RemoveIfAttribute(ICondition condition)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.ConstructorObjectArray">
            <summary>Sets the shim of RemoveIfAttribute.RemoveIfAttribute(Object[] values)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.ConstructorObjectArrayType">
            <summary>Sets the shim of RemoveIfAttribute.RemoveIfAttribute(Object[] values, Type comparerType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.ShouldRemoveObject">
            <summary>Sets the shim of RemoveIfAttribute.ShouldRemove(Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.AllInstances.ConditionSetType">
            <summary>Sets the shim of RemoveIfAttribute.set_Condition(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfAttribute.AllInstances.ShouldRemoveObject">
            <summary>Sets the shim of RemoveIfAttribute.ShouldRemove(Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.RemoveIfEmptyAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.#ctor(Castle.Components.DictionaryAdapter.RemoveIfEmptyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.ConditionGet">
            <summary>Sets the shim of RemoveIfEmptyAttribute.get_Condition()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.ConditionSetType">
            <summary>Sets the shim of RemoveIfEmptyAttribute.set_Condition(Type value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.Constructor">
            <summary>Sets the shim of RemoveIfEmptyAttribute.RemoveIfEmptyAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.AllInstances.ConditionGet">
            <summary>Sets the shim of RemoveIfEmptyAttribute.get_Condition()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimRemoveIfEmptyAttribute.AllInstances.ConditionSetType">
            <summary>Sets the shim of RemoveIfEmptyAttribute.set_Condition(Type value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.SetProjection`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.#ctor(Castle.Components.DictionaryAdapter.SetProjection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(Castle.Components.DictionaryAdapter.IBindingListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(Castle.Components.DictionaryAdapter.ICollectionProjection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(Castle.Components.DictionaryAdapter.IBindingList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(Castle.Components.DictionaryAdapter.ICollectionAdapterObserver{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.Generic.ISet{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.ComponentModel.IBindingList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.ComponentModel.ICancelAddNew)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.ComponentModel.IChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.ComponentModel.IEditableObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.ComponentModel.IRaiseItemChangedEvents)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.ComponentModel.IRevertibleChangeTracking)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AddT0">
            <summary>Sets the shim of SetProjection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Clear">
            <summary>Sets the shim of SetProjection`1.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.ConstructorICollectionAdapterOfT0">
            <summary>Sets the shim of SetProjection`1.SetProjection`1(ICollectionAdapter`1&lt;!0&gt; adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.ContainsT0">
            <summary>Sets the shim of SetProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.EndNewInt32">
            <summary>Sets the shim of SetProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.ExceptWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.ExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.IntersectWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.IsProperSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.IsProperSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.IsSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.IsSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.OnInsertingT0">
            <summary>Sets the shim of SetProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.OnReplacingT0T0">
            <summary>Sets the shim of SetProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.OverlapsIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.RemoveAtInt32">
            <summary>Sets the shim of SetProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.RemoveT0">
            <summary>Sets the shim of SetProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.Repopulate">
            <summary>Sets the shim of SetProjection`1.Repopulate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.SetEqualsIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.SymmetricExceptWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.SymmetricExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.UnionWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.UnionWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.AddT0">
            <summary>Sets the shim of SetProjection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.Clear">
            <summary>Sets the shim of SetProjection`1.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of SetProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.EndNewInt32">
            <summary>Sets the shim of SetProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.ExceptWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.ExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.IntersectWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IntersectWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.IsProperSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsProperSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.IsProperSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsProperSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.IsSubsetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsSubsetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.IsSupersetOfIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.IsSupersetOf(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.OnInsertingT0">
            <summary>Sets the shim of SetProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.OnReplacingT0T0">
            <summary>Sets the shim of SetProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.OverlapsIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.Overlaps(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of SetProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.RemoveT0">
            <summary>Sets the shim of SetProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.Repopulate">
            <summary>Sets the shim of SetProjection`1.Repopulate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.SetEqualsIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.SetEquals(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.SymmetricExceptWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.SymmetricExceptWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSetProjection`1.AllInstances.UnionWithIEnumerableOfT0">
            <summary>Sets the shim of SetProjection`1.UnionWith(IEnumerable`1&lt;!0&gt; other)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.StringFormatAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.#ctor(Castle.Components.DictionaryAdapter.StringFormatAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of StringFormatAttribute.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.ConstructorStringString">
            <summary>Sets the shim of StringFormatAttribute.StringFormatAttribute(String format, String properties)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.FormatGet">
            <summary>Sets the shim of StringFormatAttribute.get_Format()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.FormatSetString">
            <summary>Sets the shim of StringFormatAttribute.set_Format(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.GetFormatArgumentsIDictionaryAdapterString">
            <summary>Sets the shim of StringFormatAttribute.GetFormatArguments(IDictionaryAdapter dictionaryAdapter, String formattedPropertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.PropertiesGet">
            <summary>Sets the shim of StringFormatAttribute.get_Properties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.PropertiesSetString">
            <summary>Sets the shim of StringFormatAttribute.set_Properties(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.StaticConstructor">
            <summary>Sets the shim of StringFormatAttribute.StringFormatAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of StringFormatAttribute.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances.FormatGet">
            <summary>Sets the shim of StringFormatAttribute.get_Format()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances.FormatSetString">
            <summary>Sets the shim of StringFormatAttribute.set_Format(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances.GetFormatArgumentsIDictionaryAdapterString">
            <summary>Sets the shim of StringFormatAttribute.GetFormatArguments(IDictionaryAdapter dictionaryAdapter, String formattedPropertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances.PropertiesGet">
            <summary>Sets the shim of StringFormatAttribute.get_Properties()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringFormatAttribute.AllInstances.PropertiesSetString">
            <summary>Sets the shim of StringFormatAttribute.set_Properties(String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.StringListAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.#ctor(Castle.Components.DictionaryAdapter.StringListAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.BuildStringIEnumerableChar">
            <summary>Sets the shim of StringListAttribute.BuildString(IEnumerable enumerable, Char separator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of StringListAttribute.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.Constructor">
            <summary>Sets the shim of StringListAttribute.StringListAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.SeparatorGet">
            <summary>Sets the shim of StringListAttribute.get_Separator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.SeparatorSetChar">
            <summary>Sets the shim of StringListAttribute.set_Separator(Char value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of StringListAttribute.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.AllInstances.SeparatorGet">
            <summary>Sets the shim of StringListAttribute.get_Separator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringListAttribute.AllInstances.SeparatorSetChar">
            <summary>Sets the shim of StringListAttribute.set_Separator(Char value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.StringStorageAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.#ctor(Castle.Components.DictionaryAdapter.StringStorageAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.Constructor">
            <summary>Sets the shim of StringStorageAttribute.StringStorageAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringStorageAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.StringValuesAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.#ctor(Castle.Components.DictionaryAdapter.StringValuesAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.Constructor">
            <summary>Sets the shim of StringValuesAttribute.StringValuesAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.FormatGet">
            <summary>Sets the shim of StringValuesAttribute.get_Format()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.FormatSetString">
            <summary>Sets the shim of StringValuesAttribute.set_Format(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.GetPropertyAsStringPropertyDescriptorObject">
            <summary>Sets the shim of StringValuesAttribute.GetPropertyAsString(PropertyDescriptor property, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.AllInstances.FormatGet">
            <summary>Sets the shim of StringValuesAttribute.get_Format()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.AllInstances.FormatSetString">
            <summary>Sets the shim of StringValuesAttribute.set_Format(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimStringValuesAttribute.AllInstances.GetPropertyAsStringPropertyDescriptorObject">
            <summary>Sets the shim of StringValuesAttribute.GetPropertyAsString(PropertyDescriptor property, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.SuppressNotificationsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.#ctor(Castle.Components.DictionaryAdapter.SuppressNotificationsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.Bind(Castle.Components.DictionaryAdapter.IPropertyDescriptorInitializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.Constructor">
            <summary>Sets the shim of SuppressNotificationsAttribute.SuppressNotificationsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.InitializePropertyDescriptorObjectArray">
            <summary>Sets the shim of SuppressNotificationsAttribute.Initialize(PropertyDescriptor propertyDescriptor, Object[] behaviors)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimSuppressNotificationsAttribute.AllInstances.InitializePropertyDescriptorObjectArray">
            <summary>Sets the shim of SuppressNotificationsAttribute.Initialize(PropertyDescriptor propertyDescriptor, Object[] behaviors)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.TypeKeyPrefixAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.#ctor(Castle.Components.DictionaryAdapter.TypeKeyPrefixAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.Bind(Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of TypeKeyPrefixAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.Constructor">
            <summary>Sets the shim of TypeKeyPrefixAttribute.TypeKeyPrefixAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimTypeKeyPrefixAttribute.AllInstances.CastleComponentsDictionaryAdapterIDictionaryKeyBuilderGetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the shim of TypeKeyPrefixAttribute.Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.VirtualObject`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.#ctor(Castle.Components.DictionaryAdapter.VirtualObject{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.Bind(Castle.Components.DictionaryAdapter.IVirtual{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AddSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.AddSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.CastleComponentsDictionaryAdapterIVirtualRealize">
            <summary>Sets the shim of VirtualObject`1.Castle.Components.DictionaryAdapter.IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.CastleComponentsDictionaryAdapterIVirtualTNodeAddSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.Castle.Components.DictionaryAdapter.IVirtual&lt;TNode&gt;.AddSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.CastleComponentsDictionaryAdapterIVirtualTNodeRemoveSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.Castle.Components.DictionaryAdapter.IVirtual&lt;TNode&gt;.RemoveSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.Constructor">
            <summary>Sets the shim of VirtualObject`1.VirtualObject`1()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.ConstructorIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.VirtualObject`1(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.OnRealized">
            <summary>Sets the shim of VirtualObject`1.OnRealized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.Realize">
            <summary>Sets the shim of VirtualObject`1.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.RealizedAddEventHandler">
            <summary>Sets the shim of VirtualObject`1.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.RealizedRemoveEventHandler">
            <summary>Sets the shim of VirtualObject`1.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.RemoveSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.RemoveSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.AddSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.AddSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.CastleComponentsDictionaryAdapterIVirtualRealize">
            <summary>Sets the shim of VirtualObject`1.Castle.Components.DictionaryAdapter.IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.CastleComponentsDictionaryAdapterIVirtualTNodeAddSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.Castle.Components.DictionaryAdapter.IVirtual&lt;TNode&gt;.AddSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.CastleComponentsDictionaryAdapterIVirtualTNodeRemoveSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.Castle.Components.DictionaryAdapter.IVirtual&lt;TNode&gt;.RemoveSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.OnRealized">
            <summary>Sets the shim of VirtualObject`1.OnRealized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.Realize">
            <summary>Sets the shim of VirtualObject`1.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.RealizedAddEventHandler">
            <summary>Sets the shim of VirtualObject`1.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.RealizedRemoveEventHandler">
            <summary>Sets the shim of VirtualObject`1.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualObject`1.AllInstances.RemoveSiteIVirtualSiteOfT0">
            <summary>Sets the shim of VirtualObject`1.RemoveSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2">
            <summary>Shim type of Castle.Components.DictionaryAdapter.VirtualSite`2</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.#ctor(Castle.Components.DictionaryAdapter.VirtualSite{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.Bind(Castle.Components.DictionaryAdapter.IVirtualSite{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.Bind(System.IEquatable{Castle.Components.DictionaryAdapter.VirtualSite{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.ConstructorIVirtualTargetOfT0T1T1">
            <summary>Sets the shim of VirtualSite`2.VirtualSite`2(IVirtualTarget`2&lt;!0,!1&gt; target, !1 member)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.EqualsObject">
            <summary>Sets the shim of VirtualSite`2.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.EqualsVirtualSiteOfT0T1">
            <summary>Sets the shim of VirtualSite`2.Equals(VirtualSite`2&lt;!0,!1&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.GetHashCode">
            <summary>Sets the shim of VirtualSite`2.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.MemberGet">
            <summary>Sets the shim of VirtualSite`2.get_Member()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.OnRealizingT0">
            <summary>Sets the shim of VirtualSite`2.OnRealizing(!0 node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.StaticConstructor">
            <summary>Sets the shim of VirtualSite`2.VirtualSite`2()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.TargetGet">
            <summary>Sets the shim of VirtualSite`2.get_Target()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances.EqualsObject">
            <summary>Sets the shim of VirtualSite`2.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances.EqualsVirtualSiteOfT0T1">
            <summary>Sets the shim of VirtualSite`2.Equals(VirtualSite`2&lt;!0,!1&gt; other)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of VirtualSite`2.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances.MemberGet">
            <summary>Sets the shim of VirtualSite`2.get_Member()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances.OnRealizingT0">
            <summary>Sets the shim of VirtualSite`2.OnRealizing(!0 node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVirtualSite`2.AllInstances.TargetGet">
            <summary>Sets the shim of VirtualSite`2.get_Target()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.VolatileAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.#ctor(Castle.Components.DictionaryAdapter.VolatileAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.Constructor">
            <summary>Sets the shim of VolatileAttribute.VolatileAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimVolatileAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.XmlDefaultsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.#ctor(Castle.Components.DictionaryAdapter.XmlDefaultsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.Constructor">
            <summary>Sets the shim of XmlDefaultsAttribute.XmlDefaultsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.IsNullableGet">
            <summary>Sets the shim of XmlDefaultsAttribute.get_IsNullable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.IsNullableSetBoolean">
            <summary>Sets the shim of XmlDefaultsAttribute.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.QualifiedGet">
            <summary>Sets the shim of XmlDefaultsAttribute.get_Qualified()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.QualifiedSetBoolean">
            <summary>Sets the shim of XmlDefaultsAttribute.set_Qualified(Boolean value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.AllInstances.IsNullableGet">
            <summary>Sets the shim of XmlDefaultsAttribute.get_IsNullable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.AllInstances.IsNullableSetBoolean">
            <summary>Sets the shim of XmlDefaultsAttribute.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.AllInstances.QualifiedGet">
            <summary>Sets the shim of XmlDefaultsAttribute.get_Qualified()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlDefaultsAttribute.AllInstances.QualifiedSetBoolean">
            <summary>Sets the shim of XmlDefaultsAttribute.set_Qualified(Boolean value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.XmlNamespaceAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.#ctor(Castle.Components.DictionaryAdapter.XmlNamespaceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.ConstructorStringString">
            <summary>Sets the shim of XmlNamespaceAttribute.XmlNamespaceAttribute(String namespaceUri, String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.DefaultGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.DefaultSetBoolean">
            <summary>Sets the shim of XmlNamespaceAttribute.set_Default(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.NamespaceUriGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_NamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.NamespaceUriSetString">
            <summary>Sets the shim of XmlNamespaceAttribute.set_NamespaceUri(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.PrefixGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.PrefixSetString">
            <summary>Sets the shim of XmlNamespaceAttribute.set_Prefix(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.RootGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_Root()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.RootSetBoolean">
            <summary>Sets the shim of XmlNamespaceAttribute.set_Root(Boolean value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.DefaultGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.DefaultSetBoolean">
            <summary>Sets the shim of XmlNamespaceAttribute.set_Default(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.NamespaceUriGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_NamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.NamespaceUriSetString">
            <summary>Sets the shim of XmlNamespaceAttribute.set_NamespaceUri(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.PrefixGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.PrefixSetString">
            <summary>Sets the shim of XmlNamespaceAttribute.set_Prefix(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.RootGet">
            <summary>Sets the shim of XmlNamespaceAttribute.get_Root()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.ShimXmlNamespaceAttribute.AllInstances.RootSetBoolean">
            <summary>Sets the shim of XmlNamespaceAttribute.set_Root(Boolean value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.Contains(System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.ContainsObject">
            <summary>Sets the stub of AbstractDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractDictionaryAdapter</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.ItemGetObject">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the stub of AbstractDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.SyncRootGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.IsReadOnly">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.IsSynchronized">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.Item(System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapter.SyncRoot">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.#ctor(Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractDictionaryAdapterVisitor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitCollection(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Type,System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitCollectionIDictionaryAdapterPropertyDescriptorTypeObject">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Func{Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Boolean},System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Func`2&lt;PropertyDescriptor,Boolean&gt; selector, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanObject">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Func`2&lt;PropertyDescriptor,Boolean&gt; selector, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitDictionaryAdapterIDictionaryAdapterObject">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitInterface(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitInterfaceIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitProperty(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.VisitPropertyIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the stub of AbstractDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubAbstractDictionaryAdapterVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.BindingList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.#ctor(System.ComponentModel.BindingList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.InitializeStub">
            <summary>Initializes a new instance of type StubBindingList</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubBindingList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubBindingListInitializer`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.BindingListInitializer`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubBindingListInitializer`1.#ctor(System.Func{System.Int32,System.Object,System.Object},System.Func{System.Object},System.Func{System.Int32,System.Object,System.Object},System.Action{System.Int32},System.Action)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubBindingListInitializer`1.InitializeStub">
            <summary>Initializes a new instance of type StubBindingListInitializer</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubBindingListInitializer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubBindingListInitializer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubBindingListInitializer`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.CascadingDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.#ctor(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.Contains(System.Object)">
            <summary>Sets the stub of CascadingDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.ContainsObject">
            <summary>Sets the stub of CascadingDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubCascadingDictionaryAdapter</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the stub of CascadingDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.ItemGetObject">
            <summary>Sets the stub of CascadingDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the stub of CascadingDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.SyncRootGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.IsReadOnly">
            <summary>Sets the stub of CascadingDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.IsSynchronized">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.Item(System.Object)">
            <summary>Sets the stub of CascadingDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubCascadingDictionaryAdapter.SyncRoot">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ComponentAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubComponentAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubComponentAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDefaultPropertyGetter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DefaultPropertyGetter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDefaultPropertyGetter.#ctor(System.ComponentModel.TypeConverter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDefaultPropertyGetter.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultPropertyGetter</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDefaultPropertyGetter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDefaultPropertyGetter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDefaultPropertyGetter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryAdapterAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryAdapterAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryAdapterBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterInstance)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.Equals(System.Object)">
            <summary>Sets the stub of DictionaryAdapterBase.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.EqualsObject">
            <summary>Sets the stub of DictionaryAdapterBase.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.GetHashCode">
            <summary>Sets the stub of DictionaryAdapterBase.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.GetHashCode01">
            <summary>Sets the stub of DictionaryAdapterBase.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.GetProperty(System.String,System.Boolean)">
            <summary>Sets the stub of DictionaryAdapterBase.GetProperty(String propertyName, Boolean ifExists)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.GetPropertyStringBoolean">
            <summary>Sets the stub of DictionaryAdapterBase.GetProperty(String propertyName, Boolean ifExists)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryAdapterBase</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.MetaGet">
            <summary>Sets the stub of DictionaryAdapterBase.get_Meta()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.SetProperty(System.String,System.Object@)">
            <summary>Sets the stub of DictionaryAdapterBase.SetProperty(String propertyName, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.SetPropertyStringObjectRef">
            <summary>Sets the stub of DictionaryAdapterBase.SetProperty(String propertyName, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterBase.Meta">
            <summary>Sets the stub of DictionaryAdapterBase.get_Meta()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterFactory">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryAdapterFactory</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryAdapterFactory</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterInstance">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryAdapterInstance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterInstance.#ctor(System.Collections.IDictionary,Castle.Components.DictionaryAdapter.DictionaryAdapterMeta,Castle.Components.DictionaryAdapter.PropertyDescriptor,Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterInstance.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryAdapterInstance</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterInstance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterInstance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterInstance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterMeta">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryAdapterMeta</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterMeta.#ctor(System.Type,System.Type,System.Object[],Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer[],Castle.Components.DictionaryAdapter.IDictionaryInitializer[],System.Collections.Generic.IDictionary{System.String,Castle.Components.DictionaryAdapter.PropertyDescriptor},Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory,System.Func{Castle.Components.DictionaryAdapter.DictionaryAdapterInstance,Castle.Components.DictionaryAdapter.IDictionaryAdapter})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterMeta.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryAdapterMeta</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterMeta.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterMeta.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryAdapterMeta.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryBehaviorAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryBehaviorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryValidateGroup">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DictionaryValidateGroup</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryValidateGroup.#ctor(System.Object[],Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryValidateGroup.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryValidateGroup</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryValidateGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryValidateGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDictionaryValidateGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DynamicValue`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicValue</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.ToString">
            <summary>Sets the stub of DynamicValue`1.ToString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.ToString01">
            <summary>Sets the stub of DynamicValue`1.ToString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.ValueGet">
            <summary>Sets the stub of DynamicValue`1.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValue`1.Value">
            <summary>Sets the stub of DynamicValue`1.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.DynamicValueDelegate`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.#ctor(System.Func{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicValueDelegate</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.ToString">
            <summary>Sets the stub of DynamicValue`1.ToString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.ToString01">
            <summary>Sets the stub of DynamicValue`1.ToString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.ValueGet">
            <summary>Sets the stub of DynamicValueDelegate`1.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubDynamicValueDelegate`1.Value">
            <summary>Sets the stub of DynamicValueDelegate`1.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.EditableBindingList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.AddNewCore">
            <summary>Sets the stub of BindingList`1.AddNewCore()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.AddNewCore01">
            <summary>Sets the stub of BindingList`1.AddNewCore()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Sets the stub of BindingList`1.ApplySortCore(PropertyDescriptor prop, ListSortDirection direction)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.ApplySortCorePropertyDescriptorListSortDirection">
            <summary>Sets the stub of BindingList`1.ApplySortCore(PropertyDescriptor prop, ListSortDirection direction)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.CancelNew(System.Int32)">
            <summary>Sets the stub of BindingList`1.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.CancelNewInt32">
            <summary>Sets the stub of BindingList`1.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.ClearItems">
            <summary>Sets the stub of BindingList`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.ClearItems01">
            <summary>Sets the stub of BindingList`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.EndNew(System.Int32)">
            <summary>Sets the stub of BindingList`1.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.EndNewInt32">
            <summary>Sets the stub of BindingList`1.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of BindingList`1.FindCore(PropertyDescriptor prop, Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.FindCorePropertyDescriptorObject">
            <summary>Sets the stub of BindingList`1.FindCore(PropertyDescriptor prop, Object key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.InitializeStub">
            <summary>Initializes a new instance of type StubEditableBindingList</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.InsertItem(System.Int32,`0)">
            <summary>Sets the stub of BindingList`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.InsertItemInt32T0">
            <summary>Sets the stub of BindingList`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.IsSortedCoreGet">
            <summary>Sets the stub of BindingList`1.get_IsSortedCore()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>Sets the stub of BindingList`1.OnAddingNew(AddingNewEventArgs e)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.OnAddingNewAddingNewEventArgs">
            <summary>Sets the stub of BindingList`1.OnAddingNew(AddingNewEventArgs e)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>Sets the stub of BindingList`1.OnListChanged(ListChangedEventArgs e)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.OnListChangedListChangedEventArgs">
            <summary>Sets the stub of BindingList`1.OnListChanged(ListChangedEventArgs e)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.RemoveItem(System.Int32)">
            <summary>Sets the stub of BindingList`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.RemoveItemInt32">
            <summary>Sets the stub of BindingList`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.RemoveSortCore">
            <summary>Sets the stub of BindingList`1.RemoveSortCore()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.RemoveSortCore01">
            <summary>Sets the stub of BindingList`1.RemoveSortCore()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SetItem(System.Int32,`0)">
            <summary>Sets the stub of BindingList`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SetItemInt32T0">
            <summary>Sets the stub of BindingList`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SortDirectionCoreGet">
            <summary>Sets the stub of BindingList`1.get_SortDirectionCore()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SortPropertyCoreGet">
            <summary>Sets the stub of BindingList`1.get_SortPropertyCore()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SupportsChangeNotificationCoreGet">
            <summary>Sets the stub of BindingList`1.get_SupportsChangeNotificationCore()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SupportsSearchingCoreGet">
            <summary>Sets the stub of BindingList`1.get_SupportsSearchingCore()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SupportsSortingCoreGet">
            <summary>Sets the stub of BindingList`1.get_SupportsSortingCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.IsSortedCore">
            <summary>Sets the stub of BindingList`1.get_IsSortedCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SortDirectionCore">
            <summary>Sets the stub of BindingList`1.get_SortDirectionCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SortPropertyCore">
            <summary>Sets the stub of BindingList`1.get_SortPropertyCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SupportsChangeNotificationCore">
            <summary>Sets the stub of BindingList`1.get_SupportsChangeNotificationCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SupportsSearchingCore">
            <summary>Sets the stub of BindingList`1.get_SupportsSearchingCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableBindingList`1.SupportsSortingCore">
            <summary>Sets the stub of BindingList`1.get_SupportsSortingCore()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubEditableList">
            <summary>Stub type of Castle.Components.DictionaryAdapter.EditableList</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableList.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableList.InitializeStub">
            <summary>Initializes a new instance of type StubEditableList</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.EditableList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1.InitializeStub">
            <summary>Initializes a new instance of type StubEditableList</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubEditableList`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.FetchAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubFetchAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubFetchAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.GenericDictionaryAdapter`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.Contains(System.Object)">
            <summary>Sets the stub of GenericDictionaryAdapter`1.Contains(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.ContainsObject">
            <summary>Sets the stub of GenericDictionaryAdapter`1.Contains(Object key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.InitializeStub">
            <summary>Initializes a new instance of type StubGenericDictionaryAdapter</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.IsReadOnlyGet">
            <summary>Sets the stub of GenericDictionaryAdapter`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.IsSynchronizedGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.ItemGetObject">
            <summary>Sets the stub of GenericDictionaryAdapter`1.get_Item(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.ItemSetObjectObject">
            <summary>Sets the stub of GenericDictionaryAdapter`1.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.SyncRootGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.IsReadOnly">
            <summary>Sets the stub of GenericDictionaryAdapter`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.IsSynchronized">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.Item(System.Object)">
            <summary>Sets the stub of GenericDictionaryAdapter`1.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGenericDictionaryAdapter`1.SyncRoot">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.GroupAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubGroupAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubGroupAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IBindingList`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.#ctor">
            <summary>Initializes a new instance of type StubIBindingList</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AddIndexPropertyDescriptor">
            <summary>Sets the stub of IBindingList`1.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AddNew">
            <summary>Sets the stub of IBindingList`1.AddNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AddT0">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AllowEditGet">
            <summary>Sets the stub of IBindingList`1.get_AllowEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AllowNewGet">
            <summary>Sets the stub of IBindingList`1.get_AllowNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AllowRemoveGet">
            <summary>Sets the stub of IBindingList`1.get_AllowRemove()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.ApplySortPropertyDescriptorListSortDirection">
            <summary>Sets the stub of IBindingList`1.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.AsBindingListGet">
            <summary>Sets the stub of IBindingListSource.get_AsBindingList()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.CancelNewInt32">
            <summary>Sets the stub of ICancelAddNew.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>Sets the stub of IBindingList`1.AddIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#AddNew">
            <summary>Sets the stub of IBindingList`1.AddNew()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Sets the stub of IBindingList`1.ApplySort(PropertyDescriptor property, ListSortDirection direction)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of IBindingList`1.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>Sets the stub of IBindingList`1.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#RemoveSort">
            <summary>Sets the stub of IBindingList`1.RemoveSort()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.ContainsT0">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.CopyToT0ArrayInt32">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.CountGet">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.EndNewInt32">
            <summary>Sets the stub of ICancelAddNew.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.FindPropertyDescriptorObject">
            <summary>Sets the stub of IBindingList`1.Find(PropertyDescriptor property, Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.IndexOfT0">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.InsertInt32T0">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.IsReadOnlyGet">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.IsSortedGet">
            <summary>Sets the stub of IBindingList`1.get_IsSorted()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.ItemGetInt32">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.ItemSetInt32T0">
            <summary>Sets the stub of IList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.RaisesItemChangedEventsGet">
            <summary>Sets the stub of IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.RemoveAtInt32">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.RemoveIndexPropertyDescriptor">
            <summary>Sets the stub of IBindingList`1.RemoveIndex(PropertyDescriptor property)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.RemoveSort">
            <summary>Sets the stub of IBindingList`1.RemoveSort()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.RemoveT0">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.SortDirectionGet">
            <summary>Sets the stub of IBindingList`1.get_SortDirection()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.SortPropertyGet">
            <summary>Sets the stub of IBindingList`1.get_SortProperty()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.SupportsChangeNotificationGet">
            <summary>Sets the stub of IBindingList`1.get_SupportsChangeNotification()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.SupportsSearchingGet">
            <summary>Sets the stub of IBindingList`1.get_SupportsSearching()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.SupportsSortingGet">
            <summary>Sets the stub of IBindingList`1.get_SupportsSorting()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Sets the stub of ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#Clear">
            <summary>Sets the stub of ICollection`1.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>Sets the stub of ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Sets the stub of ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>Sets the stub of ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#IList{T}#IndexOf(`0)">
            <summary>Sets the stub of IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
            <summary>Sets the stub of IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
            <summary>Sets the stub of IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)">
            <summary>Sets the stub of ICancelAddNew.CancelNew(Int32 itemIndex)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#ComponentModel#ICancelAddNew#EndNew(System.Int32)">
            <summary>Sets the stub of ICancelAddNew.EndNew(Int32 itemIndex)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#AllowEdit">
            <summary>Sets the stub of IBindingList`1.get_AllowEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#AllowNew">
            <summary>Sets the stub of IBindingList`1.get_AllowNew()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#AllowRemove">
            <summary>Sets the stub of IBindingList`1.get_AllowRemove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingListSource#AsBindingList">
            <summary>Sets the stub of IBindingListSource.get_AsBindingList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#Count">
            <summary>Sets the stub of ICollection`1.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>Sets the stub of ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#IsSorted">
            <summary>Sets the stub of IBindingList`1.get_IsSorted()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
            <summary>Sets the stub of IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.global::System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
            <summary>Sets the stub of IRaiseItemChangedEvents.get_RaisesItemChangedEvents()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#SortDirection">
            <summary>Sets the stub of IBindingList`1.get_SortDirection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#SortProperty">
            <summary>Sets the stub of IBindingList`1.get_SortProperty()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#SupportsChangeNotification">
            <summary>Sets the stub of IBindingList`1.get_SupportsChangeNotification()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#SupportsSearching">
            <summary>Sets the stub of IBindingList`1.get_SupportsSearching()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingList`1.cc::Castle#Components#DictionaryAdapter#IBindingList{T}#SupportsSorting">
            <summary>Sets the stub of IBindingList`1.get_SupportsSorting()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIBindingListSource">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IBindingListSource</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIBindingListSource.#ctor">
            <summary>Initializes a new instance of type StubIBindingListSource</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIBindingListSource.AsBindingListGet">
            <summary>Sets the stub of IBindingListSource.get_AsBindingList()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIBindingListSource.cc::Castle#Components#DictionaryAdapter#IBindingListSource#AsBindingList">
            <summary>Sets the stub of IBindingListSource.get_AsBindingList()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ICollectionAdapter`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.#ctor">
            <summary>Initializes a new instance of type StubICollectionAdapter</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.AddNew">
            <summary>Sets the stub of ICollectionAdapter`1.AddNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.AddT0">
            <summary>Sets the stub of ICollectionAdapter`1.Add(!0 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Add(`0)">
            <summary>Sets the stub of ICollectionAdapter`1.Add(!0 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#AddNew">
            <summary>Sets the stub of ICollectionAdapter`1.AddNew()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Clear">
            <summary>Sets the stub of ICollectionAdapter`1.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#ClearReferences">
            <summary>Sets the stub of ICollectionAdapter`1.ClearReferences()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#DropSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.DropSnapshot()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#GetCurrentItem(System.Int32)">
            <summary>Sets the stub of ICollectionAdapter`1.GetCurrentItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#GetSnapshotItem(System.Int32)">
            <summary>Sets the stub of ICollectionAdapter`1.GetSnapshotItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Initialize(Castle.Components.DictionaryAdapter.ICollectionAdapterObserver{`0})">
            <summary>Sets the stub of ICollectionAdapter`1.Initialize(ICollectionAdapterObserver`1&lt;!0&gt; advisor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Insert(System.Int32,`0)">
            <summary>Sets the stub of ICollectionAdapter`1.Insert(Int32 index, !0 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#LoadSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.LoadSnapshot()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Remove(System.Int32)">
            <summary>Sets the stub of ICollectionAdapter`1.Remove(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#SaveSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.SaveSnapshot()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.Clear">
            <summary>Sets the stub of ICollectionAdapter`1.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.ClearReferences">
            <summary>Sets the stub of ICollectionAdapter`1.ClearReferences()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.ComparerGet">
            <summary>Sets the stub of ICollectionAdapter`1.get_Comparer()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.CountGet">
            <summary>Sets the stub of ICollectionAdapter`1.get_Count()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.DropSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.DropSnapshot()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.GetCurrentItemInt32">
            <summary>Sets the stub of ICollectionAdapter`1.GetCurrentItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.GetSnapshotItemInt32">
            <summary>Sets the stub of ICollectionAdapter`1.GetSnapshotItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.HasSnapshotGet">
            <summary>Sets the stub of ICollectionAdapter`1.get_HasSnapshot()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.InitializeICollectionAdapterObserverOfT0">
            <summary>Sets the stub of ICollectionAdapter`1.Initialize(ICollectionAdapterObserver`1&lt;!0&gt; advisor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.InsertInt32T0">
            <summary>Sets the stub of ICollectionAdapter`1.Insert(Int32 index, !0 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.ItemGetInt32">
            <summary>Sets the stub of ICollectionAdapter`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.ItemSetInt32T0">
            <summary>Sets the stub of ICollectionAdapter`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.LoadSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.LoadSnapshot()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.RemoveInt32">
            <summary>Sets the stub of ICollectionAdapter`1.Remove(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.SaveSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.SaveSnapshot()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.SnapshotCountGet">
            <summary>Sets the stub of ICollectionAdapter`1.get_SnapshotCount()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Comparer">
            <summary>Sets the stub of ICollectionAdapter`1.get_Comparer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Count">
            <summary>Sets the stub of ICollectionAdapter`1.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#HasSnapshot">
            <summary>Sets the stub of ICollectionAdapter`1.get_HasSnapshot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#Item(System.Int32)">
            <summary>Sets the stub of ICollectionAdapter`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapter`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapter{T}#SnapshotCount">
            <summary>Sets the stub of ICollectionAdapter`1.get_SnapshotCount()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ICollectionAdapterObserver`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.#ctor">
            <summary>Initializes a new instance of type StubICollectionAdapterObserver</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapterObserver{T}#OnInserted(`0,System.Int32)">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapterObserver{T}#OnInserting(`0)">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnInserting(!0 newValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapterObserver{T}#OnRemoved(`0,System.Int32)">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapterObserver{T}#OnRemoving(`0)">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapterObserver{T}#OnReplaced(`0,`0,System.Int32)">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.cc::Castle#Components#DictionaryAdapter#ICollectionAdapterObserver{T}#OnReplacing(`0,`0)">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.OnInsertedT0Int32">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.OnInsertingT0">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnInserting(!0 newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.OnRemovedT0Int32">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.OnRemovingT0">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.OnReplacedT0T0Int32">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionAdapterObserver`1.OnReplacingT0T0">
            <summary>Sets the stub of ICollectionAdapterObserver`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ICollectionProjection</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.#ctor">
            <summary>Initializes a new instance of type StubICollectionProjection</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.cc::Castle#Components#DictionaryAdapter#ICollectionProjection#Clear">
            <summary>Sets the stub of ICollectionProjection.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.cc::Castle#Components#DictionaryAdapter#ICollectionProjection#ClearReferences">
            <summary>Sets the stub of ICollectionProjection.ClearReferences()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.cc::Castle#Components#DictionaryAdapter#ICollectionProjection#Replace(System.Collections.IEnumerable)">
            <summary>Sets the stub of ICollectionProjection.Replace(IEnumerable source)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.Clear">
            <summary>Sets the stub of ICollectionProjection.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.ClearReferences">
            <summary>Sets the stub of ICollectionProjection.ClearReferences()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.CopyToArrayInt32">
            <summary>Sets the stub of ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.CountGet">
            <summary>Sets the stub of ICollection.get_Count()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.IsSynchronizedGet">
            <summary>Sets the stub of ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.ReplaceIEnumerable">
            <summary>Sets the stub of ICollectionProjection.Replace(IEnumerable source)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.SyncRootGet">
            <summary>Sets the stub of ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.global::System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Sets the stub of ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.global::System#Collections#ICollection#Count">
            <summary>Sets the stub of ICollection.get_Count()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.global::System#Collections#ICollection#IsSynchronized">
            <summary>Sets the stub of ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubICollectionProjection.global::System#Collections#ICollection#SyncRoot">
            <summary>Sets the stub of ICollection.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubICondition">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ICondition</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICondition.#ctor">
            <summary>Initializes a new instance of type StubICondition</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubICondition.cc::Castle#Components#DictionaryAdapter#ICondition#SatisfiedBy(System.Object)">
            <summary>Sets the stub of ICondition.SatisfiedBy(Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubICondition.SatisfiedByObject">
            <summary>Sets the stub of ICondition.SatisfiedBy(Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryAdapter</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.AcceptChanges">
            <summary>Sets the stub of IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.AddValidatorIDictionaryValidator">
            <summary>Sets the stub of IDictionaryValidate.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.AttachBackingFieldToCanValidate">
            <summary>Attaches delegates to emulate StubIDictionaryAdapter.CanValidate as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.AttachBackingFieldToSupportsMultiLevelEdit">
            <summary>Attaches delegates to emulate StubIDictionaryAdapter.SupportsMultiLevelEdit as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.BeginEdit">
            <summary>Sets the stub of IEditableObject.BeginEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CanEditGet">
            <summary>Sets the stub of IDictionaryEdit.get_CanEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CanNotifyGet">
            <summary>Sets the stub of IDictionaryNotify.get_CanNotify()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CanValidateGet">
            <summary>Sets the stub of IDictionaryValidate.get_CanValidate()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CanValidateSetBoolean">
            <summary>Sets the stub of IDictionaryValidate.set_CanValidate(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CancelEdit">
            <summary>Sets the stub of IEditableObject.CancelEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#ClearProperty(Castle.Components.DictionaryAdapter.PropertyDescriptor,System.String)">
            <summary>Sets the stub of IDictionaryAdapter.ClearProperty(PropertyDescriptor property, String key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#Coerce(System.Type)">
            <summary>Sets the stub of IDictionaryAdapter.Coerce(Type type)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#Coerce``1">
            <summary>Sets the stub of IDictionaryAdapter.Coerce()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#CopyTo(Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Sets the stub of IDictionaryAdapter.CopyTo(IDictionaryAdapter other)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#CopyTo(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Func{Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Boolean})">
            <summary>Sets the stub of IDictionaryAdapter.CopyTo(IDictionaryAdapter other, Func`2&lt;PropertyDescriptor,Boolean&gt; selector)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#GetKey(System.String)">
            <summary>Sets the stub of IDictionaryAdapter.GetKey(String propertyName)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#GetProperty(System.String,System.Boolean)">
            <summary>Sets the stub of IDictionaryAdapter.GetProperty(String propertyName, Boolean ifExists)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#GetPropertyOfType``1(System.String)">
            <summary>Sets the stub of IDictionaryAdapter.GetPropertyOfType(String propertyName)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#ReadProperty(System.String)">
            <summary>Sets the stub of IDictionaryAdapter.ReadProperty(String key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#SetProperty(System.String,System.Object@)">
            <summary>Sets the stub of IDictionaryAdapter.SetProperty(String propertyName, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#ShouldClearProperty(Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of IDictionaryAdapter.ShouldClearProperty(PropertyDescriptor property, Object value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#StoreProperty(Castle.Components.DictionaryAdapter.PropertyDescriptor,System.String,System.Object)">
            <summary>Sets the stub of IDictionaryAdapter.StoreProperty(PropertyDescriptor property, String key, Object value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create(System.Type)">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1">
            <summary>Sets the stub of IDictionaryCreate.Create()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1(System.Action{``0})">
            <summary>Sets the stub of IDictionaryCreate.Create(Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create(System.Type,System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1(System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryCreate.Create(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1(System.Collections.IDictionary,System.Action{``0})">
            <summary>Sets the stub of IDictionaryCreate.Create(IDictionary dictionary, Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#ResumeEditing">
            <summary>Sets the stub of IDictionaryEdit.ResumeEditing()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#SuppressEditing">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditing()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#SuppressEditingBlock">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditingBlock()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#ResumeNotifications">
            <summary>Sets the stub of IDictionaryNotify.ResumeNotifications()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#SuppressNotifications">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotifications()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#SuppressNotificationsBlock">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotificationsBlock()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#AddValidator(Castle.Components.DictionaryAdapter.IDictionaryValidator)">
            <summary>Sets the stub of IDictionaryValidate.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#ValidateGroups(System.Object[])">
            <summary>Sets the stub of IDictionaryValidate.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ClearPropertyPropertyDescriptorString">
            <summary>Sets the stub of IDictionaryAdapter.ClearProperty(PropertyDescriptor property, String key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CoerceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Coerce()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CoerceType">
            <summary>Sets the stub of IDictionaryAdapter.Coerce(Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CopyToIDictionaryAdapter">
            <summary>Sets the stub of IDictionaryAdapter.CopyTo(IDictionaryAdapter other)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CopyToIDictionaryAdapterFuncOfPropertyDescriptorBoolean">
            <summary>Sets the stub of IDictionaryAdapter.CopyTo(IDictionaryAdapter other, Func`2&lt;PropertyDescriptor,Boolean&gt; selector)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Create()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CreateOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},``0})">
            <summary>Sets stubs of Create(Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CreateOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,``0})">
            <summary>Sets stubs of Create(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CreateOf1IDictionaryActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,System.Action{``0},``0})">
            <summary>Sets stubs of Create(IDictionary dictionary, Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CreateType">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.CreateTypeIDictionary">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.EndEdit">
            <summary>Sets the stub of IEditableObject.EndEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ErrorGet">
            <summary>Sets the stub of IDataErrorInfo.get_Error()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.GetKeyString">
            <summary>Sets the stub of IDictionaryAdapter.GetKey(String propertyName)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.GetPropertyOfTypeOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetPropertyOfType(String propertyName)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.GetPropertyStringBoolean">
            <summary>Sets the stub of IDictionaryAdapter.GetProperty(String propertyName, Boolean ifExists)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.IsChangedGet">
            <summary>Sets the stub of IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.IsEditingGet">
            <summary>Sets the stub of IDictionaryEdit.get_IsEditing()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.IsValidGet">
            <summary>Sets the stub of IDictionaryValidate.get_IsValid()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ItemGetString">
            <summary>Sets the stub of IDataErrorInfo.get_Item(String columnName)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.MetaGet">
            <summary>Sets the stub of IDictionaryAdapter.get_Meta()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ReadPropertyString">
            <summary>Sets the stub of IDictionaryAdapter.ReadProperty(String key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.RejectChanges">
            <summary>Sets the stub of IRevertibleChangeTracking.RejectChanges()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ResumeEditing">
            <summary>Sets the stub of IDictionaryEdit.ResumeEditing()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ResumeNotifications">
            <summary>Sets the stub of IDictionaryNotify.ResumeNotifications()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SetPropertyStringObjectRef">
            <summary>Sets the stub of IDictionaryAdapter.SetProperty(String propertyName, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ShouldClearPropertyPropertyDescriptorObject">
            <summary>Sets the stub of IDictionaryAdapter.ShouldClearProperty(PropertyDescriptor property, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ShouldNotifyGet">
            <summary>Sets the stub of IDictionaryNotify.get_ShouldNotify()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.StorePropertyPropertyDescriptorStringObject">
            <summary>Sets the stub of IDictionaryAdapter.StoreProperty(PropertyDescriptor property, String key, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SupportsMultiLevelEditGet">
            <summary>Sets the stub of IDictionaryEdit.get_SupportsMultiLevelEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SupportsMultiLevelEditSetBoolean">
            <summary>Sets the stub of IDictionaryEdit.set_SupportsMultiLevelEdit(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SuppressEditing">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditing()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SuppressEditingBlock">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditingBlock()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SuppressNotifications">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotifications()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.SuppressNotificationsBlock">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotificationsBlock()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>Sets the stub of IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IEditableObject#BeginEdit">
            <summary>Sets the stub of IEditableObject.BeginEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IEditableObject#CancelEdit">
            <summary>Sets the stub of IEditableObject.CancelEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IEditableObject#EndEdit">
            <summary>Sets the stub of IEditableObject.EndEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
            <summary>Sets the stub of IRevertibleChangeTracking.RejectChanges()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ThisGet">
            <summary>Sets the stub of IDictionaryAdapter.get_This()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ValidateGroupsObjectArray">
            <summary>Sets the stub of IDictionaryValidate.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.ValidatorsGet">
            <summary>Sets the stub of IDictionaryValidate.get_Validators()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#CanEdit">
            <summary>Sets the stub of IDictionaryEdit.get_CanEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#CanNotify">
            <summary>Sets the stub of IDictionaryNotify.get_CanNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#CanValidate">
            <summary>Sets the stub of IDictionaryValidate.get_CanValidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IDataErrorInfo#Error">
            <summary>Sets the stub of IDataErrorInfo.get_Error()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.global::System#ComponentModel#IChangeTracking#IsChanged">
            <summary>Sets the stub of IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#IsEditing">
            <summary>Sets the stub of IDictionaryEdit.get_IsEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#IsValid">
            <summary>Sets the stub of IDictionaryValidate.get_IsValid()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>Sets the stub of IDataErrorInfo.get_Item(String columnName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#Meta">
            <summary>Sets the stub of IDictionaryAdapter.get_Meta()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#ShouldNotify">
            <summary>Sets the stub of IDictionaryNotify.get_ShouldNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#SupportsMultiLevelEdit">
            <summary>Sets the stub of IDictionaryEdit.get_SupportsMultiLevelEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapter#This">
            <summary>Sets the stub of IDictionaryAdapter.get_This()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapter.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#Validators">
            <summary>Sets the stub of IDictionaryValidate.get_Validators()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryAdapterFactory</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter(System.Type,System.Xml.XmlNode)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, XmlNode xmlNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter(System.Type,System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter(System.Type,System.Collections.IDictionary,Castle.Components.DictionaryAdapter.PropertyDescriptor)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter``1(System.Collections.Specialized.NameValueCollection)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(NameValueCollection nameValues)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter``1(System.Xml.XmlNode)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(XmlNode xmlNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter``1(System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapter(System.Type,System.Collections.Specialized.NameValueCollection)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, NameValueCollection nameValues)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapterMeta(System.Type)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapterMeta(Type type)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapterMeta(System.Type,Castle.Components.DictionaryAdapter.DictionaryAdapterMeta)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapterMeta(Type type, DictionaryAdapterMeta other)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterFactory#GetAdapterMeta(System.Type,Castle.Components.DictionaryAdapter.PropertyDescriptor)">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapterMeta(Type type, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterMetaType">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapterMeta(Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterMetaTypeDictionaryAdapterMeta">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapterMeta(Type type, DictionaryAdapterMeta other)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterMetaTypePropertyDescriptor">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapterMeta(Type type, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,``0})">
            <summary>Sets stubs of GetAdapter(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterOf1NameValueCollection``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Specialized.NameValueCollection,``0})">
            <summary>Sets stubs of GetAdapter(NameValueCollection nameValues)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterOf1XmlNode``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.XmlNode,``0})">
            <summary>Sets stubs of GetAdapter(XmlNode xmlNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterTypeIDictionary">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterTypeIDictionaryPropertyDescriptor">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, IDictionary dictionary, PropertyDescriptor descriptor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterTypeNameValueCollection">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, NameValueCollection nameValues)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterFactory.GetAdapterTypeXmlNode">
            <summary>Sets the stub of IDictionaryAdapterFactory.GetAdapter(Type type, XmlNode xmlNode)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryAdapterVisitor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryAdapterVisitor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterVisitor#VisitCollection(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Type,System.Object)">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterVisitor#VisitDictionaryAdapter(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Object)">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterVisitor#VisitDictionaryAdapter(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Func{Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Boolean},System.Object)">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Func`2&lt;PropertyDescriptor,Boolean&gt; selector, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterVisitor#VisitInterface(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.cc::Castle#Components#DictionaryAdapter#IDictionaryAdapterVisitor#VisitProperty(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Object)">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.VisitCollectionIDictionaryAdapterPropertyDescriptorTypeObject">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitCollection(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Type collectionItemType, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.VisitDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanObject">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Func`2&lt;PropertyDescriptor,Boolean&gt; selector, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.VisitDictionaryAdapterIDictionaryAdapterObject">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitDictionaryAdapter(IDictionaryAdapter dictionaryAdapter, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.VisitInterfaceIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitInterface(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryAdapterVisitor.VisitPropertyIDictionaryAdapterPropertyDescriptorObject">
            <summary>Sets the stub of IDictionaryAdapterVisitor.VisitProperty(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property, Object state)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehavior">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryBehavior</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehavior.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryBehavior</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehavior.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehavior.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehavior.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehavior.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehaviorBuilder">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryBehaviorBuilder</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehaviorBuilder.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryBehaviorBuilder</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehaviorBuilder.BuildBehaviors">
            <summary>Sets the stub of IDictionaryBehaviorBuilder.BuildBehaviors()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryBehaviorBuilder.cc::Castle#Components#DictionaryAdapter#IDictionaryBehaviorBuilder#BuildBehaviors">
            <summary>Sets the stub of IDictionaryBehaviorBuilder.BuildBehaviors()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCoerceStrategy">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryCoerceStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCoerceStrategy.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryCoerceStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCoerceStrategy.cc::Castle#Components#DictionaryAdapter#IDictionaryCoerceStrategy#Coerce(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Type)">
            <summary>Sets the stub of IDictionaryCoerceStrategy.Coerce(IDictionaryAdapter adapter, Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCoerceStrategy.CoerceIDictionaryAdapterType">
            <summary>Sets the stub of IDictionaryCoerceStrategy.Coerce(IDictionaryAdapter adapter, Type type)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCopyStrategy">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryCopyStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCopyStrategy.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryCopyStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCopyStrategy.cc::Castle#Components#DictionaryAdapter#IDictionaryCopyStrategy#Copy(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Func{Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Boolean}@)">
            <summary>Sets the stub of IDictionaryCopyStrategy.Copy(IDictionaryAdapter source, IDictionaryAdapter target, Func`2&lt;PropertyDescriptor,Boolean&gt;&amp; selector)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCopyStrategy.CopyIDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanRef">
            <summary>Sets the stub of IDictionaryCopyStrategy.Copy(IDictionaryAdapter source, IDictionaryAdapter target, Func`2&lt;PropertyDescriptor,Boolean&gt;&amp; selector)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryCreate</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryCreate</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1">
            <summary>Sets the stub of IDictionaryCreate.Create()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create(System.Type)">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1(System.Action{``0})">
            <summary>Sets the stub of IDictionaryCreate.Create(Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1(System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryCreate.Create(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create``1(System.Collections.IDictionary,System.Action{``0})">
            <summary>Sets the stub of IDictionaryCreate.Create(IDictionary dictionary, Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.cc::Castle#Components#DictionaryAdapter#IDictionaryCreate#Create(System.Type,System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.CreateOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of Create()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.CreateOf1ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Action{``0},``0})">
            <summary>Sets stubs of Create(Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.CreateOf1IDictionary``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,``0})">
            <summary>Sets stubs of Create(IDictionary dictionary)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.CreateOf1IDictionaryActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IDictionary,System.Action{``0},``0})">
            <summary>Sets stubs of Create(IDictionary dictionary, Action`1&lt;!!0&gt; init)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.CreateType">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreate.CreateTypeIDictionary">
            <summary>Sets the stub of IDictionaryCreate.Create(Type type, IDictionary dictionary)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreateStrategy">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreateStrategy.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryCreateStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreateStrategy.cc::Castle#Components#DictionaryAdapter#IDictionaryCreateStrategy#Create(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Type,System.Collections.IDictionary)">
            <summary>Sets the stub of IDictionaryCreateStrategy.Create(IDictionaryAdapter adapter, Type type, IDictionary dictionary)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryCreateStrategy.CreateIDictionaryAdapterTypeIDictionary">
            <summary>Sets the stub of IDictionaryCreateStrategy.Create(IDictionaryAdapter adapter, Type type, IDictionary dictionary)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryEdit</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryEdit</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.AcceptChanges">
            <summary>Sets the stub of IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.AttachBackingFieldToSupportsMultiLevelEdit">
            <summary>Attaches delegates to emulate StubIDictionaryEdit.SupportsMultiLevelEdit as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.BeginEdit">
            <summary>Sets the stub of IEditableObject.BeginEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.CanEditGet">
            <summary>Sets the stub of IDictionaryEdit.get_CanEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.CancelEdit">
            <summary>Sets the stub of IEditableObject.CancelEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#ResumeEditing">
            <summary>Sets the stub of IDictionaryEdit.ResumeEditing()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#SuppressEditing">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditing()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#SuppressEditingBlock">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditingBlock()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.EndEdit">
            <summary>Sets the stub of IEditableObject.EndEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.IsChangedGet">
            <summary>Sets the stub of IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.IsEditingGet">
            <summary>Sets the stub of IDictionaryEdit.get_IsEditing()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.RejectChanges">
            <summary>Sets the stub of IRevertibleChangeTracking.RejectChanges()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.ResumeEditing">
            <summary>Sets the stub of IDictionaryEdit.ResumeEditing()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.SupportsMultiLevelEditGet">
            <summary>Sets the stub of IDictionaryEdit.get_SupportsMultiLevelEdit()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.SupportsMultiLevelEditSetBoolean">
            <summary>Sets the stub of IDictionaryEdit.set_SupportsMultiLevelEdit(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.SuppressEditing">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditing()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.SuppressEditingBlock">
            <summary>Sets the stub of IDictionaryEdit.SuppressEditingBlock()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.global::System#ComponentModel#IChangeTracking#AcceptChanges">
            <summary>Sets the stub of IChangeTracking.AcceptChanges()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.global::System#ComponentModel#IEditableObject#BeginEdit">
            <summary>Sets the stub of IEditableObject.BeginEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.global::System#ComponentModel#IEditableObject#CancelEdit">
            <summary>Sets the stub of IEditableObject.CancelEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.global::System#ComponentModel#IEditableObject#EndEdit">
            <summary>Sets the stub of IEditableObject.EndEdit()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.global::System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
            <summary>Sets the stub of IRevertibleChangeTracking.RejectChanges()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#CanEdit">
            <summary>Sets the stub of IDictionaryEdit.get_CanEdit()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.global::System#ComponentModel#IChangeTracking#IsChanged">
            <summary>Sets the stub of IChangeTracking.get_IsChanged()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#IsEditing">
            <summary>Sets the stub of IDictionaryEdit.get_IsEditing()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEdit.cc::Castle#Components#DictionaryAdapter#IDictionaryEdit#SupportsMultiLevelEdit">
            <summary>Sets the stub of IDictionaryEdit.get_SupportsMultiLevelEdit()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEqualityHashCodeStrategy">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryEqualityHashCodeStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEqualityHashCodeStrategy.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryEqualityHashCodeStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEqualityHashCodeStrategy.cc::Castle#Components#DictionaryAdapter#IDictionaryEqualityHashCodeStrategy#Equals(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Sets the stub of IDictionaryEqualityHashCodeStrategy.Equals(IDictionaryAdapter adapter1, IDictionaryAdapter adapter2)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEqualityHashCodeStrategy.cc::Castle#Components#DictionaryAdapter#IDictionaryEqualityHashCodeStrategy#GetHashCode(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Int32@)">
            <summary>Sets the stub of IDictionaryEqualityHashCodeStrategy.GetHashCode(IDictionaryAdapter adapter, Int32&amp; hashCode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEqualityHashCodeStrategy.EqualsIDictionaryAdapterIDictionaryAdapter">
            <summary>Sets the stub of IDictionaryEqualityHashCodeStrategy.Equals(IDictionaryAdapter adapter1, IDictionaryAdapter adapter2)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryEqualityHashCodeStrategy.GetHashCodeIDictionaryAdapterInt32Out">
            <summary>Sets the stub of IDictionaryEqualityHashCodeStrategy.GetHashCode(IDictionaryAdapter adapter, Int32&amp; hashCode)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryInitializer#Initialize(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Object[])">
            <summary>Sets the stub of IDictionaryInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.InitializeIDictionaryAdapterObjectArray">
            <summary>Sets the stub of IDictionaryInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryKeyBuilder</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.cc::Castle#Components#DictionaryAdapter#IDictionaryKeyBuilder#GetKey(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.String,Castle.Components.DictionaryAdapter.PropertyDescriptor)">
            <summary>Sets the stub of IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.GetKeyIDictionaryAdapterStringPropertyDescriptor">
            <summary>Sets the stub of IDictionaryKeyBuilder.GetKey(IDictionaryAdapter dictionaryAdapter, String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryKeyBuilder.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryMetaInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryMetaInitializer#Initialize(Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory,Castle.Components.DictionaryAdapter.DictionaryAdapterMeta)">
            <summary>Sets the stub of IDictionaryMetaInitializer.Initialize(IDictionaryAdapterFactory factory, DictionaryAdapterMeta dictionaryMeta)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryMetaInitializer#ShouldHaveBehavior(System.Object)">
            <summary>Sets the stub of IDictionaryMetaInitializer.ShouldHaveBehavior(Object behavior)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.InitializeIDictionaryAdapterFactoryDictionaryAdapterMeta">
            <summary>Sets the stub of IDictionaryMetaInitializer.Initialize(IDictionaryAdapterFactory factory, DictionaryAdapterMeta dictionaryMeta)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.ShouldHaveBehaviorObject">
            <summary>Sets the stub of IDictionaryMetaInitializer.ShouldHaveBehavior(Object behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryMetaInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryNotify</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryNotify</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.CanNotifyGet">
            <summary>Sets the stub of IDictionaryNotify.get_CanNotify()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#ResumeNotifications">
            <summary>Sets the stub of IDictionaryNotify.ResumeNotifications()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#SuppressNotifications">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotifications()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#SuppressNotificationsBlock">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotificationsBlock()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.ResumeNotifications">
            <summary>Sets the stub of IDictionaryNotify.ResumeNotifications()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.ShouldNotifyGet">
            <summary>Sets the stub of IDictionaryNotify.get_ShouldNotify()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.SuppressNotifications">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotifications()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.SuppressNotificationsBlock">
            <summary>Sets the stub of IDictionaryNotify.SuppressNotificationsBlock()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#CanNotify">
            <summary>Sets the stub of IDictionaryNotify.get_CanNotify()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryNotify.cc::Castle#Components#DictionaryAdapter#IDictionaryNotify#ShouldNotify">
            <summary>Sets the stub of IDictionaryNotify.get_ShouldNotify()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryPropertyGetter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.cc::Castle#Components#DictionaryAdapter#IDictionaryPropertyGetter#GetPropertyValue(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.String,System.Object,Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Boolean)">
            <summary>Sets the stub of IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.GetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the stub of IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertyGetter.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryPropertySetter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryPropertySetter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.cc::Castle#Components#DictionaryAdapter#IDictionaryPropertySetter#SetPropertyValue(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.String,System.Object@,Castle.Components.DictionaryAdapter.PropertyDescriptor)">
            <summary>Sets the stub of IDictionaryPropertySetter.SetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object&amp; value, PropertyDescriptor property)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.SetPropertyValueIDictionaryAdapterStringObjectRefPropertyDescriptor">
            <summary>Sets the stub of IDictionaryPropertySetter.SetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object&amp; value, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryPropertySetter.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryReferenceManager</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryReferenceManager</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.AddReferenceObjectObjectBoolean">
            <summary>Sets the stub of IDictionaryReferenceManager.AddReference(Object keyObject, Object relatedObject, Boolean isInGraph)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.cc::Castle#Components#DictionaryAdapter#IDictionaryReferenceManager#AddReference(System.Object,System.Object,System.Boolean)">
            <summary>Sets the stub of IDictionaryReferenceManager.AddReference(Object keyObject, Object relatedObject, Boolean isInGraph)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.cc::Castle#Components#DictionaryAdapter#IDictionaryReferenceManager#IsReferenceProperty(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.String)">
            <summary>Sets the stub of IDictionaryReferenceManager.IsReferenceProperty(IDictionaryAdapter dictionaryAdapter, String propertyName)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.cc::Castle#Components#DictionaryAdapter#IDictionaryReferenceManager#TryGetReference(System.Object,System.Object@)">
            <summary>Sets the stub of IDictionaryReferenceManager.TryGetReference(Object keyObject, Object&amp; inGraphObject)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.IsReferencePropertyIDictionaryAdapterString">
            <summary>Sets the stub of IDictionaryReferenceManager.IsReferenceProperty(IDictionaryAdapter dictionaryAdapter, String propertyName)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryReferenceManager.TryGetReferenceObjectObjectOut">
            <summary>Sets the stub of IDictionaryReferenceManager.TryGetReference(Object keyObject, Object&amp; inGraphObject)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryValidate</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryValidate</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.AddValidatorIDictionaryValidator">
            <summary>Sets the stub of IDictionaryValidate.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.AttachBackingFieldToCanValidate">
            <summary>Attaches delegates to emulate StubIDictionaryValidate.CanValidate as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.CanValidateGet">
            <summary>Sets the stub of IDictionaryValidate.get_CanValidate()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.CanValidateSetBoolean">
            <summary>Sets the stub of IDictionaryValidate.set_CanValidate(Boolean value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#AddValidator(Castle.Components.DictionaryAdapter.IDictionaryValidator)">
            <summary>Sets the stub of IDictionaryValidate.AddValidator(IDictionaryValidator validator)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#ValidateGroups(System.Object[])">
            <summary>Sets the stub of IDictionaryValidate.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.ErrorGet">
            <summary>Sets the stub of IDataErrorInfo.get_Error()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.IsValidGet">
            <summary>Sets the stub of IDictionaryValidate.get_IsValid()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.ItemGetString">
            <summary>Sets the stub of IDataErrorInfo.get_Item(String columnName)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.ValidateGroupsObjectArray">
            <summary>Sets the stub of IDictionaryValidate.ValidateGroups(Object[] groups)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.ValidatorsGet">
            <summary>Sets the stub of IDictionaryValidate.get_Validators()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#CanValidate">
            <summary>Sets the stub of IDictionaryValidate.get_CanValidate()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.global::System#ComponentModel#IDataErrorInfo#Error">
            <summary>Sets the stub of IDataErrorInfo.get_Error()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#IsValid">
            <summary>Sets the stub of IDictionaryValidate.get_IsValid()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>Sets the stub of IDataErrorInfo.get_Item(String columnName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidate.cc::Castle#Components#DictionaryAdapter#IDictionaryValidate#Validators">
            <summary>Sets the stub of IDictionaryValidate.get_Validators()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDictionaryValidator</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.#ctor">
            <summary>Initializes a new instance of type StubIDictionaryValidator</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.cc::Castle#Components#DictionaryAdapter#IDictionaryValidator#Invalidate(Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Sets the stub of IDictionaryValidator.Invalidate(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.cc::Castle#Components#DictionaryAdapter#IDictionaryValidator#IsValid(Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Sets the stub of IDictionaryValidator.IsValid(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.cc::Castle#Components#DictionaryAdapter#IDictionaryValidator#Validate(Castle.Components.DictionaryAdapter.IDictionaryAdapter)">
            <summary>Sets the stub of IDictionaryValidator.Validate(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.cc::Castle#Components#DictionaryAdapter#IDictionaryValidator#Validate(Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.PropertyDescriptor)">
            <summary>Sets the stub of IDictionaryValidator.Validate(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.InvalidateIDictionaryAdapter">
            <summary>Sets the stub of IDictionaryValidator.Invalidate(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.IsValidIDictionaryAdapter">
            <summary>Sets the stub of IDictionaryValidator.IsValid(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.ValidateIDictionaryAdapter">
            <summary>Sets the stub of IDictionaryValidator.Validate(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDictionaryValidator.ValidateIDictionaryAdapterPropertyDescriptor">
            <summary>Sets the stub of IDictionaryValidator.Validate(IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDynamicValue</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue.#ctor">
            <summary>Initializes a new instance of type StubIDynamicValue</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue.cc::Castle#Components#DictionaryAdapter#IDynamicValue#GetValue">
            <summary>Sets the stub of IDynamicValue.GetValue()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue.GetValue">
            <summary>Sets the stub of IDynamicValue.GetValue()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IDynamicValue`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue`1.#ctor">
            <summary>Initializes a new instance of type StubIDynamicValue</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue`1.cc::Castle#Components#DictionaryAdapter#IDynamicValue#GetValue">
            <summary>Sets the stub of IDynamicValue.GetValue()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue`1.GetValue">
            <summary>Sets the stub of IDynamicValue.GetValue()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue`1.ValueGet">
            <summary>Sets the stub of IDynamicValue`1.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIDynamicValue`1.cc::Castle#Components#DictionaryAdapter#IDynamicValue{T}#Value">
            <summary>Sets the stub of IDynamicValue`1.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IPropertyDescriptorInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.#ctor">
            <summary>Initializes a new instance of type StubIPropertyDescriptorInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.cc::Castle#Components#DictionaryAdapter#IPropertyDescriptorInitializer#Initialize(Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Object[])">
            <summary>Sets the stub of IPropertyDescriptorInitializer.Initialize(PropertyDescriptor propertyDescriptor, Object[] behaviors)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.Copy">
            <summary>Sets the stub of IDictionaryBehavior.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.ExecutionOrderGet">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.InitializePropertyDescriptorObjectArray">
            <summary>Sets the stub of IPropertyDescriptorInitializer.Initialize(PropertyDescriptor propertyDescriptor, Object[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIPropertyDescriptorInitializer.cc::Castle#Components#DictionaryAdapter#IDictionaryBehavior#ExecutionOrder">
            <summary>Sets the stub of IDictionaryBehavior.get_ExecutionOrder()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIValueInitializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IValueInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIValueInitializer.#ctor">
            <summary>Initializes a new instance of type StubIValueInitializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIValueInitializer.cc::Castle#Components#DictionaryAdapter#IValueInitializer#Initialize(Castle.Components.DictionaryAdapter.IDictionaryAdapter,System.Object)">
            <summary>Sets the stub of IValueInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIValueInitializer.InitializeIDictionaryAdapterObject">
            <summary>Sets the stub of IValueInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IVirtual</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual.#ctor">
            <summary>Initializes a new instance of type StubIVirtual</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual.cc::Castle#Components#DictionaryAdapter#IVirtual#Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual.IsRealGet">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual.Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual.cc::Castle#Components#DictionaryAdapter#IVirtual#IsReal">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IVirtual`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.#ctor">
            <summary>Initializes a new instance of type StubIVirtual</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.AddSiteIVirtualSiteOfT0">
            <summary>Sets the stub of IVirtual`1.AddSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.cc::Castle#Components#DictionaryAdapter#IVirtual#Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.cc::Castle#Components#DictionaryAdapter#IVirtual{T}#AddSite(Castle.Components.DictionaryAdapter.IVirtualSite{`0})">
            <summary>Sets the stub of IVirtual`1.AddSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.cc::Castle#Components#DictionaryAdapter#IVirtual{T}#Realize">
            <summary>Sets the stub of IVirtual`1.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.cc::Castle#Components#DictionaryAdapter#IVirtual{T}#RemoveSite(Castle.Components.DictionaryAdapter.IVirtualSite{`0})">
            <summary>Sets the stub of IVirtual`1.RemoveSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.IsRealGet">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.Realize">
            <summary>Sets the stub of IVirtual`1.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.Realize01">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.RemoveSiteIVirtualSiteOfT0">
            <summary>Sets the stub of IVirtual`1.RemoveSite(IVirtualSite`1&lt;!0&gt; site)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIVirtual`1.cc::Castle#Components#DictionaryAdapter#IVirtual#IsReal">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualSite`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IVirtualSite`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualSite`1.#ctor">
            <summary>Initializes a new instance of type StubIVirtualSite</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualSite`1.cc::Castle#Components#DictionaryAdapter#IVirtualSite{T}#OnRealizing(`0)">
            <summary>Sets the stub of IVirtualSite`1.OnRealizing(!0 node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualSite`1.OnRealizingT0">
            <summary>Sets the stub of IVirtualSite`1.OnRealizing(!0 node)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualTarget`2">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IVirtualTarget`2</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualTarget`2.#ctor">
            <summary>Initializes a new instance of type StubIVirtualTarget</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualTarget`2.cc::Castle#Components#DictionaryAdapter#IVirtualTarget{TNode@TMember}#OnRealizing(`0,`1)">
            <summary>Sets the stub of IVirtualTarget`2.OnRealizing(!0 node, !1 member)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIVirtualTarget`2.OnRealizingT0T1">
            <summary>Sets the stub of IVirtualTarget`2.OnRealizing(!0 node, !1 member)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.IfExistsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubIfExistsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubIfExistsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.KeyAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubKeyAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.KeyPrefixAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubKeyPrefixAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeyPrefixAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.KeySubstitutionAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubKeySubstitutionAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubKeySubstitutionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ListProjection`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.#ctor(Castle.Components.DictionaryAdapter.ICollectionAdapter{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.Add(`0)">
            <summary>Sets the stub of ListProjection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.AddNew">
            <summary>Sets the stub of ListProjection`1.AddNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.AddNew01">
            <summary>Sets the stub of ListProjection`1.AddNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.AddT0">
            <summary>Sets the stub of ListProjection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.CancelNew(System.Int32)">
            <summary>Sets the stub of ListProjection`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.CancelNewInt32">
            <summary>Sets the stub of ListProjection`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.Clear">
            <summary>Sets the stub of ListProjection`1.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.Clear01">
            <summary>Sets the stub of ListProjection`1.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.Contains(`0)">
            <summary>Sets the stub of ListProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.ContainsT0">
            <summary>Sets the stub of ListProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.EndNew(System.Int32)">
            <summary>Sets the stub of ListProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.EndNewInt32">
            <summary>Sets the stub of ListProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.InitializeStub">
            <summary>Initializes a new instance of type StubListProjection</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnInserted(`0,System.Int32)">
            <summary>Sets the stub of ListProjection`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnInsertedT0Int32">
            <summary>Sets the stub of ListProjection`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnInserting(`0)">
            <summary>Sets the stub of ListProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnInsertingT0">
            <summary>Sets the stub of ListProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>Sets the stub of ListProjection`1.OnListChanged(ListChangedEventArgs args)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnListChangedListChangedEventArgs">
            <summary>Sets the stub of ListProjection`1.OnListChanged(ListChangedEventArgs args)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnRemoved(`0,System.Int32)">
            <summary>Sets the stub of ListProjection`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnRemovedT0Int32">
            <summary>Sets the stub of ListProjection`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnRemoving(`0)">
            <summary>Sets the stub of ListProjection`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnRemovingT0">
            <summary>Sets the stub of ListProjection`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnReplaced(`0,`0,System.Int32)">
            <summary>Sets the stub of ListProjection`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnReplacedT0T0Int32">
            <summary>Sets the stub of ListProjection`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnReplacing(`0,`0)">
            <summary>Sets the stub of ListProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.OnReplacingT0T0">
            <summary>Sets the stub of ListProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.Remove(`0)">
            <summary>Sets the stub of ListProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.RemoveAt(System.Int32)">
            <summary>Sets the stub of ListProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.RemoveAtInt32">
            <summary>Sets the stub of ListProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.RemoveT0">
            <summary>Sets the stub of ListProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubListProjection`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy">
            <summary>Stub type of Castle.Components.DictionaryAdapter.MemberwiseEqualityHashCodeStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubMemberwiseEqualityHashCodeStrategy</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMemberwiseEqualityHashCodeStrategy.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.MultiLevelEditAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubMultiLevelEditAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubMultiLevelEditAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.NameValueCollectionAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.Contains(System.Object)">
            <summary>Sets the stub of NameValueCollectionAdapter.Contains(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.ContainsObject">
            <summary>Sets the stub of NameValueCollectionAdapter.Contains(Object key)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubNameValueCollectionAdapter</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.IsReadOnlyGet">
            <summary>Sets the stub of NameValueCollectionAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.IsSynchronizedGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.ItemGetObject">
            <summary>Sets the stub of NameValueCollectionAdapter.get_Item(Object key)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.ItemSetObjectObject">
            <summary>Sets the stub of NameValueCollectionAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.SyncRootGet">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.IsReadOnly">
            <summary>Sets the stub of NameValueCollectionAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.IsSynchronized">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.Item(System.Object)">
            <summary>Sets the stub of NameValueCollectionAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNameValueCollectionAdapter.SyncRoot">
            <summary>Sets the stub of AbstractDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.NewGuidAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubNewGuidAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubNewGuidAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.OnDemandAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubOnDemandAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubOnDemandAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx">
            <summary>Stub type of Castle.Components.DictionaryAdapter.PropertyChangedEventArgsEx</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.#ctor(System.String,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyChangedEventArgsEx</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.PropertyNameGet">
            <summary>Sets the stub of PropertyChangedEventArgs.get_PropertyName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangedEventArgsEx.PropertyName">
            <summary>Sets the stub of PropertyChangedEventArgs.get_PropertyName()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx">
            <summary>Stub type of Castle.Components.DictionaryAdapter.PropertyChangingEventArgsEx</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.#ctor(System.String,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyChangingEventArgsEx</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.PropertyNameGet">
            <summary>Sets the stub of PropertyChangingEventArgs.get_PropertyName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyChangingEventArgsEx.PropertyName">
            <summary>Sets the stub of PropertyChangingEventArgs.get_PropertyName()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.PropertyDescriptor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.#ctor(Castle.Components.DictionaryAdapter.PropertyDescriptor,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.#ctor(System.Reflection.PropertyInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyDescriptor</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubPropertyDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.ReferenceAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubReferenceAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubReferenceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.RemoveIfAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.#ctor(Castle.Components.DictionaryAdapter.ICondition)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.#ctor(System.Object[],System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRemoveIfAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.RemoveIfEmptyAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRemoveIfEmptyAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubRemoveIfEmptyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.SetProjection`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.#ctor(Castle.Components.DictionaryAdapter.ICollectionAdapter{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.Add(`0)">
            <summary>Sets the stub of SetProjection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.AddNew">
            <summary>Sets the stub of ListProjection`1.AddNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.AddNew01">
            <summary>Sets the stub of ListProjection`1.AddNew()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.AddT0">
            <summary>Sets the stub of SetProjection`1.Add(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.CancelNew(System.Int32)">
            <summary>Sets the stub of ListProjection`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.CancelNewInt32">
            <summary>Sets the stub of ListProjection`1.CancelNew(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.Clear">
            <summary>Sets the stub of SetProjection`1.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.Clear01">
            <summary>Sets the stub of SetProjection`1.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.Contains(`0)">
            <summary>Sets the stub of SetProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.ContainsT0">
            <summary>Sets the stub of SetProjection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.EndNew(System.Int32)">
            <summary>Sets the stub of SetProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.EndNewInt32">
            <summary>Sets the stub of SetProjection`1.EndNew(Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.InitializeStub">
            <summary>Initializes a new instance of type StubSetProjection</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnInserted(`0,System.Int32)">
            <summary>Sets the stub of ListProjection`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnInsertedT0Int32">
            <summary>Sets the stub of ListProjection`1.OnInserted(!0 newValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnInserting(`0)">
            <summary>Sets the stub of SetProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnInsertingT0">
            <summary>Sets the stub of SetProjection`1.OnInserting(!0 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>Sets the stub of ListProjection`1.OnListChanged(ListChangedEventArgs args)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnListChangedListChangedEventArgs">
            <summary>Sets the stub of ListProjection`1.OnListChanged(ListChangedEventArgs args)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnRemoved(`0,System.Int32)">
            <summary>Sets the stub of ListProjection`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnRemovedT0Int32">
            <summary>Sets the stub of ListProjection`1.OnRemoved(!0 oldValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnRemoving(`0)">
            <summary>Sets the stub of ListProjection`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnRemovingT0">
            <summary>Sets the stub of ListProjection`1.OnRemoving(!0 oldValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnReplaced(`0,`0,System.Int32)">
            <summary>Sets the stub of ListProjection`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnReplacedT0T0Int32">
            <summary>Sets the stub of ListProjection`1.OnReplaced(!0 oldValue, !0 newValue, Int32 index)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnReplacing(`0,`0)">
            <summary>Sets the stub of SetProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.OnReplacingT0T0">
            <summary>Sets the stub of SetProjection`1.OnReplacing(!0 oldValue, !0 newValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.Remove(`0)">
            <summary>Sets the stub of SetProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.RemoveAt(System.Int32)">
            <summary>Sets the stub of SetProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.RemoveAtInt32">
            <summary>Sets the stub of SetProjection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.RemoveT0">
            <summary>Sets the stub of SetProjection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSetProjection`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.StringFormatAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubStringFormatAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringFormatAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.StringListAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubStringListAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringListAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.StringStorageAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubStringStorageAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringStorageAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.StringValuesAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubStringValuesAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubStringValuesAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.SuppressNotificationsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSuppressNotificationsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubSuppressNotificationsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.TypeKeyPrefixAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTypeKeyPrefixAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubTypeKeyPrefixAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.VirtualObject`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.#ctor(Castle.Components.DictionaryAdapter.IVirtualSite{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.InitializeStub">
            <summary>Initializes a new instance of type StubVirtualObject</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.IsRealGet">
            <summary>Sets the stub of VirtualObject`1.get_IsReal()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.OnRealized">
            <summary>Sets the stub of VirtualObject`1.OnRealized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.OnRealized01">
            <summary>Sets the stub of VirtualObject`1.OnRealized()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.TryRealize(`0@)">
            <summary>Sets the stub of VirtualObject`1.TryRealize(!0&amp; node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.TryRealizeT0Out">
            <summary>Sets the stub of VirtualObject`1.TryRealize(!0&amp; node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVirtualObject`1.IsReal">
            <summary>Sets the stub of VirtualObject`1.get_IsReal()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.VolatileAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubVolatileAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubVolatileAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.XmlDefaultsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDefaultsAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlDefaultsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.XmlNamespaceAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubXmlNamespaceAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Fakes.StubXmlNamespaceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.CompiledXPath</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.#ctor(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.Constructor">
            <summary>Sets the shim of CompiledXPath.CompiledXPath()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.DepthGet">
            <summary>Sets the shim of CompiledXPath.get_Depth()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.DepthSetInt32">
            <summary>Sets the shim of CompiledXPath.set_Depth(Int32 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.FirstStepGet">
            <summary>Sets the shim of CompiledXPath.get_FirstStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.FirstStepSetCompiledXPathStep">
            <summary>Sets the shim of CompiledXPath.set_FirstStep(CompiledXPathStep value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.IsCreatableGet">
            <summary>Sets the shim of CompiledXPath.get_IsCreatable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.LastStepGet">
            <summary>Sets the shim of CompiledXPath.get_LastStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.MakeNotCreatable">
            <summary>Sets the shim of CompiledXPath.MakeNotCreatable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.PathGet">
            <summary>Sets the shim of CompiledXPath.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.PathSetXPathExpression">
            <summary>Sets the shim of CompiledXPath.set_Path(XPathExpression value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.Prepare">
            <summary>Sets the shim of CompiledXPath.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.SetContextXsltContext">
            <summary>Sets the shim of CompiledXPath.SetContext(XsltContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.StaticConstructor">
            <summary>Sets the shim of CompiledXPath.CompiledXPath()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.DepthGet">
            <summary>Sets the shim of CompiledXPath.get_Depth()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.DepthSetInt32">
            <summary>Sets the shim of CompiledXPath.set_Depth(Int32 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.FirstStepGet">
            <summary>Sets the shim of CompiledXPath.get_FirstStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.FirstStepSetCompiledXPathStep">
            <summary>Sets the shim of CompiledXPath.set_FirstStep(CompiledXPathStep value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.IsCreatableGet">
            <summary>Sets the shim of CompiledXPath.get_IsCreatable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.LastStepGet">
            <summary>Sets the shim of CompiledXPath.get_LastStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.MakeNotCreatable">
            <summary>Sets the shim of CompiledXPath.MakeNotCreatable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.PathGet">
            <summary>Sets the shim of CompiledXPath.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.PathSetXPathExpression">
            <summary>Sets the shim of CompiledXPath.set_Path(XPathExpression value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.Prepare">
            <summary>Sets the shim of CompiledXPath.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPath.AllInstances.SetContextXsltContext">
            <summary>Sets the shim of CompiledXPath.SetContext(XsltContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.CompiledXPathNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.#ctor(Castle.Components.DictionaryAdapter.Xml.CompiledXPathNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.Constructor">
            <summary>Sets the shim of CompiledXPathNode.CompiledXPathNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.DependenciesGet">
            <summary>Sets the shim of CompiledXPathNode.get_Dependencies()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.GetSelfReferenceValue">
            <summary>Sets the shim of CompiledXPathNode.GetSelfReferenceValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.HasNoRealDependencies">
            <summary>Sets the shim of CompiledXPathNode.HasNoRealDependencies()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.IsAttributeGet">
            <summary>Sets the shim of CompiledXPathNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.IsAttributeSetBoolean">
            <summary>Sets the shim of CompiledXPathNode.set_IsAttribute(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.IsSelfReferenceGet">
            <summary>Sets the shim of CompiledXPathNode.get_IsSelfReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.IsSimpleGet">
            <summary>Sets the shim of CompiledXPathNode.get_IsSimple()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.LocalNameGet">
            <summary>Sets the shim of CompiledXPathNode.get_LocalName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.LocalNameSetString">
            <summary>Sets the shim of CompiledXPathNode.set_LocalName(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.NextNodeGet">
            <summary>Sets the shim of CompiledXPathNode.get_NextNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.NextNodeSetCompiledXPathNode">
            <summary>Sets the shim of CompiledXPathNode.set_NextNode(CompiledXPathNode value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.PrefixGet">
            <summary>Sets the shim of CompiledXPathNode.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.PrefixSetString">
            <summary>Sets the shim of CompiledXPathNode.set_Prefix(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.Prepare">
            <summary>Sets the shim of CompiledXPathNode.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.PreviousNodeGet">
            <summary>Sets the shim of CompiledXPathNode.get_PreviousNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.PreviousNodeSetCompiledXPathNode">
            <summary>Sets the shim of CompiledXPathNode.set_PreviousNode(CompiledXPathNode value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.SetContextXsltContext">
            <summary>Sets the shim of CompiledXPathNode.SetContext(XsltContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.StaticConstructor">
            <summary>Sets the shim of CompiledXPathNode.CompiledXPathNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.ValueGet">
            <summary>Sets the shim of CompiledXPathNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.ValueSetXPathExpression">
            <summary>Sets the shim of CompiledXPathNode.set_Value(XPathExpression value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.DependenciesGet">
            <summary>Sets the shim of CompiledXPathNode.get_Dependencies()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.GetSelfReferenceValue">
            <summary>Sets the shim of CompiledXPathNode.GetSelfReferenceValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.HasNoRealDependencies">
            <summary>Sets the shim of CompiledXPathNode.HasNoRealDependencies()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.IsAttributeGet">
            <summary>Sets the shim of CompiledXPathNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.IsAttributeSetBoolean">
            <summary>Sets the shim of CompiledXPathNode.set_IsAttribute(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.IsSelfReferenceGet">
            <summary>Sets the shim of CompiledXPathNode.get_IsSelfReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.IsSimpleGet">
            <summary>Sets the shim of CompiledXPathNode.get_IsSimple()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.LocalNameGet">
            <summary>Sets the shim of CompiledXPathNode.get_LocalName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.LocalNameSetString">
            <summary>Sets the shim of CompiledXPathNode.set_LocalName(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.NextNodeGet">
            <summary>Sets the shim of CompiledXPathNode.get_NextNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.NextNodeSetCompiledXPathNode">
            <summary>Sets the shim of CompiledXPathNode.set_NextNode(CompiledXPathNode value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.PrefixGet">
            <summary>Sets the shim of CompiledXPathNode.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.PrefixSetString">
            <summary>Sets the shim of CompiledXPathNode.set_Prefix(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.Prepare">
            <summary>Sets the shim of CompiledXPathNode.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.PreviousNodeGet">
            <summary>Sets the shim of CompiledXPathNode.get_PreviousNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.PreviousNodeSetCompiledXPathNode">
            <summary>Sets the shim of CompiledXPathNode.set_PreviousNode(CompiledXPathNode value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.SetContextXsltContext">
            <summary>Sets the shim of CompiledXPathNode.SetContext(XsltContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.ValueGet">
            <summary>Sets the shim of CompiledXPathNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathNode.AllInstances.ValueSetXPathExpression">
            <summary>Sets the shim of CompiledXPathNode.set_Value(XPathExpression value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.CompiledXPathStep</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.#ctor(Castle.Components.DictionaryAdapter.Xml.CompiledXPathStep)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.Constructor">
            <summary>Sets the shim of CompiledXPathStep.CompiledXPathStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.NextStepGet">
            <summary>Sets the shim of CompiledXPathStep.get_NextStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.PathGet">
            <summary>Sets the shim of CompiledXPathStep.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.PathSetXPathExpression">
            <summary>Sets the shim of CompiledXPathStep.set_Path(XPathExpression value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.SetContextXsltContext">
            <summary>Sets the shim of CompiledXPathStep.SetContext(XsltContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.AllInstances.NextStepGet">
            <summary>Sets the shim of CompiledXPathStep.get_NextStep()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.AllInstances.PathGet">
            <summary>Sets the shim of CompiledXPathStep.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.AllInstances.PathSetXPathExpression">
            <summary>Sets the shim of CompiledXPathStep.set_Path(XPathExpression value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCompiledXPathStep.AllInstances.SetContextXsltContext">
            <summary>Sets the shim of CompiledXPathStep.SetContext(XsltContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.CursorFlagsExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.AllowsMultipleItemsCursorFlags">
            <summary>Sets the shim of CursorFlagsExtensions.AllowsMultipleItems(CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.IncludesAttributesCursorFlags">
            <summary>Sets the shim of CursorFlagsExtensions.IncludesAttributes(CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.IncludesElementsCursorFlags">
            <summary>Sets the shim of CursorFlagsExtensions.IncludesElements(CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.MutableIfCursorFlagsBoolean">
            <summary>Sets the shim of CursorFlagsExtensions.MutableIf(CursorFlags flags, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimCursorFlagsExtensions.SupportsMutationCursorFlags">
            <summary>Sets the shim of CursorFlagsExtensions.SupportsMutation(CursorFlags flags)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.DefaultXmlReferenceFormat</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.#ctor(Castle.Components.DictionaryAdapter.Xml.DefaultXmlReferenceFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlReferenceFormat)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.ClearIdentityIXmlNode">
            <summary>Sets the shim of DefaultXmlReferenceFormat.ClearIdentity(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.ClearReferenceIXmlNode">
            <summary>Sets the shim of DefaultXmlReferenceFormat.ClearReference(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.Constructor">
            <summary>Sets the shim of DefaultXmlReferenceFormat.DefaultXmlReferenceFormat()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.SetIdentityIXmlNodeInt32">
            <summary>Sets the shim of DefaultXmlReferenceFormat.SetIdentity(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.SetReferenceIXmlNodeInt32">
            <summary>Sets the shim of DefaultXmlReferenceFormat.SetReference(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.StaticConstructor">
            <summary>Sets the shim of DefaultXmlReferenceFormat.DefaultXmlReferenceFormat()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.TryGetIdentityIXmlNodeInt32Out">
            <summary>Sets the shim of DefaultXmlReferenceFormat.TryGetIdentity(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.TryGetReferenceIXmlNodeInt32Out">
            <summary>Sets the shim of DefaultXmlReferenceFormat.TryGetReference(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances.ClearIdentityIXmlNode">
            <summary>Sets the shim of DefaultXmlReferenceFormat.ClearIdentity(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances.ClearReferenceIXmlNode">
            <summary>Sets the shim of DefaultXmlReferenceFormat.ClearReference(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances.SetIdentityIXmlNodeInt32">
            <summary>Sets the shim of DefaultXmlReferenceFormat.SetIdentity(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances.SetReferenceIXmlNodeInt32">
            <summary>Sets the shim of DefaultXmlReferenceFormat.SetReference(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances.TryGetIdentityIXmlNodeInt32Out">
            <summary>Sets the shim of DefaultXmlReferenceFormat.TryGetIdentity(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDefaultXmlReferenceFormat.AllInstances.TryGetReferenceIXmlNodeInt32Out">
            <summary>Sets the shim of DefaultXmlReferenceFormat.TryGetReference(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.DictionaryAdapterExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.CreateChildAdapterIDictionaryAdapterTypeXmlAdapter">
            <summary>Sets the shim of DictionaryAdapterExtensions.CreateChildAdapter(IDictionaryAdapter parent, Type type, XmlAdapter adapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.CreateChildAdapterIDictionaryAdapterTypeXmlAdapterIDictionary">
            <summary>Sets the shim of DictionaryAdapterExtensions.CreateChildAdapter(IDictionaryAdapter parent, Type type, XmlAdapter adapter, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.GetAccessorPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterExtensions.GetAccessor(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.GetXmlMetaDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterExtensions.GetXmlMeta(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.GetXmlTypeDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterExtensions.GetXmlType(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.HasAccessorPropertyDescriptor">
            <summary>Sets the shim of DictionaryAdapterExtensions.HasAccessor(PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.HasXmlMetaDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterExtensions.HasXmlMeta(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.HasXmlTypeDictionaryAdapterMeta">
            <summary>Sets the shim of DictionaryAdapterExtensions.HasXmlType(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.SetAccessorPropertyDescriptorXmlAccessor">
            <summary>Sets the shim of DictionaryAdapterExtensions.SetAccessor(PropertyDescriptor property, XmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.SetXmlMetaDictionaryAdapterMetaXmlMetadata">
            <summary>Sets the shim of DictionaryAdapterExtensions.SetXmlMeta(DictionaryAdapterMeta meta, XmlMetadata xmlMeta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimDictionaryAdapterExtensions.SetXmlTypeDictionaryAdapterMetaString">
            <summary>Sets the shim of DictionaryAdapterExtensions.SetXmlType(DictionaryAdapterMeta meta, String value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimRealizableExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.RealizableExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimRealizableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimRealizableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimRealizableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimRealizableExtensions.RequireRealizableOf1IRealizableSource``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizableSource,Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets the shim of RealizableExtensions.RequireRealizable(IRealizableSource obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimRealizableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.SingletonDispenser`2</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.#ctor(Castle.Components.DictionaryAdapter.Xml.SingletonDispenser{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.ConstructorFuncOfT0T1">
            <summary>Sets the shim of SingletonDispenser`2.SingletonDispenser`2(Func`2&lt;!0,!1&gt; factory)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.CreateT0Object">
            <summary>Sets the shim of SingletonDispenser`2.Create(!0 key, Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.GetOrCreateT0">
            <summary>Sets the shim of SingletonDispenser`2.GetOrCreate(!0 key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.ItemGetT0">
            <summary>Sets the shim of SingletonDispenser`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.ItemSetT0T1">
            <summary>Sets the shim of SingletonDispenser`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.TryGetExistingItemT0ObjectOut">
            <summary>Sets the shim of SingletonDispenser`2.TryGetExistingItem(!0 key, Object&amp; item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.WaitForCreateT0Object">
            <summary>Sets the shim of SingletonDispenser`2.WaitForCreate(!0 key, Object item)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances.CreateT0Object">
            <summary>Sets the shim of SingletonDispenser`2.Create(!0 key, Object item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances.GetOrCreateT0">
            <summary>Sets the shim of SingletonDispenser`2.GetOrCreate(!0 key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of SingletonDispenser`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances.ItemSetT0T1">
            <summary>Sets the shim of SingletonDispenser`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances.TryGetExistingItemT0ObjectOut">
            <summary>Sets the shim of SingletonDispenser`2.TryGetExistingItem(!0 key, Object&amp; item)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSingletonDispenser`2.AllInstances.WaitForCreateT0Object">
            <summary>Sets the shim of SingletonDispenser`2.WaitForCreate(!0 key, Object item)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.SysXmlCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.#ctor(Castle.Components.DictionaryAdapter.Xml.SysXmlCursor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCursor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIterator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XmlNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XPath.XPathNavigator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Advance">
            <summary>Sets the shim of SysXmlCursor.Advance()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AdvanceAttributeXmlNode">
            <summary>Sets the shim of SysXmlCursor.AdvanceAttribute(XmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AdvanceElementXmlNode">
            <summary>Sets the shim of SysXmlCursor.AdvanceElement(XmlNode next)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AdvanceToFirstAttribute">
            <summary>Sets the shim of SysXmlCursor.AdvanceToFirstAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AdvanceToFirstElement">
            <summary>Sets the shim of SysXmlCursor.AdvanceToFirstElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AdvanceToNextAttribute">
            <summary>Sets the shim of SysXmlCursor.AdvanceToNextAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AdvanceToNextElement">
            <summary>Sets the shim of SysXmlCursor.AdvanceToNextElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.ClrTypeGet">
            <summary>Sets the shim of SysXmlCursor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CoerceAttributeIXmlKnownType">
            <summary>Sets the shim of SysXmlCursor.CoerceAttribute(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CoerceElementIXmlKnownType">
            <summary>Sets the shim of SysXmlCursor.CoerceElement(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CoerceType">
            <summary>Sets the shim of SysXmlCursor.Coerce(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.ConstructorIXmlNodeIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of SysXmlCursor.SysXmlCursor(IXmlNode parent, IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CreateAttributeCoreXmlNodeXmlName">
            <summary>Sets the shim of SysXmlCursor.CreateAttributeCore(XmlNode parent, XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CreateAttributeIXmlKnownTypeXmlNode">
            <summary>Sets the shim of SysXmlCursor.CreateAttribute(IXmlKnownType knownType, XmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CreateElementCoreXmlNodeXmlName">
            <summary>Sets the shim of SysXmlCursor.CreateElementCore(XmlNode parent, XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CreateElementIXmlKnownTypeXmlNode">
            <summary>Sets the shim of SysXmlCursor.CreateElement(IXmlKnownType knownType, XmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.CreateType">
            <summary>Sets the shim of SysXmlCursor.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.EvaluateCompiledXPath">
            <summary>Sets the shim of SysXmlCursor.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.GetEffectiveNameIXmlKnownTypeXmlNode">
            <summary>Sets the shim of SysXmlCursor.GetEffectiveName(IXmlKnownType knownType, XmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.HasCurrentGet">
            <summary>Sets the shim of SysXmlCursor.get_HasCurrent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsAtEnd">
            <summary>Sets the shim of SysXmlCursor.IsAtEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsAttributeGet">
            <summary>Sets the shim of SysXmlCursor.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsElementGet">
            <summary>Sets the shim of SysXmlCursor.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsMatch">
            <summary>Sets the shim of SysXmlCursor.IsMatch()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsNilGet">
            <summary>Sets the shim of SysXmlCursor.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsNilSetBoolean">
            <summary>Sets the shim of SysXmlCursor.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.IsRealGet">
            <summary>Sets the shim of SysXmlCursor.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MakeNextType">
            <summary>Sets the shim of SysXmlCursor.MakeNext(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveNext">
            <summary>Sets the shim of SysXmlCursor.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveNextCore">
            <summary>Sets the shim of SysXmlCursor.MoveNextCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveToEnd">
            <summary>Sets the shim of SysXmlCursor.MoveToEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveToIXmlNode">
            <summary>Sets the shim of SysXmlCursor.MoveTo(IXmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveToParentOfAttribute">
            <summary>Sets the shim of SysXmlCursor.MoveToParentOfAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveToParentOfElement">
            <summary>Sets the shim of SysXmlCursor.MoveToParentOfElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.MoveToRealizedParent">
            <summary>Sets the shim of SysXmlCursor.MoveToRealizedParent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.NameGet">
            <summary>Sets the shim of SysXmlCursor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.OnRealized">
            <summary>Sets the shim of SysXmlCursor.OnRealized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Realize">
            <summary>Sets the shim of SysXmlCursor.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RealizedAddEventHandler">
            <summary>Sets the shim of SysXmlCursor.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RealizedRemoveEventHandler">
            <summary>Sets the shim of SysXmlCursor.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Remove">
            <summary>Sets the shim of SysXmlCursor.Remove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RemoveAllNext">
            <summary>Sets the shim of SysXmlCursor.RemoveAllNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RemoveAttributeXmlNode">
            <summary>Sets the shim of SysXmlCursor.RemoveAttribute(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RemoveElementXmlNode">
            <summary>Sets the shim of SysXmlCursor.RemoveElement(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RequireCoercible">
            <summary>Sets the shim of SysXmlCursor.RequireCoercible()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RequireCreatable">
            <summary>Sets the shim of SysXmlCursor.RequireCreatable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RequireNoXsiTypeIXmlKnownType">
            <summary>Sets the shim of SysXmlCursor.RequireNoXsiType(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.RequireRemovable">
            <summary>Sets the shim of SysXmlCursor.RequireRemovable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Reset">
            <summary>Sets the shim of SysXmlCursor.Reset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.Save">
            <summary>Sets the shim of SysXmlCursor.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.SetMovedToAttribute">
            <summary>Sets the shim of SysXmlCursor.SetMovedToAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.SetMovedToElement">
            <summary>Sets the shim of SysXmlCursor.SetMovedToElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.StaticConstructor">
            <summary>Sets the shim of SysXmlCursor.SysXmlCursor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.ValueGet">
            <summary>Sets the shim of SysXmlCursor.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.ValueSetString">
            <summary>Sets the shim of SysXmlCursor.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.XmlGet">
            <summary>Sets the shim of SysXmlCursor.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.XsiTypeGet">
            <summary>Sets the shim of SysXmlCursor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.Advance">
            <summary>Sets the shim of SysXmlCursor.Advance()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.AdvanceAttributeXmlNode">
            <summary>Sets the shim of SysXmlCursor.AdvanceAttribute(XmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.AdvanceElementXmlNode">
            <summary>Sets the shim of SysXmlCursor.AdvanceElement(XmlNode next)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.AdvanceToFirstAttribute">
            <summary>Sets the shim of SysXmlCursor.AdvanceToFirstAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.AdvanceToFirstElement">
            <summary>Sets the shim of SysXmlCursor.AdvanceToFirstElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.AdvanceToNextAttribute">
            <summary>Sets the shim of SysXmlCursor.AdvanceToNextAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.AdvanceToNextElement">
            <summary>Sets the shim of SysXmlCursor.AdvanceToNextElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.ClrTypeGet">
            <summary>Sets the shim of SysXmlCursor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CoerceAttributeIXmlKnownType">
            <summary>Sets the shim of SysXmlCursor.CoerceAttribute(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CoerceElementIXmlKnownType">
            <summary>Sets the shim of SysXmlCursor.CoerceElement(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CoerceType">
            <summary>Sets the shim of SysXmlCursor.Coerce(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CreateAttributeCoreXmlNodeXmlName">
            <summary>Sets the shim of SysXmlCursor.CreateAttributeCore(XmlNode parent, XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CreateAttributeIXmlKnownTypeXmlNode">
            <summary>Sets the shim of SysXmlCursor.CreateAttribute(IXmlKnownType knownType, XmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CreateElementCoreXmlNodeXmlName">
            <summary>Sets the shim of SysXmlCursor.CreateElementCore(XmlNode parent, XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CreateElementIXmlKnownTypeXmlNode">
            <summary>Sets the shim of SysXmlCursor.CreateElement(IXmlKnownType knownType, XmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.CreateType">
            <summary>Sets the shim of SysXmlCursor.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.EvaluateCompiledXPath">
            <summary>Sets the shim of SysXmlCursor.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.GetEffectiveNameIXmlKnownTypeXmlNode">
            <summary>Sets the shim of SysXmlCursor.GetEffectiveName(IXmlKnownType knownType, XmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.HasCurrentGet">
            <summary>Sets the shim of SysXmlCursor.get_HasCurrent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsAtEnd">
            <summary>Sets the shim of SysXmlCursor.IsAtEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsAttributeGet">
            <summary>Sets the shim of SysXmlCursor.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsElementGet">
            <summary>Sets the shim of SysXmlCursor.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsMatch">
            <summary>Sets the shim of SysXmlCursor.IsMatch()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsNilGet">
            <summary>Sets the shim of SysXmlCursor.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsNilSetBoolean">
            <summary>Sets the shim of SysXmlCursor.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.IsRealGet">
            <summary>Sets the shim of SysXmlCursor.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MakeNextType">
            <summary>Sets the shim of SysXmlCursor.MakeNext(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveNext">
            <summary>Sets the shim of SysXmlCursor.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveNextCore">
            <summary>Sets the shim of SysXmlCursor.MoveNextCore()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveToEnd">
            <summary>Sets the shim of SysXmlCursor.MoveToEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveToIXmlNode">
            <summary>Sets the shim of SysXmlCursor.MoveTo(IXmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveToParentOfAttribute">
            <summary>Sets the shim of SysXmlCursor.MoveToParentOfAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveToParentOfElement">
            <summary>Sets the shim of SysXmlCursor.MoveToParentOfElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.MoveToRealizedParent">
            <summary>Sets the shim of SysXmlCursor.MoveToRealizedParent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.NameGet">
            <summary>Sets the shim of SysXmlCursor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.OnRealized">
            <summary>Sets the shim of SysXmlCursor.OnRealized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.Realize">
            <summary>Sets the shim of SysXmlCursor.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RealizedAddEventHandler">
            <summary>Sets the shim of SysXmlCursor.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RealizedRemoveEventHandler">
            <summary>Sets the shim of SysXmlCursor.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.Remove">
            <summary>Sets the shim of SysXmlCursor.Remove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RemoveAllNext">
            <summary>Sets the shim of SysXmlCursor.RemoveAllNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RemoveAttributeXmlNode">
            <summary>Sets the shim of SysXmlCursor.RemoveAttribute(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RemoveElementXmlNode">
            <summary>Sets the shim of SysXmlCursor.RemoveElement(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RequireCoercible">
            <summary>Sets the shim of SysXmlCursor.RequireCoercible()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RequireCreatable">
            <summary>Sets the shim of SysXmlCursor.RequireCreatable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RequireNoXsiTypeIXmlKnownType">
            <summary>Sets the shim of SysXmlCursor.RequireNoXsiType(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.RequireRemovable">
            <summary>Sets the shim of SysXmlCursor.RequireRemovable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.Reset">
            <summary>Sets the shim of SysXmlCursor.Reset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.Save">
            <summary>Sets the shim of SysXmlCursor.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.SetMovedToAttribute">
            <summary>Sets the shim of SysXmlCursor.SetMovedToAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.SetMovedToElement">
            <summary>Sets the shim of SysXmlCursor.SetMovedToElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.ValueGet">
            <summary>Sets the shim of SysXmlCursor.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.ValueSetString">
            <summary>Sets the shim of SysXmlCursor.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.XmlGet">
            <summary>Sets the shim of SysXmlCursor.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlCursor.AllInstances.XsiTypeGet">
            <summary>Sets the shim of SysXmlCursor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.SysXmlExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.DefineNamespaceXmlElementStringString">
            <summary>Sets the shim of SysXmlExtensions.DefineNamespace(XmlElement node, String prefix, String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.FindRootXmlElement">
            <summary>Sets the shim of SysXmlExtensions.FindRoot(XmlElement node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.IsNamespaceXmlAttribute">
            <summary>Sets the shim of SysXmlExtensions.IsNamespace(XmlAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlExtensions.IsXsiTypeXmlAttribute">
            <summary>Sets the shim of SysXmlExtensions.IsXsiType(XmlAttribute attribute)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.SysXmlNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.#ctor(Castle.Components.DictionaryAdapter.Xml.SysXmlNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XmlNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XPath.XPathNavigator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Clear">
            <summary>Sets the shim of SysXmlNode.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ClearAttributeXmlName">
            <summary>Sets the shim of SysXmlNode.ClearAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ClearAttributes">
            <summary>Sets the shim of SysXmlNode.ClearAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ClearChildren">
            <summary>Sets the shim of SysXmlNode.ClearChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ConstructorIXmlNamespaceSourceIXmlNode">
            <summary>Sets the shim of SysXmlNode.SysXmlNode(IXmlNamespaceSource namespaces, IXmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ConstructorXmlNodeTypeIXmlNamespaceSource">
            <summary>Sets the shim of SysXmlNode.SysXmlNode(XmlNode node, Type type, IXmlNamespaceSource namespaces)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.DefineNamespaceStringStringBoolean">
            <summary>Sets the shim of SysXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.EvaluateCompiledXPath">
            <summary>Sets the shim of SysXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.GetAttributeXmlName">
            <summary>Sets the shim of SysXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.GetNamespaceTargetElement">
            <summary>Sets the shim of SysXmlNode.GetNamespaceTargetElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.GetNode">
            <summary>Sets the shim of SysXmlNode.GetNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.IsAttributeGet">
            <summary>Sets the shim of SysXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.IsElementGet">
            <summary>Sets the shim of SysXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.IsNilGet">
            <summary>Sets the shim of SysXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.IsNilSetBoolean">
            <summary>Sets the shim of SysXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.LookupNamespaceUriString">
            <summary>Sets the shim of SysXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.LookupPrefixString">
            <summary>Sets the shim of SysXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.NameGet">
            <summary>Sets the shim of SysXmlNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ReadSubtree">
            <summary>Sets the shim of SysXmlNode.ReadSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.Save">
            <summary>Sets the shim of SysXmlNode.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of SysXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of SysXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.SelectSelfType">
            <summary>Sets the shim of SysXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.SelectSubtree">
            <summary>Sets the shim of SysXmlNode.SelectSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.SetAttributeCoreXmlNameString">
            <summary>Sets the shim of SysXmlNode.SetAttributeCore(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.SetAttributeXmlNameString">
            <summary>Sets the shim of SysXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.UnderlyingObjectGet">
            <summary>Sets the shim of SysXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the shim of SysXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXPathXPathNavigatorget">
            <summary>Sets the shim of SysXmlNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XPath.XPathNavigator&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXmlNodeget">
            <summary>Sets the shim of SysXmlNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XmlNode&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ValueGet">
            <summary>Sets the shim of SysXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.ValueSetString">
            <summary>Sets the shim of SysXmlNode.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.WriteAttributes">
            <summary>Sets the shim of SysXmlNode.WriteAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.WriteChildren">
            <summary>Sets the shim of SysXmlNode.WriteChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.XmlGet">
            <summary>Sets the shim of SysXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.XsiTypeGet">
            <summary>Sets the shim of SysXmlNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.Clear">
            <summary>Sets the shim of SysXmlNode.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ClearAttributeXmlName">
            <summary>Sets the shim of SysXmlNode.ClearAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ClearAttributes">
            <summary>Sets the shim of SysXmlNode.ClearAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ClearChildren">
            <summary>Sets the shim of SysXmlNode.ClearChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.DefineNamespaceStringStringBoolean">
            <summary>Sets the shim of SysXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.EvaluateCompiledXPath">
            <summary>Sets the shim of SysXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.GetAttributeXmlName">
            <summary>Sets the shim of SysXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.GetNamespaceTargetElement">
            <summary>Sets the shim of SysXmlNode.GetNamespaceTargetElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.GetNode">
            <summary>Sets the shim of SysXmlNode.GetNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.IsAttributeGet">
            <summary>Sets the shim of SysXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.IsElementGet">
            <summary>Sets the shim of SysXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.IsNilGet">
            <summary>Sets the shim of SysXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.IsNilSetBoolean">
            <summary>Sets the shim of SysXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.LookupNamespaceUriString">
            <summary>Sets the shim of SysXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.LookupPrefixString">
            <summary>Sets the shim of SysXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.NameGet">
            <summary>Sets the shim of SysXmlNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ReadSubtree">
            <summary>Sets the shim of SysXmlNode.ReadSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.Save">
            <summary>Sets the shim of SysXmlNode.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of SysXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of SysXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.SelectSelfType">
            <summary>Sets the shim of SysXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.SelectSubtree">
            <summary>Sets the shim of SysXmlNode.SelectSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.SetAttributeCoreXmlNameString">
            <summary>Sets the shim of SysXmlNode.SetAttributeCore(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.SetAttributeXmlNameString">
            <summary>Sets the shim of SysXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.UnderlyingObjectGet">
            <summary>Sets the shim of SysXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the shim of SysXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXPathXPathNavigatorget">
            <summary>Sets the shim of SysXmlNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XPath.XPathNavigator&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXmlNodeget">
            <summary>Sets the shim of SysXmlNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XmlNode&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ValueGet">
            <summary>Sets the shim of SysXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.ValueSetString">
            <summary>Sets the shim of SysXmlNode.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.WriteAttributes">
            <summary>Sets the shim of SysXmlNode.WriteAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.WriteChildren">
            <summary>Sets the shim of SysXmlNode.WriteChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.XmlGet">
            <summary>Sets the shim of SysXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlNode.AllInstances.XsiTypeGet">
            <summary>Sets the shim of SysXmlNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.SysXmlSubtreeIterator</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.#ctor(Castle.Components.DictionaryAdapter.Xml.SysXmlSubtreeIterator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIterator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XmlNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XPath.XPathNavigator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.ConstructorIXmlNodeIXmlNamespaceSource">
            <summary>Sets the shim of SysXmlSubtreeIterator.SysXmlSubtreeIterator(IXmlNode parent, IXmlNamespaceSource namespaces)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.MoveNext">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.MoveToElementXmlNode">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveToElement(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.MoveToInitial">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveToInitial()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.MoveToSubsequent">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveToSubsequent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.Save">
            <summary>Sets the shim of SysXmlSubtreeIterator.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.SetNextXmlNode">
            <summary>Sets the shim of SysXmlSubtreeIterator.SetNext(XmlNode node)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances.MoveNext">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances.MoveToElementXmlNode">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveToElement(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances.MoveToInitial">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveToInitial()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances.MoveToSubsequent">
            <summary>Sets the shim of SysXmlSubtreeIterator.MoveToSubsequent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances.Save">
            <summary>Sets the shim of SysXmlSubtreeIterator.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimSysXmlSubtreeIterator.AllInstances.SetNextXmlNode">
            <summary>Sets the shim of SysXmlSubtreeIterator.SetNext(XmlNode node)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.Try</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry.FailureOf1M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0,System.Boolean})">
            <summary>Sets the shim of Try.Failure(!!0&amp; result)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry.SuccessOf1M0OutM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.CastleCoreDelegates.Out0Func3{``0,``0,System.Boolean})">
            <summary>Sets the shim of Try.Success(!!0&amp; result, !!0 value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.TypeExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.GetCollectionItemTypeType">
            <summary>Sets the shim of TypeExtensions.GetCollectionItemType(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.GetComponentTypeObject">
            <summary>Sets the shim of TypeExtensions.GetComponentType(Object obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.IsCustomSerializableType">
            <summary>Sets the shim of TypeExtensions.IsCustomSerializable(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimTypeExtensions.NonNullableType">
            <summary>Sets the shim of TypeExtensions.NonNullable(Type type)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimWsdl">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.Wsdl</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimWsdl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimWsdl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimWsdl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimWsdl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimWsdl.StaticConstructor">
            <summary>Sets the shim of Wsdl.Wsdl()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.#ctor(Castle.Components.DictionaryAdapter.Xml.XPathAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.ConstructorString">
            <summary>Sets the shim of XPathAttribute.XPathAttribute(String path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.ConstructorStringString">
            <summary>Sets the shim of XPathAttribute.XPathAttribute(String get, String set)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.GetPathGet">
            <summary>Sets the shim of XPathAttribute.get_GetPath()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.NullableGet">
            <summary>Sets the shim of XPathAttribute.get_Nullable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.NullableSetBoolean">
            <summary>Sets the shim of XPathAttribute.set_Nullable(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.SetPathGet">
            <summary>Sets the shim of XPathAttribute.get_SetPath()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.AllInstances.GetPathGet">
            <summary>Sets the shim of XPathAttribute.get_GetPath()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.AllInstances.NullableGet">
            <summary>Sets the shim of XPathAttribute.get_Nullable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.AllInstances.NullableSetBoolean">
            <summary>Sets the shim of XPathAttribute.set_Nullable(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathAttribute.AllInstances.SetPathGet">
            <summary>Sets the shim of XPathAttribute.get_SetPath()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{Castle.Components.DictionaryAdapter.Xml.XPathAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.ConfigureXPathAttribute">
            <summary>Sets the shim of XPathBehaviorAccessor.Configure(XPathAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.ConfigureXPathFunctionAttribute">
            <summary>Sets the shim of XPathBehaviorAccessor.Configure(XPathFunctionAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.ConfigureXPathVariableAttribute">
            <summary>Sets the shim of XPathBehaviorAccessor.Configure(XPathVariableAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.ConstructorTypeIXmlContext">
            <summary>Sets the shim of XPathBehaviorAccessor.XPathBehaviorAccessor(Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.CreatesAttributesGet">
            <summary>Sets the shim of XPathBehaviorAccessor.get_CreatesAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.DefaultCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeMapget">
            <summary>Sets the shim of XPathBehaviorAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.EvaluateIXmlNode">
            <summary>Sets the shim of XPathBehaviorAccessor.Evaluate(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the shim of XPathBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.GetDefaultPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.GetDefaultPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.GetPropertyValueCoreIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.GetPropertyValueCore(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the shim of XPathBehaviorAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.Prepare">
            <summary>Sets the shim of XPathBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.SelectsNodesGet">
            <summary>Sets the shim of XPathBehaviorAccessor.get_SelectsNodes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the shim of XPathBehaviorAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.StaticConstructor">
            <summary>Sets the shim of XPathBehaviorAccessor.XPathBehaviorAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the shim of XPathBehaviorAccessor.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the shim of XPathBehaviorAccessor.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.XsiTypeCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeget">
            <summary>Sets the shim of XPathBehaviorAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor._cctorb__0StringTypeIXmlContext">
            <summary>Sets the shim of XPathBehaviorAccessor.&lt;.cctor&gt;b__0(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.ConfigureXPathAttribute">
            <summary>Sets the shim of XPathBehaviorAccessor.Configure(XPathAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.ConfigureXPathFunctionAttribute">
            <summary>Sets the shim of XPathBehaviorAccessor.Configure(XPathFunctionAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.ConfigureXPathVariableAttribute">
            <summary>Sets the shim of XPathBehaviorAccessor.Configure(XPathVariableAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.CreatesAttributesGet">
            <summary>Sets the shim of XPathBehaviorAccessor.get_CreatesAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.DefaultCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeMapget">
            <summary>Sets the shim of XPathBehaviorAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.EvaluateIXmlNode">
            <summary>Sets the shim of XPathBehaviorAccessor.Evaluate(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.GetCollectionAccessorType">
            <summary>Sets the shim of XPathBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.GetDefaultPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.GetDefaultPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.GetPropertyValueCoreIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.GetPropertyValueCore(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.IsPropertyDefinedIXmlNode">
            <summary>Sets the shim of XPathBehaviorAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.Prepare">
            <summary>Sets the shim of XPathBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XPathBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.SelectsNodesGet">
            <summary>Sets the shim of XPathBehaviorAccessor.get_SelectsNodes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the shim of XPathBehaviorAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the shim of XPathBehaviorAccessor.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the shim of XPathBehaviorAccessor.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathBehaviorAccessor.AllInstances.XsiTypeCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeget">
            <summary>Sets the shim of XPathBehaviorAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathCompiler</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.CompileString">
            <summary>Sets the shim of XPathCompiler.Compile(String path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.LinkNodesCompiledXPathNodeCompiledXPathNode">
            <summary>Sets the shim of XPathCompiler.LinkNodes(CompiledXPathNode previous, CompiledXPathNode next)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler.StaticConstructor">
            <summary>Sets the shim of XPathCompiler.XPathCompiler()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler._cctorb__0">
            <summary>Sets the shim of XPathCompiler.&lt;.cctor&gt;b__0()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathCompiler._cctorb__1">
            <summary>Sets the shim of XPathCompiler.&lt;.cctor&gt;b__1()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.CreateNavigatorSafeIXPathNavigable">
            <summary>Sets the shim of XPathExtensions.CreateNavigatorSafe(IXPathNavigable source)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.DeleteChildrenXPathNavigator">
            <summary>Sets the shim of XPathExtensions.DeleteChildren(XPathNavigator node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.GetParentXPathNavigator">
            <summary>Sets the shim of XPathExtensions.GetParent(XPathNavigator navigator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.GetRootElementXPathNavigator">
            <summary>Sets the shim of XPathExtensions.GetRootElement(XPathNavigator navigator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.MoveToLastAttributeXPathNavigator">
            <summary>Sets the shim of XPathExtensions.MoveToLastAttribute(XPathNavigator navigator)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathExtensions.MoveToLastChildXPathNavigator">
            <summary>Sets the shim of XPathExtensions.MoveToLastChild(XPathNavigator navigator)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.#ctor(Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.Bind(System.Xml.Xsl.IXsltContextFunction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.ArgTypesGet">
            <summary>Sets the shim of XPathFunctionAttribute.get_ArgTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.Constructor">
            <summary>Sets the shim of XPathFunctionAttribute.XPathFunctionAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.MaxargsGet">
            <summary>Sets the shim of XPathFunctionAttribute.get_Maxargs()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.MinargsGet">
            <summary>Sets the shim of XPathFunctionAttribute.get_Minargs()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.StaticConstructor">
            <summary>Sets the shim of XPathFunctionAttribute.XPathFunctionAttribute()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.AllInstances.ArgTypesGet">
            <summary>Sets the shim of XPathFunctionAttribute.get_ArgTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.AllInstances.MaxargsGet">
            <summary>Sets the shim of XPathFunctionAttribute.get_Maxargs()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathFunctionAttribute.AllInstances.MinargsGet">
            <summary>Sets the shim of XPathFunctionAttribute.get_Minargs()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.#ctor(Castle.Components.DictionaryAdapter.Xml.XPathNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XmlNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XPath.XPathNavigator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Clear">
            <summary>Sets the shim of XPathNode.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ClearAttributeXmlName">
            <summary>Sets the shim of XPathNode.ClearAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ConstructorCompiledXPathIXmlNamespaceSourceIXmlNode">
            <summary>Sets the shim of XPathNode.XPathNode(CompiledXPath path, IXmlNamespaceSource namespaces, IXmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ConstructorXPathNavigatorTypeIXmlNamespaceSource">
            <summary>Sets the shim of XPathNode.XPathNode(XPathNavigator node, Type type, IXmlNamespaceSource namespaces)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.DefineNamespaceStringStringBoolean">
            <summary>Sets the shim of XPathNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.EvaluateCompiledXPath">
            <summary>Sets the shim of XPathNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.GetAttributeXmlName">
            <summary>Sets the shim of XPathNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.IsAttributeGet">
            <summary>Sets the shim of XPathNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.IsElementGet">
            <summary>Sets the shim of XPathNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.IsNilGet">
            <summary>Sets the shim of XPathNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.IsNilSetBoolean">
            <summary>Sets the shim of XPathNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.LookupNamespaceUriString">
            <summary>Sets the shim of XPathNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.LookupPrefixString">
            <summary>Sets the shim of XPathNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.NameGet">
            <summary>Sets the shim of XPathNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.PathGet">
            <summary>Sets the shim of XPathNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ReadSubtree">
            <summary>Sets the shim of XPathNode.ReadSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.Save">
            <summary>Sets the shim of XPathNode.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XPathNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XPathNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.SelectSelfType">
            <summary>Sets the shim of XPathNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.SelectSubtree">
            <summary>Sets the shim of XPathNode.SelectSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.SetAttributeCoreXmlNameString">
            <summary>Sets the shim of XPathNode.SetAttributeCore(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.SetAttributeXmlNameString">
            <summary>Sets the shim of XPathNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.UnderlyingObjectGet">
            <summary>Sets the shim of XPathNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the shim of XPathNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXPathXPathNavigatorget">
            <summary>Sets the shim of XPathNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XPath.XPathNavigator&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXmlNodeget">
            <summary>Sets the shim of XPathNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XmlNode&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ValueGet">
            <summary>Sets the shim of XPathNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.ValueSetString">
            <summary>Sets the shim of XPathNode.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.WriteAttributes">
            <summary>Sets the shim of XPathNode.WriteAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.WriteChildren">
            <summary>Sets the shim of XPathNode.WriteChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.XmlGet">
            <summary>Sets the shim of XPathNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.XsiTypeGet">
            <summary>Sets the shim of XPathNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.Clear">
            <summary>Sets the shim of XPathNode.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.ClearAttributeXmlName">
            <summary>Sets the shim of XPathNode.ClearAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.DefineNamespaceStringStringBoolean">
            <summary>Sets the shim of XPathNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.EvaluateCompiledXPath">
            <summary>Sets the shim of XPathNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.GetAttributeXmlName">
            <summary>Sets the shim of XPathNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.IsAttributeGet">
            <summary>Sets the shim of XPathNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.IsElementGet">
            <summary>Sets the shim of XPathNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.IsNilGet">
            <summary>Sets the shim of XPathNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.IsNilSetBoolean">
            <summary>Sets the shim of XPathNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.LookupNamespaceUriString">
            <summary>Sets the shim of XPathNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.LookupPrefixString">
            <summary>Sets the shim of XPathNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.NameGet">
            <summary>Sets the shim of XPathNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.PathGet">
            <summary>Sets the shim of XPathNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.ReadSubtree">
            <summary>Sets the shim of XPathNode.ReadSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.Save">
            <summary>Sets the shim of XPathNode.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XPathNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XPathNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.SelectSelfType">
            <summary>Sets the shim of XPathNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.SelectSubtree">
            <summary>Sets the shim of XPathNode.SelectSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.SetAttributeCoreXmlNameString">
            <summary>Sets the shim of XPathNode.SetAttributeCore(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.SetAttributeXmlNameString">
            <summary>Sets the shim of XPathNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.UnderlyingObjectGet">
            <summary>Sets the shim of XPathNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the shim of XPathNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXPathXPathNavigatorget">
            <summary>Sets the shim of XPathNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XPath.XPathNavigator&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.ValueCastleComponentsDictionaryAdapterXmlIRealizableSystemXmlXmlNodeget">
            <summary>Sets the shim of XPathNode.Castle.Components.DictionaryAdapter.Xml.IRealizable&lt;System.Xml.XmlNode&gt;.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.ValueGet">
            <summary>Sets the shim of XPathNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.ValueSetString">
            <summary>Sets the shim of XPathNode.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.WriteAttributes">
            <summary>Sets the shim of XPathNode.WriteAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.WriteChildren">
            <summary>Sets the shim of XPathNode.WriteChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.XmlGet">
            <summary>Sets the shim of XPathNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathNode.AllInstances.XsiTypeGet">
            <summary>Sets the shim of XPathNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathReadOnlyCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.#ctor(Castle.Components.DictionaryAdapter.Xml.XPathReadOnlyCursor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCursor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIterator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XmlNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizable{System.Xml.XPath.XPathNavigator})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.CoerceType">
            <summary>Sets the shim of XPathReadOnlyCursor.Coerce(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.ConstructorIXmlNodeCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XPathReadOnlyCursor.XPathReadOnlyCursor(IXmlNode parent, CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.CreateType">
            <summary>Sets the shim of XPathReadOnlyCursor.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.MakeNextType">
            <summary>Sets the shim of XPathReadOnlyCursor.MakeNext(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.MoveNext">
            <summary>Sets the shim of XPathReadOnlyCursor.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.MoveToEnd">
            <summary>Sets the shim of XPathReadOnlyCursor.MoveToEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.MoveToIXmlNode">
            <summary>Sets the shim of XPathReadOnlyCursor.MoveTo(IXmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Remove">
            <summary>Sets the shim of XPathReadOnlyCursor.Remove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.RemoveAllNext">
            <summary>Sets the shim of XPathReadOnlyCursor.RemoveAllNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Reset">
            <summary>Sets the shim of XPathReadOnlyCursor.Reset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.Save">
            <summary>Sets the shim of XPathReadOnlyCursor.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.SetAtEnd">
            <summary>Sets the shim of XPathReadOnlyCursor.SetAtEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.SetAtNext">
            <summary>Sets the shim of XPathReadOnlyCursor.SetAtNext()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.CoerceType">
            <summary>Sets the shim of XPathReadOnlyCursor.Coerce(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.CreateType">
            <summary>Sets the shim of XPathReadOnlyCursor.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.MakeNextType">
            <summary>Sets the shim of XPathReadOnlyCursor.MakeNext(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.MoveNext">
            <summary>Sets the shim of XPathReadOnlyCursor.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.MoveToEnd">
            <summary>Sets the shim of XPathReadOnlyCursor.MoveToEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.MoveToIXmlNode">
            <summary>Sets the shim of XPathReadOnlyCursor.MoveTo(IXmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.Remove">
            <summary>Sets the shim of XPathReadOnlyCursor.Remove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.RemoveAllNext">
            <summary>Sets the shim of XPathReadOnlyCursor.RemoveAllNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.Reset">
            <summary>Sets the shim of XPathReadOnlyCursor.Reset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.Save">
            <summary>Sets the shim of XPathReadOnlyCursor.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.SetAtEnd">
            <summary>Sets the shim of XPathReadOnlyCursor.SetAtEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathReadOnlyCursor.AllInstances.SetAtNext">
            <summary>Sets the shim of XPathReadOnlyCursor.SetAtNext()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.#ctor(Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.Bind(System.Xml.Xsl.IXsltContextVariable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.Constructor">
            <summary>Sets the shim of XPathVariableAttribute.XPathVariableAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.IsLocalSystemXmlXslIXsltContextVariableget">
            <summary>Sets the shim of XPathVariableAttribute.System.Xml.Xsl.IXsltContextVariable.get_IsLocal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.IsParamSystemXmlXslIXsltContextVariableget">
            <summary>Sets the shim of XPathVariableAttribute.System.Xml.Xsl.IXsltContextVariable.get_IsParam()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.AllInstances.IsLocalSystemXmlXslIXsltContextVariableget">
            <summary>Sets the shim of XPathVariableAttribute.System.Xml.Xsl.IXsltContextVariable.get_IsLocal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXPathVariableAttribute.AllInstances.IsParamSystemXmlXslIXsltContextVariableget">
            <summary>Sets the shim of XPathVariableAttribute.System.Xml.Xsl.IXsltContextVariable.get_IsParam()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XRef</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.GetIdIXmlNode">
            <summary>Sets the shim of XRef.GetId(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.GetReferenceIXmlNode">
            <summary>Sets the shim of XRef.GetReference(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.SetIdIXmlCursorString">
            <summary>Sets the shim of XRef.SetId(IXmlCursor node, String id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.SetReferenceIXmlCursorString">
            <summary>Sets the shim of XRef.SetReference(IXmlCursor cursor, String id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXRef.StaticConstructor">
            <summary>Sets the shim of XRef.XRef()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.CloneContext">
            <summary>Sets the shim of XmlAccessor.CloneContext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ClrTypeGet">
            <summary>Sets the shim of XmlAccessor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.CoerceIXmlCursorTypeBoolean">
            <summary>Sets the shim of XmlAccessor.Coerce(IXmlCursor cursor, Type clrType, Boolean replace)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ConfigureNillableBoolean">
            <summary>Sets the shim of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ConfigureReferenceBoolean">
            <summary>Sets the shim of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ConfigureVolatileBoolean">
            <summary>Sets the shim of XmlAccessor.ConfigureVolatile(Boolean isVolatile)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ConstructorTypeIXmlContext">
            <summary>Sets the shim of XmlAccessor.XmlAccessor(Type clrType, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ContextGet">
            <summary>Sets the shim of XmlAccessor.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.ContextSetIXmlContext">
            <summary>Sets the shim of XmlAccessor.set_Context(IXmlContext value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.GetCollectionAccessorType">
            <summary>Sets the shim of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.GetCollectionItemsIXmlNodeIDictionaryAdapterXmlReferenceManagerIList">
            <summary>Sets the shim of XmlAccessor.GetCollectionItems(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, IList values)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.GetDefaultCollectionAccessorType">
            <summary>Sets the shim of XmlAccessor.GetDefaultCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.GetValueCoreIXmlNodeIDictionaryAdapterBooleanBoolean">
            <summary>Sets the shim of XmlAccessor.GetValueCore(IXmlNode node, IDictionaryAdapter parentObject, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.GetValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBooleanBoolean">
            <summary>Sets the shim of XmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.IsCollectionGet">
            <summary>Sets the shim of XmlAccessor.get_IsCollection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.IsIgnoredGet">
            <summary>Sets the shim of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.IsNillableGet">
            <summary>Sets the shim of XmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the shim of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.IsReferenceGet">
            <summary>Sets the shim of XmlAccessor.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.IsVolatileGet">
            <summary>Sets the shim of XmlAccessor.get_IsVolatile()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.Prepare">
            <summary>Sets the shim of XmlAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.RemoveCollectionItemsIXmlNodeXmlReferenceManagerObject">
            <summary>Sets the shim of XmlAccessor.RemoveCollectionItems(IXmlNode parentNode, XmlReferenceManager references, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SerializerGet">
            <summary>Sets the shim of XmlAccessor.get_Serializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SetContextIXmlContext">
            <summary>Sets the shim of XmlAccessor.SetContext(IXmlContext value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the shim of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the shim of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.XsiTypeGet">
            <summary>Sets the shim of XmlAccessor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.CloneContext">
            <summary>Sets the shim of XmlAccessor.CloneContext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.ClrTypeGet">
            <summary>Sets the shim of XmlAccessor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.CoerceIXmlCursorTypeBoolean">
            <summary>Sets the shim of XmlAccessor.Coerce(IXmlCursor cursor, Type clrType, Boolean replace)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.ConfigureNillableBoolean">
            <summary>Sets the shim of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.ConfigureReferenceBoolean">
            <summary>Sets the shim of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.ConfigureVolatileBoolean">
            <summary>Sets the shim of XmlAccessor.ConfigureVolatile(Boolean isVolatile)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.ContextGet">
            <summary>Sets the shim of XmlAccessor.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.ContextSetIXmlContext">
            <summary>Sets the shim of XmlAccessor.set_Context(IXmlContext value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.GetCollectionAccessorType">
            <summary>Sets the shim of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.GetCollectionItemsIXmlNodeIDictionaryAdapterXmlReferenceManagerIList">
            <summary>Sets the shim of XmlAccessor.GetCollectionItems(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, IList values)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.GetDefaultCollectionAccessorType">
            <summary>Sets the shim of XmlAccessor.GetDefaultCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the shim of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.GetValueCoreIXmlNodeIDictionaryAdapterBooleanBoolean">
            <summary>Sets the shim of XmlAccessor.GetValueCore(IXmlNode node, IDictionaryAdapter parentObject, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.GetValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBooleanBoolean">
            <summary>Sets the shim of XmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.IsCollectionGet">
            <summary>Sets the shim of XmlAccessor.get_IsCollection()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.IsIgnoredGet">
            <summary>Sets the shim of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.IsNillableGet">
            <summary>Sets the shim of XmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.IsPropertyDefinedIXmlNode">
            <summary>Sets the shim of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.IsReferenceGet">
            <summary>Sets the shim of XmlAccessor.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.IsVolatileGet">
            <summary>Sets the shim of XmlAccessor.get_IsVolatile()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.Prepare">
            <summary>Sets the shim of XmlAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.RemoveCollectionItemsIXmlNodeXmlReferenceManagerObject">
            <summary>Sets the shim of XmlAccessor.RemoveCollectionItems(IXmlNode parentNode, XmlReferenceManager references, Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SerializerGet">
            <summary>Sets the shim of XmlAccessor.get_Serializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SetContextIXmlContext">
            <summary>Sets the shim of XmlAccessor.SetContext(IXmlContext value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the shim of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the shim of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAccessor.AllInstances.XsiTypeGet">
            <summary>Sets the shim of XmlAccessor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryCopyStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryInitializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryPropertySetter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IDictionaryReferenceManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNodeSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CreateAccessorOf1StringPropertyDescriptorXmlAccessorFactoryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,Castle.Components.DictionaryAdapter.PropertyDescriptor,Castle.Components.DictionaryAdapter.Xml.XmlAccessorFactory{``0},``0})">
            <summary>Sets the shim of XmlAdapter.CreateAccessor(String key, PropertyDescriptor property, XmlAccessorFactory`1&lt;!!0&gt; factory)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AddSecondaryXmlMetaDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.AddSecondaryXmlMeta(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AttachObserversObjectIDictionaryAdapterPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.AttachObservers(Object value, IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryCopyStrategyCopyIDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanRef">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryCopyStrategy.Copy(IDictionaryAdapter source, IDictionaryAdapter target, Func`2&lt;PropertyDescriptor,Boolean&gt;&amp; selector)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryCreateStrategyCreateIDictionaryAdapterTypeIDictionary">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy.Create(IDictionaryAdapter parent, Type type, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryInitializerInitializeIDictionaryAdapterObjectArray">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryReferenceManagerAddReferenceObjectObjectBoolean">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryReferenceManager.AddReference(Object keyObject, Object relatedObject, Boolean isInGraph)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryReferenceManagerIsReferencePropertyIDictionaryAdapterString">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryReferenceManager.IsReferenceProperty(IDictionaryAdapter dictionaryAdapter, String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIDictionaryReferenceManagerTryGetReferenceObjectObjectOut">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryReferenceManager.TryGetReference(Object keyObject, Object&amp; inGraphObject)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CastleComponentsDictionaryAdapterIVirtualRealize">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Constructor">
            <summary>Sets the shim of XmlAdapter.XmlAdapter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.ConstructorIXmlNodeXmlReferenceManager">
            <summary>Sets the shim of XmlAdapter.XmlAdapter(IXmlNode node, XmlReferenceManager references)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.ConstructorXmlNode">
            <summary>Sets the shim of XmlAdapter.XmlAdapter(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.Copy">
            <summary>Sets the shim of XmlAdapter.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.CreateAccessorStringPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.CreateAccessor(String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.EnsureKeyStringPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.EnsureKey(String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.ForObject">
            <summary>Sets the shim of XmlAdapter.For(Object obj)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.ForObjectBoolean">
            <summary>Sets the shim of XmlAdapter.For(Object obj, Boolean required)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.GetBaseNode">
            <summary>Sets the shim of XmlAdapter.GetBaseNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.GetSourceNode">
            <summary>Sets the shim of XmlAdapter.GetSourceNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.GetXmlMetadataType">
            <summary>Sets the shim of XmlAdapter.GetXmlMetadata(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.HandleListChangedObjectListChangedEventArgsIDictionaryAdapterPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.HandleListChanged(Object value, ListChangedEventArgs args, IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.HandleNodeRealizedObjectEventArgs">
            <summary>Sets the shim of XmlAdapter.HandleNodeRealized(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.HasPropertyStringIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.HasProperty(String propertyName, IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.InitializeBaseTypesDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.InitializeBaseTypes(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.InitializePrimaryDictionaryAdapterMetaIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.InitializePrimary(DictionaryAdapterMeta meta, IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.InitializeReferenceObject">
            <summary>Sets the shim of XmlAdapter.InitializeReference(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.InitializeSecondaryDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.InitializeSecondary(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.InitializeStrategiesIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.InitializeStrategies(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.IsIgnoreBehaviorObject">
            <summary>Sets the shim of XmlAdapter.IsIgnoreBehavior(Object behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.IsPropertyDefinedStringIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.IsPropertyDefined(String propertyName, IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.IsRealGet">
            <summary>Sets the shim of XmlAdapter.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.IsReferenceBehaviorObject">
            <summary>Sets the shim of XmlAdapter.IsReferenceBehavior(Object behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.IsVolatileBehaviorObject">
            <summary>Sets the shim of XmlAdapter.IsVolatileBehavior(Object behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.NodeGet">
            <summary>Sets the shim of XmlAdapter.get_Node()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.OnRealized">
            <summary>Sets the shim of XmlAdapter.OnRealized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.RealizedAddEventHandler">
            <summary>Sets the shim of XmlAdapter.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.RealizedRemoveEventHandler">
            <summary>Sets the shim of XmlAdapter.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.ReferencesGet">
            <summary>Sets the shim of XmlAdapter.get_References()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.RequireXmlMetaDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.RequireXmlMeta(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.TryApplyBehaviorStringPropertyDescriptorObjectXmlAccessorRef">
            <summary>Sets the shim of XmlAdapter.TryApplyBehavior(String key, PropertyDescriptor property, Object behavior, XmlAccessor&amp; accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.TryGetAccessorStringPropertyDescriptorBooleanXmlAccessorOut">
            <summary>Sets the shim of XmlAdapter.TryGetAccessor(String key, PropertyDescriptor property, Boolean requireVolatile, XmlAccessor&amp; accessor)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CreateAccessorOf1StringPropertyDescriptorXmlAccessorFactoryOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.XmlAdapter,System.String,Castle.Components.DictionaryAdapter.PropertyDescriptor,Castle.Components.DictionaryAdapter.Xml.XmlAccessorFactory{``0},``0})">
            <summary>Sets the shim of XmlAdapter.CreateAccessor(String key, PropertyDescriptor property, XmlAccessorFactory`1&lt;!!0&gt; factory)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.AddSecondaryXmlMetaDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.AddSecondaryXmlMeta(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.AttachObserversObjectIDictionaryAdapterPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.AttachObservers(Object value, IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryCopyStrategyCopyIDictionaryAdapterIDictionaryAdapterFuncOfPropertyDescriptorBooleanRef">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryCopyStrategy.Copy(IDictionaryAdapter source, IDictionaryAdapter target, Func`2&lt;PropertyDescriptor,Boolean&gt;&amp; selector)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryCreateStrategyCreateIDictionaryAdapterTypeIDictionary">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy.Create(IDictionaryAdapter parent, Type type, IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryInitializerInitializeIDictionaryAdapterObjectArray">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryInitializer.Initialize(IDictionaryAdapter dictionaryAdapter, Object[] behaviors)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryPropertyGetterGetPropertyValueIDictionaryAdapterStringObjectPropertyDescriptorBoolean">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter.GetPropertyValue(IDictionaryAdapter dictionaryAdapter, String key, Object storedValue, PropertyDescriptor property, Boolean ifExists)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryReferenceManagerAddReferenceObjectObjectBoolean">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryReferenceManager.AddReference(Object keyObject, Object relatedObject, Boolean isInGraph)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryReferenceManagerIsReferencePropertyIDictionaryAdapterString">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryReferenceManager.IsReferenceProperty(IDictionaryAdapter dictionaryAdapter, String propertyName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIDictionaryReferenceManagerTryGetReferenceObjectObjectOut">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IDictionaryReferenceManager.TryGetReference(Object keyObject, Object&amp; inGraphObject)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CastleComponentsDictionaryAdapterIVirtualRealize">
            <summary>Sets the shim of XmlAdapter.Castle.Components.DictionaryAdapter.IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.Copy">
            <summary>Sets the shim of XmlAdapter.Copy()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.CreateAccessorStringPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.CreateAccessor(String key, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.GetBaseNode">
            <summary>Sets the shim of XmlAdapter.GetBaseNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.GetSourceNode">
            <summary>Sets the shim of XmlAdapter.GetSourceNode()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.GetXmlMetadataType">
            <summary>Sets the shim of XmlAdapter.GetXmlMetadata(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.HandleListChangedObjectListChangedEventArgsIDictionaryAdapterPropertyDescriptor">
            <summary>Sets the shim of XmlAdapter.HandleListChanged(Object value, ListChangedEventArgs args, IDictionaryAdapter dictionaryAdapter, PropertyDescriptor property)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.HandleNodeRealizedObjectEventArgs">
            <summary>Sets the shim of XmlAdapter.HandleNodeRealized(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.HasPropertyStringIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.HasProperty(String propertyName, IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.InitializeBaseTypesDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.InitializeBaseTypes(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.InitializePrimaryDictionaryAdapterMetaIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.InitializePrimary(DictionaryAdapterMeta meta, IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.InitializeReferenceObject">
            <summary>Sets the shim of XmlAdapter.InitializeReference(Object value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.InitializeSecondaryDictionaryAdapterMeta">
            <summary>Sets the shim of XmlAdapter.InitializeSecondary(DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.InitializeStrategiesIDictionaryAdapter">
            <summary>Sets the shim of XmlAdapter.InitializeStrategies(IDictionaryAdapter dictionaryAdapter)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.IsRealGet">
            <summary>Sets the shim of XmlAdapter.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.NodeGet">
            <summary>Sets the shim of XmlAdapter.get_Node()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.OnRealized">
            <summary>Sets the shim of XmlAdapter.OnRealized()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.RealizedAddEventHandler">
            <summary>Sets the shim of XmlAdapter.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.RealizedRemoveEventHandler">
            <summary>Sets the shim of XmlAdapter.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.ReferencesGet">
            <summary>Sets the shim of XmlAdapter.get_References()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.TryApplyBehaviorStringPropertyDescriptorObjectXmlAccessorRef">
            <summary>Sets the shim of XmlAdapter.TryApplyBehavior(String key, PropertyDescriptor property, Object behavior, XmlAccessor&amp; accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAdapter.AllInstances.TryGetAccessorStringPropertyDescriptorBooleanXmlAccessorOut">
            <summary>Sets the shim of XmlAdapter.TryGetAccessor(String key, PropertyDescriptor property, Boolean requireVolatile, XmlAccessor&amp; accessor)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlArrayBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlArrayBehaviorAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{System.Xml.Serialization.XmlArrayAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{System.Xml.Serialization.XmlArrayItemAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.ConfigureXmlArrayAttribute">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.Configure(XmlArrayAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.ConfigureXmlArrayItemAttribute">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.Configure(XmlArrayItemAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.ConstructorStringTypeIXmlContext">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.XmlArrayBehaviorAccessor(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.Prepare">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.StaticConstructor">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.XmlArrayBehaviorAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor._cctorb__0StringTypeIXmlContext">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.&lt;.cctor&gt;b__0(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.AllInstances.ConfigureXmlArrayAttribute">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.Configure(XmlArrayAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.AllInstances.ConfigureXmlArrayItemAttribute">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.Configure(XmlArrayItemAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.AllInstances.GetCollectionAccessorType">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.AllInstances.Prepare">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArrayBehaviorAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlArrayBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlArraySerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlArraySerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.CanGetStubGet">
            <summary>Sets the shim of XmlArraySerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.Constructor">
            <summary>Sets the shim of XmlArraySerializer.XmlArraySerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.GetItemSafeArrayInt32">
            <summary>Sets the shim of XmlArraySerializer.GetItemSafe(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlArraySerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlArraySerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.KindGet">
            <summary>Sets the shim of XmlArraySerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlArraySerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.StaticConstructor">
            <summary>Sets the shim of XmlArraySerializer.XmlArraySerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.AllInstances.CanGetStubGet">
            <summary>Sets the shim of XmlArraySerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.AllInstances.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlArraySerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlArraySerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlArraySerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlArraySerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlArraySerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlAttributeBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlAttributeBehaviorAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{System.Xml.Serialization.XmlAttributeAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.ConfigureNillableBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.ConfigureReferenceBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.ConfigureXmlAttributeAttribute">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.Configure(XmlAttributeAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.ConstructorStringTypeIXmlContext">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.XmlAttributeBehaviorAccessor(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.StaticConstructor">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.XmlAttributeBehaviorAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor._cctorb__0StringTypeIXmlContext">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.&lt;.cctor&gt;b__0(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances.ConfigureNillableBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances.ConfigureReferenceBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances.ConfigureXmlAttributeAttribute">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.Configure(XmlAttributeAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances.GetCollectionAccessorType">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlAttributeBehaviorAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlAttributeBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlCollectionSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlCollectionSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.CanGetStubGet">
            <summary>Sets the shim of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.Constructor">
            <summary>Sets the shim of XmlCollectionSerializer.XmlCollectionSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.GetValueCoreIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCollectionSerializer.GetValueCore(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.KindGet">
            <summary>Sets the shim of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances.CanGetStubGet">
            <summary>Sets the shim of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances.GetValueCoreIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCollectionSerializer.GetValueCore(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCollectionSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlComponentSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlComponentSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.CanGetStubGet">
            <summary>Sets the shim of XmlComponentSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.Constructor">
            <summary>Sets the shim of XmlComponentSerializer.XmlComponentSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlComponentSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlComponentSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.KindGet">
            <summary>Sets the shim of XmlComponentSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlComponentSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.StaticConstructor">
            <summary>Sets the shim of XmlComponentSerializer.XmlComponentSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.AllInstances.CanGetStubGet">
            <summary>Sets the shim of XmlComponentSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.AllInstances.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlComponentSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlComponentSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlComponentSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlComponentSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlComponentSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlContext</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.ChildNamespaceUriGet">
            <summary>Sets the shim of XmlContext.get_ChildNamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.Clone">
            <summary>Sets the shim of XmlContext.Clone()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.ConstructorXmlContext">
            <summary>Sets the shim of XmlContext.XmlContext(XmlContext parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.ConstructorXmlMetadata">
            <summary>Sets the shim of XmlContext.XmlContext(XmlMetadata metadata)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.GetDefaultXsiTypeType">
            <summary>Sets the shim of XmlContext.GetDefaultXsiType(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.GetIncludedTypesType">
            <summary>Sets the shim of XmlContext.GetIncludedTypes(Type baseType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.IsReservedNamespaceUriString">
            <summary>Sets the shim of XmlContext.IsReservedNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.AllInstances.ChildNamespaceUriGet">
            <summary>Sets the shim of XmlContext.get_ChildNamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.AllInstances.Clone">
            <summary>Sets the shim of XmlContext.Clone()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.AllInstances.GetDefaultXsiTypeType">
            <summary>Sets the shim of XmlContext.GetDefaultXsiType(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.AllInstances.GetIncludedTypesType">
            <summary>Sets the shim of XmlContext.GetIncludedTypes(Type baseType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContext.AllInstances.IsReservedNamespaceUriString">
            <summary>Sets the shim of XmlContext.IsReservedNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlContextBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlContextBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.Bind(System.Xml.IXmlNamespaceResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddFunctionStringStringIXsltContextFunction">
            <summary>Sets the shim of XmlContextBase.AddFunction(String prefix, String name, IXsltContextFunction function)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddFunctionXPathFunctionAttribute">
            <summary>Sets the shim of XmlContextBase.AddFunction(XPathFunctionAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddFunctionXmlNameIXsltContextFunction">
            <summary>Sets the shim of XmlContextBase.AddFunction(XmlName name, IXsltContextFunction function)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddNamespaceStringString">
            <summary>Sets the shim of XmlContextBase.AddNamespace(String prefix, String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddNamespaceXmlNamespaceAttribute">
            <summary>Sets the shim of XmlContextBase.AddNamespace(XmlNamespaceAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddVariableStringStringIXsltContextVariable">
            <summary>Sets the shim of XmlContextBase.AddVariable(String prefix, String name, IXsltContextVariable variable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddVariableXPathVariableAttribute">
            <summary>Sets the shim of XmlContextBase.AddVariable(XPathVariableAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AddVariableXmlNameIXsltContextVariable">
            <summary>Sets the shim of XmlContextBase.AddVariable(XmlName name, IXsltContextVariable variable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.CompareDocumentStringString">
            <summary>Sets the shim of XmlContextBase.CompareDocument(String baseUriA, String baseUriB)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.Constructor">
            <summary>Sets the shim of XmlContextBase.XmlContextBase()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ConstructorXmlContextBase">
            <summary>Sets the shim of XmlContextBase.XmlContextBase(XmlContextBase parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.EnlistCompiledXPath">
            <summary>Sets the shim of XmlContextBase.Enlist(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.EnsureFunctions">
            <summary>Sets the shim of XmlContextBase.EnsureFunctions()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.EnsureRootNamespaces">
            <summary>Sets the shim of XmlContextBase.EnsureRootNamespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.EnsureVariables">
            <summary>Sets the shim of XmlContextBase.EnsureVariables()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.GeneratePrefixIXmlNode">
            <summary>Sets the shim of XmlContextBase.GeneratePrefix(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.GetAttributePrefixIXmlNodeString">
            <summary>Sets the shim of XmlContextBase.GetAttributePrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.GetElementPrefixIXmlNodeString">
            <summary>Sets the shim of XmlContextBase.GetElementPrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.GetNameTableXmlContextBase">
            <summary>Sets the shim of XmlContextBase.GetNameTable(XmlContextBase parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.LookupNamespaceString">
            <summary>Sets the shim of XmlContextBase.LookupNamespace(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.LookupPrefixString">
            <summary>Sets the shim of XmlContextBase.LookupPrefix(String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.PreserveWhitespaceXPathNavigator">
            <summary>Sets the shim of XmlContextBase.PreserveWhitespace(XPathNavigator node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ResolveFunctionCoreStringStringXPathResultTypeArray">
            <summary>Sets the shim of XmlContextBase.ResolveFunctionCore(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ResolveFunctionStringStringXPathResultTypeArray">
            <summary>Sets the shim of XmlContextBase.ResolveFunction(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ResolveVariableCoreStringString">
            <summary>Sets the shim of XmlContextBase.ResolveVariableCore(String prefix, String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ResolveVariableStringString">
            <summary>Sets the shim of XmlContextBase.ResolveVariable(String prefix, String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ShouldDefineOnRootCoreStringString">
            <summary>Sets the shim of XmlContextBase.ShouldDefineOnRootCore(String prefix, String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.ShouldDefineOnRootStringString">
            <summary>Sets the shim of XmlContextBase.ShouldDefineOnRoot(String prefix, String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.TryGetDefinedPrefixIXmlNodeStringStringOut">
            <summary>Sets the shim of XmlContextBase.TryGetDefinedPrefix(IXmlNode node, String namespaceUri, String&amp; prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.TryGetPreferredPrefixIXmlNodeStringStringOut">
            <summary>Sets the shim of XmlContextBase.TryGetPreferredPrefix(IXmlNode node, String namespaceUri, String&amp; prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.WhitespaceGet">
            <summary>Sets the shim of XmlContextBase.get_Whitespace()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddFunctionStringStringIXsltContextFunction">
            <summary>Sets the shim of XmlContextBase.AddFunction(String prefix, String name, IXsltContextFunction function)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddFunctionXPathFunctionAttribute">
            <summary>Sets the shim of XmlContextBase.AddFunction(XPathFunctionAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddFunctionXmlNameIXsltContextFunction">
            <summary>Sets the shim of XmlContextBase.AddFunction(XmlName name, IXsltContextFunction function)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddNamespaceStringString">
            <summary>Sets the shim of XmlContextBase.AddNamespace(String prefix, String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddNamespaceXmlNamespaceAttribute">
            <summary>Sets the shim of XmlContextBase.AddNamespace(XmlNamespaceAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddVariableStringStringIXsltContextVariable">
            <summary>Sets the shim of XmlContextBase.AddVariable(String prefix, String name, IXsltContextVariable variable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddVariableXPathVariableAttribute">
            <summary>Sets the shim of XmlContextBase.AddVariable(XPathVariableAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.AddVariableXmlNameIXsltContextVariable">
            <summary>Sets the shim of XmlContextBase.AddVariable(XmlName name, IXsltContextVariable variable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.CompareDocumentStringString">
            <summary>Sets the shim of XmlContextBase.CompareDocument(String baseUriA, String baseUriB)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.EnlistCompiledXPath">
            <summary>Sets the shim of XmlContextBase.Enlist(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.EnsureFunctions">
            <summary>Sets the shim of XmlContextBase.EnsureFunctions()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.EnsureRootNamespaces">
            <summary>Sets the shim of XmlContextBase.EnsureRootNamespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.EnsureVariables">
            <summary>Sets the shim of XmlContextBase.EnsureVariables()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.GetAttributePrefixIXmlNodeString">
            <summary>Sets the shim of XmlContextBase.GetAttributePrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.GetElementPrefixIXmlNodeString">
            <summary>Sets the shim of XmlContextBase.GetElementPrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.LookupNamespaceString">
            <summary>Sets the shim of XmlContextBase.LookupNamespace(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.LookupPrefixString">
            <summary>Sets the shim of XmlContextBase.LookupPrefix(String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.PreserveWhitespaceXPathNavigator">
            <summary>Sets the shim of XmlContextBase.PreserveWhitespace(XPathNavigator node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.ResolveFunctionCoreStringStringXPathResultTypeArray">
            <summary>Sets the shim of XmlContextBase.ResolveFunctionCore(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.ResolveFunctionStringStringXPathResultTypeArray">
            <summary>Sets the shim of XmlContextBase.ResolveFunction(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.ResolveVariableCoreStringString">
            <summary>Sets the shim of XmlContextBase.ResolveVariableCore(String prefix, String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.ResolveVariableStringString">
            <summary>Sets the shim of XmlContextBase.ResolveVariable(String prefix, String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.ShouldDefineOnRootCoreStringString">
            <summary>Sets the shim of XmlContextBase.ShouldDefineOnRootCore(String prefix, String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.ShouldDefineOnRootStringString">
            <summary>Sets the shim of XmlContextBase.ShouldDefineOnRoot(String prefix, String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.TryGetPreferredPrefixIXmlNodeStringStringOut">
            <summary>Sets the shim of XmlContextBase.TryGetPreferredPrefix(IXmlNode node, String namespaceUri, String&amp; prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlContextBase.AllInstances.WhitespaceGet">
            <summary>Sets the shim of XmlContextBase.get_Whitespace()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlCustomSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlCustomSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.Constructor">
            <summary>Sets the shim of XmlCustomSerializer.XmlCustomSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCustomSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.KindGet">
            <summary>Sets the shim of XmlCustomSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlCustomSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.StaticConstructor">
            <summary>Sets the shim of XmlCustomSerializer.XmlCustomSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlCustomSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlCustomSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlCustomSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlCustomSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlDefaultBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlDefaultBehaviorAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.ConstructorStringTypeIXmlContext">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.XmlDefaultBehaviorAccessor(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.ConstructorTypeIXmlContext">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.XmlDefaultBehaviorAccessor(Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.StaticConstructor">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.XmlDefaultBehaviorAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor._cctorb__0StringTypeIXmlContext">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.&lt;.cctor&gt;b__0(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.AllInstances.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.AllInstances.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultBehaviorAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlDefaultBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlDefaultSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlDefaultSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.ConstructorType">
            <summary>Sets the shim of XmlDefaultSerializer.XmlDefaultSerializer(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlDefaultSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.KindGet">
            <summary>Sets the shim of XmlDefaultSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlDefaultSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.StaticConstructor">
            <summary>Sets the shim of XmlDefaultSerializer.XmlDefaultSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlDefaultSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlDefaultSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDefaultSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlDefaultSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlDynamicSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlDynamicSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.Constructor">
            <summary>Sets the shim of XmlDynamicSerializer.XmlDynamicSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlDynamicSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.KindGet">
            <summary>Sets the shim of XmlDynamicSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlDynamicSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.StaticConstructor">
            <summary>Sets the shim of XmlDynamicSerializer.XmlDynamicSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlDynamicSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlDynamicSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlDynamicSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlDynamicSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlElementBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlElementBehaviorAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IConfigurable{System.Xml.Serialization.XmlElementAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlBehaviorSemantics{System.Xml.Serialization.XmlElementAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.ConfigureXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.Configure(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.ConstructorStringTypeIXmlContext">
            <summary>Sets the shim of XmlElementBehaviorAccessor.XmlElementBehaviorAccessor(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.GetClrTypeXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetClrType(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.GetLocalNameXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetLocalName(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.GetNamespaceUriXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetNamespaceUri(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.Prepare">
            <summary>Sets the shim of XmlElementBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlElementBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlElementBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the shim of XmlElementBehaviorAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.StaticConstructor">
            <summary>Sets the shim of XmlElementBehaviorAccessor.XmlElementBehaviorAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor._cctorb__0StringTypeIXmlContext">
            <summary>Sets the shim of XmlElementBehaviorAccessor.&lt;.cctor&gt;b__0(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.ConfigureXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.Configure(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.GetClrTypeXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetClrType(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.GetCollectionAccessorType">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.GetLocalNameXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetLocalName(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.GetNamespaceUriXmlElementAttribute">
            <summary>Sets the shim of XmlElementBehaviorAccessor.GetNamespaceUri(XmlElementAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.Prepare">
            <summary>Sets the shim of XmlElementBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlElementBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlElementBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlElementBehaviorAccessor.AllInstances.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the shim of XmlElementBehaviorAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlEnumerationSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlEnumerationSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.Constructor">
            <summary>Sets the shim of XmlEnumerationSerializer.XmlEnumerationSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlEnumerationSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.KindGet">
            <summary>Sets the shim of XmlEnumerationSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.StaticConstructor">
            <summary>Sets the shim of XmlEnumerationSerializer.XmlEnumerationSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlEnumerationSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlEnumerationSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlEnumerationSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlIgnoreBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlIgnoreBehaviorAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.Constructor">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.XmlIgnoreBehaviorAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.IsIgnoredGet">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.get_IsIgnored()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.StaticConstructor">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.XmlIgnoreBehaviorAccessor()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.AllInstances.GetCollectionAccessorType">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.AllInstances.IsIgnoredGet">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.get_IsIgnored()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.AllInstances.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.AllInstances.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIgnoreBehaviorAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlIgnoreBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlIncludedType</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlIncludedType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.ClrTypeGet">
            <summary>Sets the shim of XmlIncludedType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.ConstructorStringStringType">
            <summary>Sets the shim of XmlIncludedType.XmlIncludedType(String localName, String namespaceUri, Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.ConstructorXmlNameType">
            <summary>Sets the shim of XmlIncludedType.XmlIncludedType(XmlName xsiType, Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.XsiTypeGet">
            <summary>Sets the shim of XmlIncludedType.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.AllInstances.ClrTypeGet">
            <summary>Sets the shim of XmlIncludedType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedType.AllInstances.XsiTypeGet">
            <summary>Sets the shim of XmlIncludedType.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeMapExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlIncludedTypeMapExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeMapExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeMapExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeMapExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeMapExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeMapExtensions.RequireIXmlIncludedTypeMapType">
            <summary>Sets the shim of XmlIncludedTypeMapExtensions.Require(IXmlIncludedTypeMap includedTypes, Type clrType)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlIncludedTypeSet</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlIncludedTypeSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.Bind(System.Collections.Generic.IEnumerable{Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AddIXmlIncludedType">
            <summary>Sets the shim of XmlIncludedTypeSet.Add(IXmlIncludedType includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.Constructor">
            <summary>Sets the shim of XmlIncludedTypeSet.XmlIncludedTypeSet()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.DefaultCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeMapget">
            <summary>Sets the shim of XmlIncludedTypeSet.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.GetEnumerator">
            <summary>Sets the shim of XmlIncludedTypeSet.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.StaticConstructor">
            <summary>Sets the shim of XmlIncludedTypeSet.XmlIncludedTypeSet()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of XmlIncludedTypeSet.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlIncludedTypeSet.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlIncludedTypeSet.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances.AddIXmlIncludedType">
            <summary>Sets the shim of XmlIncludedTypeSet.Add(IXmlIncludedType includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances.DefaultCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeMapget">
            <summary>Sets the shim of XmlIncludedTypeSet.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances.GetEnumerator">
            <summary>Sets the shim of XmlIncludedTypeSet.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of XmlIncludedTypeSet.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlIncludedTypeSet.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlIncludedTypeSet.AllInstances.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlIncludedTypeSet.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlKnownType</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlKnownType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.ClrTypeGet">
            <summary>Sets the shim of XmlKnownType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.ConstructorStringStringStringStringType">
            <summary>Sets the shim of XmlKnownType.XmlKnownType(String nameLocalName, String nameNamespaceUri, String xsiTypeLocalName, String xsiTypeNamespaceUri, Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.ConstructorXmlNameXmlNameType">
            <summary>Sets the shim of XmlKnownType.XmlKnownType(XmlName name, XmlName xsiType, Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.NameGet">
            <summary>Sets the shim of XmlKnownType.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.XsiTypeGet">
            <summary>Sets the shim of XmlKnownType.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.AllInstances.ClrTypeGet">
            <summary>Sets the shim of XmlKnownType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.AllInstances.NameGet">
            <summary>Sets the shim of XmlKnownType.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownType.AllInstances.XsiTypeGet">
            <summary>Sets the shim of XmlKnownType.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeMapExtensions">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeMapExtensions</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeMapExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeMapExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeMapExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeMapExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeMapExtensions.RequireIXmlKnownTypeMapType">
            <summary>Sets the shim of XmlKnownTypeMapExtensions.Require(IXmlKnownTypeMap map, Type clrType)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.Bind(System.Collections.Generic.IEnumerable{Castle.Components.DictionaryAdapter.Xml.IXmlKnownType})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AddIXmlKnownTypeBoolean">
            <summary>Sets the shim of XmlKnownTypeSet.Add(IXmlKnownType knownType, Boolean overwrite)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AddXsiTypeDefaults">
            <summary>Sets the shim of XmlKnownTypeSet.AddXsiTypeDefaults()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.ConstructorType">
            <summary>Sets the shim of XmlKnownTypeSet.XmlKnownTypeSet(Type defaultType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.DefaultGet">
            <summary>Sets the shim of XmlKnownTypeSet.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.GetEnumerator">
            <summary>Sets the shim of XmlKnownTypeSet.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.StaticConstructor">
            <summary>Sets the shim of XmlKnownTypeSet.XmlKnownTypeSet()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of XmlKnownTypeSet.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.ToArray">
            <summary>Sets the shim of XmlKnownTypeSet.ToArray()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the shim of XmlKnownTypeSet.TryGet(IXmlIdentity xmlIdentity, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the shim of XmlKnownTypeSet.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.AddIXmlKnownTypeBoolean">
            <summary>Sets the shim of XmlKnownTypeSet.Add(IXmlKnownType knownType, Boolean overwrite)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.AddXsiTypeDefaults">
            <summary>Sets the shim of XmlKnownTypeSet.AddXsiTypeDefaults()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.DefaultGet">
            <summary>Sets the shim of XmlKnownTypeSet.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.GetEnumerator">
            <summary>Sets the shim of XmlKnownTypeSet.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of XmlKnownTypeSet.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.ToArray">
            <summary>Sets the shim of XmlKnownTypeSet.ToArray()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the shim of XmlKnownTypeSet.TryGet(IXmlIdentity xmlIdentity, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlKnownTypeSet.AllInstances.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the shim of XmlKnownTypeSet.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlListSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlListSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.Constructor">
            <summary>Sets the shim of XmlListSerializer.XmlListSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.ListTypeConstructorGet">
            <summary>Sets the shim of XmlListSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.StaticConstructor">
            <summary>Sets the shim of XmlListSerializer.XmlListSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlListSerializer.AllInstances.ListTypeConstructorGet">
            <summary>Sets the shim of XmlListSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlMetadata</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.TryCastOf1ObjectM0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{System.Object,``0,System.Boolean})">
            <summary>Sets the shim of XmlMetadata.TryCast(Object obj, !!0&amp; result)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AddPendingIncludeXmlIncludeAttribute">
            <summary>Sets the shim of XmlMetadata.AddPendingInclude(XmlIncludeAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.ChildNamespaceUriGet">
            <summary>Sets the shim of XmlMetadata.get_ChildNamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.ClrTypeGet">
            <summary>Sets the shim of XmlMetadata.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.ConstructorDictionaryAdapterMetaIEnumerableOfString">
            <summary>Sets the shim of XmlMetadata.XmlMetadata(DictionaryAdapterMeta meta, IEnumerable`1&lt;String&gt; reservedNamespaceUris)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.ContextGet">
            <summary>Sets the shim of XmlMetadata.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.DefaultCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeMapget">
            <summary>Sets the shim of XmlMetadata.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.DefaultCastleComponentsDictionaryAdapterXmlIXmlKnownTypeMapget">
            <summary>Sets the shim of XmlMetadata.Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.GetDefaultTypeLocalNameType">
            <summary>Sets the shim of XmlMetadata.GetDefaultTypeLocalName(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.GetDefaultXsiTypeType">
            <summary>Sets the shim of XmlMetadata.GetDefaultXsiType(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.GetIncludedTypesType">
            <summary>Sets the shim of XmlMetadata.GetIncludedTypes(Type baseType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.GetXmlMetadataType">
            <summary>Sets the shim of XmlMetadata.GetXmlMetadata(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IncludedTypesGet">
            <summary>Sets the shim of XmlMetadata.get_IncludedTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IsInterfaceNameString">
            <summary>Sets the shim of XmlMetadata.IsInterfaceName(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IsMatchIXmlIdentity">
            <summary>Sets the shim of XmlMetadata.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IsMatchType">
            <summary>Sets the shim of XmlMetadata.IsMatch(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IsNullableGet">
            <summary>Sets the shim of XmlMetadata.get_IsNullable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IsReferenceGet">
            <summary>Sets the shim of XmlMetadata.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.IsReservedNamespaceUriString">
            <summary>Sets the shim of XmlMetadata.IsReservedNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.NameGet">
            <summary>Sets the shim of XmlMetadata.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.PathGet">
            <summary>Sets the shim of XmlMetadata.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.ProcessPendingIncludes">
            <summary>Sets the shim of XmlMetadata.ProcessPendingIncludes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.QualifiedGet">
            <summary>Sets the shim of XmlMetadata.get_Qualified()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.ReservedNamespaceUrisGet">
            <summary>Sets the shim of XmlMetadata.get_ReservedNamespaceUris()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.SelectBaseIXmlNode">
            <summary>Sets the shim of XmlMetadata.SelectBase(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.StaticConstructor">
            <summary>Sets the shim of XmlMetadata.XmlMetadata()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(IXmlIdentity xmlIdentity, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.TryGetXmlMetadataTypeXmlMetadataOut">
            <summary>Sets the shim of XmlMetadata.TryGetXmlMetadata(Type clrType, XmlMetadata&amp; metadata)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.XsiTypeCastleComponentsDictionaryAdapterXmlIXmlIdentityget">
            <summary>Sets the shim of XmlMetadata.Castle.Components.DictionaryAdapter.Xml.IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.XsiTypeGet">
            <summary>Sets the shim of XmlMetadata.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.AddPendingIncludeXmlIncludeAttribute">
            <summary>Sets the shim of XmlMetadata.AddPendingInclude(XmlIncludeAttribute attribute)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.ChildNamespaceUriGet">
            <summary>Sets the shim of XmlMetadata.get_ChildNamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.ClrTypeGet">
            <summary>Sets the shim of XmlMetadata.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.ContextGet">
            <summary>Sets the shim of XmlMetadata.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.DefaultCastleComponentsDictionaryAdapterXmlIXmlIncludedTypeMapget">
            <summary>Sets the shim of XmlMetadata.Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.DefaultCastleComponentsDictionaryAdapterXmlIXmlKnownTypeMapget">
            <summary>Sets the shim of XmlMetadata.Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.GetDefaultTypeLocalNameType">
            <summary>Sets the shim of XmlMetadata.GetDefaultTypeLocalName(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.GetDefaultXsiTypeType">
            <summary>Sets the shim of XmlMetadata.GetDefaultXsiType(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.GetIncludedTypesType">
            <summary>Sets the shim of XmlMetadata.GetIncludedTypes(Type baseType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.GetXmlMetadataType">
            <summary>Sets the shim of XmlMetadata.GetXmlMetadata(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.IncludedTypesGet">
            <summary>Sets the shim of XmlMetadata.get_IncludedTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.IsMatchIXmlIdentity">
            <summary>Sets the shim of XmlMetadata.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.IsMatchType">
            <summary>Sets the shim of XmlMetadata.IsMatch(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.IsNullableGet">
            <summary>Sets the shim of XmlMetadata.get_IsNullable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.IsReferenceGet">
            <summary>Sets the shim of XmlMetadata.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.IsReservedNamespaceUriString">
            <summary>Sets the shim of XmlMetadata.IsReservedNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.NameGet">
            <summary>Sets the shim of XmlMetadata.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.PathGet">
            <summary>Sets the shim of XmlMetadata.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.ProcessPendingIncludes">
            <summary>Sets the shim of XmlMetadata.ProcessPendingIncludes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.QualifiedGet">
            <summary>Sets the shim of XmlMetadata.get_Qualified()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.ReservedNamespaceUrisGet">
            <summary>Sets the shim of XmlMetadata.get_ReservedNamespaceUris()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.SelectBaseIXmlNode">
            <summary>Sets the shim of XmlMetadata.SelectBase(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(IXmlIdentity xmlIdentity, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.TryGetXmlMetadataTypeXmlMetadataOut">
            <summary>Sets the shim of XmlMetadata.TryGetXmlMetadata(Type clrType, XmlMetadata&amp; metadata)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the shim of XmlMetadata.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.XsiTypeCastleComponentsDictionaryAdapterXmlIXmlIdentityget">
            <summary>Sets the shim of XmlMetadata.Castle.Components.DictionaryAdapter.Xml.IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadata.AllInstances.XsiTypeGet">
            <summary>Sets the shim of XmlMetadata.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlMetadataBehavior</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlMetadataBehavior)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.Bind(Castle.Components.DictionaryAdapter.IDictionaryBehavior)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.Bind(Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.AddReservedNamespaceUriString">
            <summary>Sets the shim of XmlMetadataBehavior.AddReservedNamespaceUri(String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.CastleComponentsDictionaryAdapterIDictionaryMetaInitializerInitializeIDictionaryAdapterFactoryDictionaryAdapterMeta">
            <summary>Sets the shim of XmlMetadataBehavior.Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer.Initialize(IDictionaryAdapterFactory factory, DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.CastleComponentsDictionaryAdapterIDictionaryMetaInitializerShouldHaveBehaviorObject">
            <summary>Sets the shim of XmlMetadataBehavior.Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer.ShouldHaveBehavior(Object behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.Constructor">
            <summary>Sets the shim of XmlMetadataBehavior.XmlMetadataBehavior()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.ReservedNamespaceUrisGet">
            <summary>Sets the shim of XmlMetadataBehavior.get_ReservedNamespaceUris()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.StaticConstructor">
            <summary>Sets the shim of XmlMetadataBehavior.XmlMetadataBehavior()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.AllInstances.AddReservedNamespaceUriString">
            <summary>Sets the shim of XmlMetadataBehavior.AddReservedNamespaceUri(String uri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.AllInstances.CastleComponentsDictionaryAdapterIDictionaryMetaInitializerInitializeIDictionaryAdapterFactoryDictionaryAdapterMeta">
            <summary>Sets the shim of XmlMetadataBehavior.Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer.Initialize(IDictionaryAdapterFactory factory, DictionaryAdapterMeta meta)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.AllInstances.CastleComponentsDictionaryAdapterIDictionaryMetaInitializerShouldHaveBehaviorObject">
            <summary>Sets the shim of XmlMetadataBehavior.Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer.ShouldHaveBehavior(Object behavior)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlMetadataBehavior.AllInstances.ReservedNamespaceUrisGet">
            <summary>Sets the shim of XmlMetadataBehavior.get_ReservedNamespaceUris()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlName</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.EqualityOpXmlNameXmlName">
            <summary>Sets the shim of XmlName.op_Equality(XmlName x, XmlName y)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.InequalityOpXmlNameXmlName">
            <summary>Sets the shim of XmlName.op_Inequality(XmlName x, XmlName y)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.ParseQNameString">
            <summary>Sets the shim of XmlName.ParseQName(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.StaticConstructor">
            <summary>Sets the shim of XmlName.XmlName()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlName.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlNameComparer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlNameComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.Bind(System.Collections.Generic.IEqualityComparer{Castle.Components.DictionaryAdapter.Xml.XmlName})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.ConstructorStringComparer">
            <summary>Sets the shim of XmlNameComparer.XmlNameComparer(StringComparer comparer)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.EqualsXmlNameXmlName">
            <summary>Sets the shim of XmlNameComparer.Equals(XmlName x, XmlName y)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.GetHashCodeXmlName">
            <summary>Sets the shim of XmlNameComparer.GetHashCode(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.StaticConstructor">
            <summary>Sets the shim of XmlNameComparer.XmlNameComparer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.AllInstances.EqualsXmlNameXmlName">
            <summary>Sets the shim of XmlNameComparer.Equals(XmlName x, XmlName y)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNameComparer.AllInstances.GetHashCodeXmlName">
            <summary>Sets the shim of XmlNameComparer.GetHashCode(XmlName name)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlNodeAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlNodeAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConfigureKnownTypesFromAttributesOf1IEnumerableOfM0IXmlBehaviorSemanticsOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},Castle.Components.DictionaryAdapter.Xml.IXmlBehaviorSemantics{``0}})">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureKnownTypesFromAttributes(IEnumerable`1&lt;!!0&gt; attributes, IXmlBehaviorSemantics`1&lt;!!0&gt; semantics)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AddKnownTypeXmlNameXmlNameTypeBoolean">
            <summary>Sets the shim of XmlNodeAccessor.AddKnownType(XmlName name, XmlName xsiType, Type clrType, Boolean overwrite)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AddSelfAsKnownType">
            <summary>Sets the shim of XmlNodeAccessor.AddSelfAsKnownType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConfigureDefaultAndIncludedTypes">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureDefaultAndIncludedTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConfigureIncludedTypesIXmlKnownType">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureIncludedTypes(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConfigureKnownTypesFromParentXmlNodeAccessor">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureKnownTypesFromParent(XmlNodeAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConfigureLocalNameString">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureLocalName(String localName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConfigureNamespaceUriString">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConstructorStringTypeIXmlContext">
            <summary>Sets the shim of XmlNodeAccessor.XmlNodeAccessor(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ConstructorTypeIXmlContext">
            <summary>Sets the shim of XmlNodeAccessor.XmlNodeAccessor(Type type, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.DefaultCastleComponentsDictionaryAdapterXmlIXmlKnownTypeMapget">
            <summary>Sets the shim of XmlNodeAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.IsMatchIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.IsMatchOnNamespaceUriIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.IsMatchOnNamespaceUri(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.IsMatchOnXsiTypeIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.IsMatchOnXsiType(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.IsMatchType">
            <summary>Sets the shim of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.KnownTypesGet">
            <summary>Sets the shim of XmlNodeAccessor.get_KnownTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.NameGet">
            <summary>Sets the shim of XmlNodeAccessor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.Prepare">
            <summary>Sets the shim of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.ShouldIgnoreAttributeNamespaceUriIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.ShouldIgnoreAttributeNamespaceUri(IXmlIdentity xmlName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.StaticConstructor">
            <summary>Sets the shim of XmlNodeAccessor.XmlNodeAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the shim of XmlNodeAccessor.TryGet(IXmlIdentity xmlName, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the shim of XmlNodeAccessor.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.XsiTypeCastleComponentsDictionaryAdapterXmlIXmlIdentityget">
            <summary>Sets the shim of XmlNodeAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ConfigureKnownTypesFromAttributesOf1IEnumerableOfM0IXmlBehaviorSemanticsOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.Components.DictionaryAdapter.Xml.XmlNodeAccessor,System.Collections.Generic.IEnumerable{``0},Castle.Components.DictionaryAdapter.Xml.IXmlBehaviorSemantics{``0}})">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureKnownTypesFromAttributes(IEnumerable`1&lt;!!0&gt; attributes, IXmlBehaviorSemantics`1&lt;!!0&gt; semantics)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.AddKnownTypeXmlNameXmlNameTypeBoolean">
            <summary>Sets the shim of XmlNodeAccessor.AddKnownType(XmlName name, XmlName xsiType, Type clrType, Boolean overwrite)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.AddSelfAsKnownType">
            <summary>Sets the shim of XmlNodeAccessor.AddSelfAsKnownType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ConfigureDefaultAndIncludedTypes">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureDefaultAndIncludedTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ConfigureIncludedTypesIXmlKnownType">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureIncludedTypes(IXmlKnownType knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ConfigureKnownTypesFromParentXmlNodeAccessor">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureKnownTypesFromParent(XmlNodeAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ConfigureLocalNameString">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureLocalName(String localName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ConfigureNamespaceUriString">
            <summary>Sets the shim of XmlNodeAccessor.ConfigureNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.DefaultCastleComponentsDictionaryAdapterXmlIXmlKnownTypeMapget">
            <summary>Sets the shim of XmlNodeAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap.get_Default()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.IsMatchIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.IsMatchOnNamespaceUriIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.IsMatchOnNamespaceUri(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.IsMatchOnXsiTypeIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.IsMatchOnXsiType(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.IsMatchType">
            <summary>Sets the shim of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.KnownTypesGet">
            <summary>Sets the shim of XmlNodeAccessor.get_KnownTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.NameGet">
            <summary>Sets the shim of XmlNodeAccessor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.Prepare">
            <summary>Sets the shim of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.ShouldIgnoreAttributeNamespaceUriIXmlIdentity">
            <summary>Sets the shim of XmlNodeAccessor.ShouldIgnoreAttributeNamespaceUri(IXmlIdentity xmlName)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the shim of XmlNodeAccessor.TryGet(IXmlIdentity xmlName, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the shim of XmlNodeAccessor.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeAccessor.AllInstances.XsiTypeCastleComponentsDictionaryAdapterXmlIXmlIdentityget">
            <summary>Sets the shim of XmlNodeAccessor.Castle.Components.DictionaryAdapter.Xml.IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlNodeBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlNodeBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.CastleComponentsDictionaryAdapterXmlIRealizableSourceAsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets the shim of XmlNodeBase.Castle.Components.DictionaryAdapter.Xml.IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.CastleComponentsDictionaryAdapterIVirtualRealize">
            <summary>Sets the shim of XmlNodeBase.Castle.Components.DictionaryAdapter.IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.ClrTypeGet">
            <summary>Sets the shim of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.ConstructorIXmlNamespaceSourceIXmlNode">
            <summary>Sets the shim of XmlNodeBase.XmlNodeBase(IXmlNamespaceSource namespaces, IXmlNode parent)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.IsRealGet">
            <summary>Sets the shim of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.NamespacesGet">
            <summary>Sets the shim of XmlNodeBase.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.ParentGet">
            <summary>Sets the shim of XmlNodeBase.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.PathGet">
            <summary>Sets the shim of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.Realize">
            <summary>Sets the shim of XmlNodeBase.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.RealizedAddEventHandler">
            <summary>Sets the shim of XmlNodeBase.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.RealizedRemoveEventHandler">
            <summary>Sets the shim of XmlNodeBase.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.CastleComponentsDictionaryAdapterXmlIRealizableSourceAsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.XmlNodeBase,Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets the shim of XmlNodeBase.Castle.Components.DictionaryAdapter.Xml.IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.CastleComponentsDictionaryAdapterIVirtualRealize">
            <summary>Sets the shim of XmlNodeBase.Castle.Components.DictionaryAdapter.IVirtual.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.ClrTypeGet">
            <summary>Sets the shim of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.IsRealGet">
            <summary>Sets the shim of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.NamespacesGet">
            <summary>Sets the shim of XmlNodeBase.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.ParentGet">
            <summary>Sets the shim of XmlNodeBase.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.PathGet">
            <summary>Sets the shim of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.Realize">
            <summary>Sets the shim of XmlNodeBase.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.RealizedAddEventHandler">
            <summary>Sets the shim of XmlNodeBase.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlNodeBase.AllInstances.RealizedRemoveEventHandler">
            <summary>Sets the shim of XmlNodeBase.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlPositionComparer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlPositionComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.Constructor">
            <summary>Sets the shim of XmlPositionComparer.XmlPositionComparer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.EqualsIXmlNodeIXmlNode">
            <summary>Sets the shim of XmlPositionComparer.Equals(IXmlNode nodeA, IXmlNode nodeB)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.StaticConstructor">
            <summary>Sets the shim of XmlPositionComparer.XmlPositionComparer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlPositionComparer.AllInstances.EqualsIXmlNodeIXmlNode">
            <summary>Sets the shim of XmlPositionComparer.Equals(IXmlNode nodeA, IXmlNode nodeB)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AddIXmlNodeObjectObjectBoolean">
            <summary>Sets the shim of XmlReferenceManager.Add(IXmlNode node, Object keyValue, Object newValue, Boolean isInGraph)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.ConstructorIXmlNodeIXmlReferenceFormat">
            <summary>Sets the shim of XmlReferenceManager.XmlReferenceManager(IXmlNode root, IXmlReferenceFormat format)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.IdNotFoundErrorInt32">
            <summary>Sets the shim of XmlReferenceManager.IdNotFoundError(Int32 id)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.OnAssignedValueIXmlNodeObjectObjectObject">
            <summary>Sets the shim of XmlReferenceManager.OnAssignedValue(IXmlNode node, Object givenValue, Object storedValue, Object token)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.OnAssigningNullIXmlNodeObject">
            <summary>Sets the shim of XmlReferenceManager.OnAssigningNull(IXmlNode node, Object oldValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.OnGetCompletedIXmlNodeObjectObject">
            <summary>Sets the shim of XmlReferenceManager.OnGetCompleted(IXmlNode node, Object value, Object token)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.PopulateIXmlNode">
            <summary>Sets the shim of XmlReferenceManager.Populate(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.PopulateIdentityInt32IXmlNode">
            <summary>Sets the shim of XmlReferenceManager.PopulateIdentity(Int32 id, IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.ShouldExcludeType">
            <summary>Sets the shim of XmlReferenceManager.ShouldExclude(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.StaticConstructor">
            <summary>Sets the shim of XmlReferenceManager.XmlReferenceManager()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.TryGetObjectObjectOut">
            <summary>Sets the shim of XmlReferenceManager.TryGet(Object keyObject, Object&amp; inGraphObject)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.UnionWithXmlReferenceManager">
            <summary>Sets the shim of XmlReferenceManager.UnionWith(XmlReferenceManager other)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.AddIXmlNodeObjectObjectBoolean">
            <summary>Sets the shim of XmlReferenceManager.Add(IXmlNode node, Object keyValue, Object newValue, Boolean isInGraph)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.OnAssignedValueIXmlNodeObjectObjectObject">
            <summary>Sets the shim of XmlReferenceManager.OnAssignedValue(IXmlNode node, Object givenValue, Object storedValue, Object token)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.OnAssigningNullIXmlNodeObject">
            <summary>Sets the shim of XmlReferenceManager.OnAssigningNull(IXmlNode node, Object oldValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.OnGetCompletedIXmlNodeObjectObject">
            <summary>Sets the shim of XmlReferenceManager.OnGetCompleted(IXmlNode node, Object value, Object token)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.PopulateIXmlNode">
            <summary>Sets the shim of XmlReferenceManager.Populate(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.PopulateIdentityInt32IXmlNode">
            <summary>Sets the shim of XmlReferenceManager.PopulateIdentity(Int32 id, IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.TryGetObjectObjectOut">
            <summary>Sets the shim of XmlReferenceManager.TryGet(Object keyObject, Object&amp; inGraphObject)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlReferenceManager.AllInstances.UnionWithXmlReferenceManager">
            <summary>Sets the shim of XmlReferenceManager.UnionWith(XmlReferenceManager other)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSelfAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlSelfAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.ConfigureNillableBoolean">
            <summary>Sets the shim of XmlSelfAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.ConstructorTypeIXmlContext">
            <summary>Sets the shim of XmlSelfAccessor.XmlSelfAccessor(Type clrType, IXmlContext context)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlSelfAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.StaticConstructor">
            <summary>Sets the shim of XmlSelfAccessor.XmlSelfAccessor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor._cctorb__0StringTypeIXmlContext">
            <summary>Sets the shim of XmlSelfAccessor.&lt;.cctor&gt;b__0(String name, Type type, IXmlContext context)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.AllInstances.ConfigureNillableBoolean">
            <summary>Sets the shim of XmlSelfAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfAccessor.AllInstances.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the shim of XmlSelfAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSelfCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlSelfCursor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets the shim of XmlSelfCursor.AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.IVirtual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IRealizableSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlCursor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlIterator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlKnownType)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Bind(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Clear">
            <summary>Sets the shim of XmlSelfCursor.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.ClrTypeGet">
            <summary>Sets the shim of XmlSelfCursor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.CoerceType">
            <summary>Sets the shim of XmlSelfCursor.Coerce(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.ConstructorIXmlNodeType">
            <summary>Sets the shim of XmlSelfCursor.XmlSelfCursor(IXmlNode node, Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.CreateType">
            <summary>Sets the shim of XmlSelfCursor.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.DefineNamespaceStringStringBoolean">
            <summary>Sets the shim of XmlSelfCursor.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.EvaluateCompiledXPath">
            <summary>Sets the shim of XmlSelfCursor.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.FlagsGet">
            <summary>Sets the shim of XmlSelfCursor.get_Flags()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.GetAttributeXmlName">
            <summary>Sets the shim of XmlSelfCursor.GetAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.IsAttributeGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.IsElementGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.IsNilGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.IsNilSetBoolean">
            <summary>Sets the shim of XmlSelfCursor.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.IsRealGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.LookupNamespaceUriString">
            <summary>Sets the shim of XmlSelfCursor.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.LookupPrefixString">
            <summary>Sets the shim of XmlSelfCursor.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.MakeNextType">
            <summary>Sets the shim of XmlSelfCursor.MakeNext(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.MoveNext">
            <summary>Sets the shim of XmlSelfCursor.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.MoveToEnd">
            <summary>Sets the shim of XmlSelfCursor.MoveToEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.MoveToIXmlNode">
            <summary>Sets the shim of XmlSelfCursor.MoveTo(IXmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.NameGet">
            <summary>Sets the shim of XmlSelfCursor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.NamespacesGet">
            <summary>Sets the shim of XmlSelfCursor.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.ParentGet">
            <summary>Sets the shim of XmlSelfCursor.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.PathGet">
            <summary>Sets the shim of XmlSelfCursor.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.ReadSubtree">
            <summary>Sets the shim of XmlSelfCursor.ReadSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Realize">
            <summary>Sets the shim of XmlSelfCursor.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.RealizedAddEventHandler">
            <summary>Sets the shim of XmlSelfCursor.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.RealizedRemoveEventHandler">
            <summary>Sets the shim of XmlSelfCursor.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Remove">
            <summary>Sets the shim of XmlSelfCursor.Remove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.RemoveAllNext">
            <summary>Sets the shim of XmlSelfCursor.RemoveAllNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Reset">
            <summary>Sets the shim of XmlSelfCursor.Reset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.Save">
            <summary>Sets the shim of XmlSelfCursor.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XmlSelfCursor.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XmlSelfCursor.Select(CompiledXPath path, IXmlIncludedTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.SelectSelfType">
            <summary>Sets the shim of XmlSelfCursor.SelectSelf(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.SelectSubtree">
            <summary>Sets the shim of XmlSelfCursor.SelectSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.SetAttributeXmlNameString">
            <summary>Sets the shim of XmlSelfCursor.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.UnderlyingObjectGet">
            <summary>Sets the shim of XmlSelfCursor.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the shim of XmlSelfCursor.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.ValueGet">
            <summary>Sets the shim of XmlSelfCursor.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.ValueSetString">
            <summary>Sets the shim of XmlSelfCursor.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.WriteAttributes">
            <summary>Sets the shim of XmlSelfCursor.WriteAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.WriteChildren">
            <summary>Sets the shim of XmlSelfCursor.WriteChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.XmlGet">
            <summary>Sets the shim of XmlSelfCursor.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.XsiTypeGet">
            <summary>Sets the shim of XmlSelfCursor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.XmlSelfCursor,Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets the shim of XmlSelfCursor.AsRealizable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.Clear">
            <summary>Sets the shim of XmlSelfCursor.Clear()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.ClrTypeGet">
            <summary>Sets the shim of XmlSelfCursor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.CoerceType">
            <summary>Sets the shim of XmlSelfCursor.Coerce(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.CreateType">
            <summary>Sets the shim of XmlSelfCursor.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.DefineNamespaceStringStringBoolean">
            <summary>Sets the shim of XmlSelfCursor.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.EvaluateCompiledXPath">
            <summary>Sets the shim of XmlSelfCursor.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.FlagsGet">
            <summary>Sets the shim of XmlSelfCursor.get_Flags()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.GetAttributeXmlName">
            <summary>Sets the shim of XmlSelfCursor.GetAttribute(XmlName name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.IsAttributeGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.IsElementGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.IsNilGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.IsNilSetBoolean">
            <summary>Sets the shim of XmlSelfCursor.set_IsNil(Boolean value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.IsRealGet">
            <summary>Sets the shim of XmlSelfCursor.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.LookupNamespaceUriString">
            <summary>Sets the shim of XmlSelfCursor.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.LookupPrefixString">
            <summary>Sets the shim of XmlSelfCursor.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.MakeNextType">
            <summary>Sets the shim of XmlSelfCursor.MakeNext(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.MoveNext">
            <summary>Sets the shim of XmlSelfCursor.MoveNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.MoveToEnd">
            <summary>Sets the shim of XmlSelfCursor.MoveToEnd()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.MoveToIXmlNode">
            <summary>Sets the shim of XmlSelfCursor.MoveTo(IXmlNode position)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.NameGet">
            <summary>Sets the shim of XmlSelfCursor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.NamespacesGet">
            <summary>Sets the shim of XmlSelfCursor.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.ParentGet">
            <summary>Sets the shim of XmlSelfCursor.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.PathGet">
            <summary>Sets the shim of XmlSelfCursor.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.ReadSubtree">
            <summary>Sets the shim of XmlSelfCursor.ReadSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.Realize">
            <summary>Sets the shim of XmlSelfCursor.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.RealizedAddEventHandler">
            <summary>Sets the shim of XmlSelfCursor.add_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.RealizedRemoveEventHandler">
            <summary>Sets the shim of XmlSelfCursor.remove_Realized(EventHandler value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.Remove">
            <summary>Sets the shim of XmlSelfCursor.Remove()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.RemoveAllNext">
            <summary>Sets the shim of XmlSelfCursor.RemoveAllNext()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.Reset">
            <summary>Sets the shim of XmlSelfCursor.Reset()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.Save">
            <summary>Sets the shim of XmlSelfCursor.Save()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XmlSelfCursor.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the shim of XmlSelfCursor.Select(CompiledXPath path, IXmlIncludedTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.SelectSelfType">
            <summary>Sets the shim of XmlSelfCursor.SelectSelf(Type clrType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.SelectSubtree">
            <summary>Sets the shim of XmlSelfCursor.SelectSubtree()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.SetAttributeXmlNameString">
            <summary>Sets the shim of XmlSelfCursor.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.UnderlyingObjectGet">
            <summary>Sets the shim of XmlSelfCursor.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the shim of XmlSelfCursor.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.ValueGet">
            <summary>Sets the shim of XmlSelfCursor.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.ValueSetString">
            <summary>Sets the shim of XmlSelfCursor.set_Value(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.WriteAttributes">
            <summary>Sets the shim of XmlSelfCursor.WriteAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.WriteChildren">
            <summary>Sets the shim of XmlSelfCursor.WriteChildren()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.XmlGet">
            <summary>Sets the shim of XmlSelfCursor.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSelfCursor.AllInstances.XsiTypeGet">
            <summary>Sets the shim of XmlSelfCursor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSetSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlSetSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.Constructor">
            <summary>Sets the shim of XmlSetSerializer.XmlSetSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.ListTypeConstructorGet">
            <summary>Sets the shim of XmlSetSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.StaticConstructor">
            <summary>Sets the shim of XmlSetSerializer.XmlSetSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSetSerializer.AllInstances.ListTypeConstructorGet">
            <summary>Sets the shim of XmlSetSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSimpleSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.StaticConstructor">
            <summary>Sets the shim of XmlSimpleSerializer.XmlSimpleSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.XmlConvert_ToDateTimeString">
            <summary>Sets the shim of XmlSimpleSerializer.XmlConvert_ToDateTime(String value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer.XmlConvert_ToStringDateTime">
            <summary>Sets the shim of XmlSimpleSerializer.XmlConvert_ToString(DateTime value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer._cctorb__0Uri">
            <summary>Sets the shim of XmlSimpleSerializer.&lt;.cctor&gt;b__0(Uri u)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer._cctorb__1String">
            <summary>Sets the shim of XmlSimpleSerializer.&lt;.cctor&gt;b__1(String s)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSimpleSerializer`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlSimpleSerializer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.ConstructorFuncOfT0StringFuncOfStringT0">
            <summary>Sets the shim of XmlSimpleSerializer`1.XmlSimpleSerializer`1(Func`2&lt;!0,String&gt; getString, Func`2&lt;String,!0&gt; getObject)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlSimpleSerializer`1.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.KindGet">
            <summary>Sets the shim of XmlSimpleSerializer`1.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlSimpleSerializer`1.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlSimpleSerializer`1.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.AllInstances.KindGet">
            <summary>Sets the shim of XmlSimpleSerializer`1.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSimpleSerializer`1.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlSimpleSerializer`1.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlStringSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlStringSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.Constructor">
            <summary>Sets the shim of XmlStringSerializer.XmlStringSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlStringSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.KindGet">
            <summary>Sets the shim of XmlStringSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlStringSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.StaticConstructor">
            <summary>Sets the shim of XmlStringSerializer.XmlStringSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlStringSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlStringSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlStringSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlStringSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSubtreeReader</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlSubtreeReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AttributeCountGet">
            <summary>Sets the shim of XmlSubtreeReader.get_AttributeCount()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.BaseURIGet">
            <summary>Sets the shim of XmlSubtreeReader.get_BaseURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.CaptureNamespaceUri">
            <summary>Sets the shim of XmlSubtreeReader.CaptureNamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.Close">
            <summary>Sets the shim of XmlSubtreeReader.Close()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ConstructorIXmlNodeStringString">
            <summary>Sets the shim of XmlSubtreeReader.XmlSubtreeReader(IXmlNode node, String rootLocalName, String rootNamespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ConstructorIXmlNodeXmlRootAttribute">
            <summary>Sets the shim of XmlSubtreeReader.XmlSubtreeReader(IXmlNode node, XmlRootAttribute root)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.DepthGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Depth()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.DisposeBoolean">
            <summary>Sets the shim of XmlSubtreeReader.Dispose(Boolean managed)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.DisposeReader">
            <summary>Sets the shim of XmlSubtreeReader.DisposeReader()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.EOFGet">
            <summary>Sets the shim of XmlSubtreeReader.get_EOF()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.GetAttributeInt32">
            <summary>Sets the shim of XmlSubtreeReader.GetAttribute(Int32 i)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.GetAttributeString">
            <summary>Sets the shim of XmlSubtreeReader.GetAttribute(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.GetAttributeStringString">
            <summary>Sets the shim of XmlSubtreeReader.GetAttribute(String name, String namespaceURI)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.IsAtRootElementGet">
            <summary>Sets the shim of XmlSubtreeReader.get_IsAtRootElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.IsDisposedGet">
            <summary>Sets the shim of XmlSubtreeReader.get_IsDisposed()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.IsEmptyElementGet">
            <summary>Sets the shim of XmlSubtreeReader.get_IsEmptyElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.LocalNameGet">
            <summary>Sets the shim of XmlSubtreeReader.get_LocalName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.LookupNamespaceString">
            <summary>Sets the shim of XmlSubtreeReader.LookupNamespace(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.MoveToAttributeString">
            <summary>Sets the shim of XmlSubtreeReader.MoveToAttribute(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.MoveToAttributeStringString">
            <summary>Sets the shim of XmlSubtreeReader.MoveToAttribute(String name, String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.MoveToElement">
            <summary>Sets the shim of XmlSubtreeReader.MoveToElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.MoveToFirstAttribute">
            <summary>Sets the shim of XmlSubtreeReader.MoveToFirstAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.MoveToNextAttribute">
            <summary>Sets the shim of XmlSubtreeReader.MoveToNextAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.NameTableGet">
            <summary>Sets the shim of XmlSubtreeReader.get_NameTable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.NamespaceURIGet">
            <summary>Sets the shim of XmlSubtreeReader.get_NamespaceURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.NodeTypeGet">
            <summary>Sets the shim of XmlSubtreeReader.get_NodeType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.PrefixGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.Read">
            <summary>Sets the shim of XmlSubtreeReader.Read()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ReadAttributeValue">
            <summary>Sets the shim of XmlSubtreeReader.ReadAttributeValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ReadStateGet">
            <summary>Sets the shim of XmlSubtreeReader.get_ReadState()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ReaderGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Reader()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.RequireNotDisposed">
            <summary>Sets the shim of XmlSubtreeReader.RequireNotDisposed()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ResolveEntity">
            <summary>Sets the shim of XmlSubtreeReader.ResolveEntity()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.TranslateNamespaceURI">
            <summary>Sets the shim of XmlSubtreeReader.TranslateNamespaceURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.ValueGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.AttributeCountGet">
            <summary>Sets the shim of XmlSubtreeReader.get_AttributeCount()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.BaseURIGet">
            <summary>Sets the shim of XmlSubtreeReader.get_BaseURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.CaptureNamespaceUri">
            <summary>Sets the shim of XmlSubtreeReader.CaptureNamespaceUri()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.Close">
            <summary>Sets the shim of XmlSubtreeReader.Close()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.DepthGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Depth()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of XmlSubtreeReader.Dispose(Boolean managed)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.DisposeReader">
            <summary>Sets the shim of XmlSubtreeReader.DisposeReader()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.EOFGet">
            <summary>Sets the shim of XmlSubtreeReader.get_EOF()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.GetAttributeInt32">
            <summary>Sets the shim of XmlSubtreeReader.GetAttribute(Int32 i)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.GetAttributeString">
            <summary>Sets the shim of XmlSubtreeReader.GetAttribute(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.GetAttributeStringString">
            <summary>Sets the shim of XmlSubtreeReader.GetAttribute(String name, String namespaceURI)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.IsAtRootElementGet">
            <summary>Sets the shim of XmlSubtreeReader.get_IsAtRootElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.IsDisposedGet">
            <summary>Sets the shim of XmlSubtreeReader.get_IsDisposed()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.IsEmptyElementGet">
            <summary>Sets the shim of XmlSubtreeReader.get_IsEmptyElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.LocalNameGet">
            <summary>Sets the shim of XmlSubtreeReader.get_LocalName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.LookupNamespaceString">
            <summary>Sets the shim of XmlSubtreeReader.LookupNamespace(String prefix)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.MoveToAttributeString">
            <summary>Sets the shim of XmlSubtreeReader.MoveToAttribute(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.MoveToAttributeStringString">
            <summary>Sets the shim of XmlSubtreeReader.MoveToAttribute(String name, String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.MoveToElement">
            <summary>Sets the shim of XmlSubtreeReader.MoveToElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.MoveToFirstAttribute">
            <summary>Sets the shim of XmlSubtreeReader.MoveToFirstAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.MoveToNextAttribute">
            <summary>Sets the shim of XmlSubtreeReader.MoveToNextAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.NameTableGet">
            <summary>Sets the shim of XmlSubtreeReader.get_NameTable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.NamespaceURIGet">
            <summary>Sets the shim of XmlSubtreeReader.get_NamespaceURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.NodeTypeGet">
            <summary>Sets the shim of XmlSubtreeReader.get_NodeType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.PrefixGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.Read">
            <summary>Sets the shim of XmlSubtreeReader.Read()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.ReadAttributeValue">
            <summary>Sets the shim of XmlSubtreeReader.ReadAttributeValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.ReadStateGet">
            <summary>Sets the shim of XmlSubtreeReader.get_ReadState()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.ReaderGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Reader()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.RequireNotDisposed">
            <summary>Sets the shim of XmlSubtreeReader.RequireNotDisposed()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.ResolveEntity">
            <summary>Sets the shim of XmlSubtreeReader.ResolveEntity()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.TranslateNamespaceURI">
            <summary>Sets the shim of XmlSubtreeReader.TranslateNamespaceURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeReader.AllInstances.ValueGet">
            <summary>Sets the shim of XmlSubtreeReader.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlSubtreeWriter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlSubtreeWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.ChildWriterGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_ChildWriter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.Close">
            <summary>Sets the shim of XmlSubtreeWriter.Close()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.ConstructorIXmlNode">
            <summary>Sets the shim of XmlSubtreeWriter.XmlSubtreeWriter(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.DisposeBoolean">
            <summary>Sets the shim of XmlSubtreeWriter.Dispose(Boolean managed)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.DisposeWriterXmlWriterRef">
            <summary>Sets the shim of XmlSubtreeWriter.DisposeWriter(XmlWriter&amp; writer)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.Flush">
            <summary>Sets the shim of XmlSubtreeWriter.Flush()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.IsInChildGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_IsInChild()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.IsInRootAttributeGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_IsInRootAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.IsInRootGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_IsInRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.LookupPrefixString">
            <summary>Sets the shim of XmlSubtreeWriter.LookupPrefix(String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.RequireNotClosed">
            <summary>Sets the shim of XmlSubtreeWriter.RequireNotClosed()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.RequireStateWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.RequireState(WriteState state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.RequireStateWriteStateWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.RequireState(WriteState state1, WriteState state2)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.ResetWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.Reset(WriteState state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.RootWriterGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_RootWriter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WithWritersActionOfXmlWriterBooleanNullableOfWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.WithWriters(Action`1&lt;XmlWriter&gt; action, Boolean worksIfClosed, Nullable`1&lt;WriteState&gt; resetTo)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteAttributeActionOfXmlWriterWriteStateWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.WriteAttribute(Action`1&lt;XmlWriter&gt; action, WriteState entryState, WriteState exitState)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteBase64ByteArrayInt32Int32">
            <summary>Sets the shim of XmlSubtreeWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteCDataString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteCData(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteCharEntityChar">
            <summary>Sets the shim of XmlSubtreeWriter.WriteCharEntity(Char ch)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteCharsCharArrayInt32Int32">
            <summary>Sets the shim of XmlSubtreeWriter.WriteChars(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteCommentString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteComment(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteDocTypeStringStringStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteDocType(String name, String pubid, String sysid, String subset)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteElementContentActionOfXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.WriteElementContent(Action`1&lt;XmlWriter&gt; action)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteElementOrAttributeContentActionOfXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.WriteElementOrAttributeContent(Action`1&lt;XmlWriter&gt; action)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteEndAttribute">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteEndDocument">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndDocument()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteEndElement">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteEndElementActionOfXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndElement(Action`1&lt;XmlWriter&gt; action)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteEntityRefString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEntityRef(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteFullEndElement">
            <summary>Sets the shim of XmlSubtreeWriter.WriteFullEndElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteProcessingInstructionStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteProcessingInstruction(String name, String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteRawCharArrayInt32Int32">
            <summary>Sets the shim of XmlSubtreeWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteRawString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteRaw(String data)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteStartAttributeStringStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartAttribute(String prefix, String localName, String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteStartDocument">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartDocument()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteStartDocumentBoolean">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartDocument(Boolean standalone)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteStartElementStringStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartElement(String prefix, String localName, String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteStateGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_WriteState()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteString(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteSurrogateCharEntityCharChar">
            <summary>Sets the shim of XmlSubtreeWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.WriteWhitespaceString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteWhitespace(String ws)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter._Closeb__31XmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.&lt;Close&gt;b__31(XmlWriter w)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter._Flushb__2dXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.&lt;Flush&gt;b__2d(XmlWriter w)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter._WriteEndAttributeb__7XmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.&lt;WriteEndAttribute&gt;b__7(XmlWriter w)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter._WriteEndDocumentb__2fXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.&lt;WriteEndDocument&gt;b__2f(XmlWriter w)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter._WriteEndElementb__0XmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.&lt;WriteEndElement&gt;b__0(XmlWriter w)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter._WriteFullEndElementb__2XmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.&lt;WriteFullEndElement&gt;b__2(XmlWriter w)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.ChildWriterGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_ChildWriter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.Close">
            <summary>Sets the shim of XmlSubtreeWriter.Close()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of XmlSubtreeWriter.Dispose(Boolean managed)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.DisposeWriterXmlWriterRef">
            <summary>Sets the shim of XmlSubtreeWriter.DisposeWriter(XmlWriter&amp; writer)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.Flush">
            <summary>Sets the shim of XmlSubtreeWriter.Flush()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.IsInChildGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_IsInChild()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.IsInRootAttributeGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_IsInRootAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.IsInRootGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_IsInRoot()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.LookupPrefixString">
            <summary>Sets the shim of XmlSubtreeWriter.LookupPrefix(String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.RequireNotClosed">
            <summary>Sets the shim of XmlSubtreeWriter.RequireNotClosed()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.RequireStateWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.RequireState(WriteState state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.RequireStateWriteStateWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.RequireState(WriteState state1, WriteState state2)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.ResetWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.Reset(WriteState state)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.RootWriterGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_RootWriter()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WithWritersActionOfXmlWriterBooleanNullableOfWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.WithWriters(Action`1&lt;XmlWriter&gt; action, Boolean worksIfClosed, Nullable`1&lt;WriteState&gt; resetTo)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteAttributeActionOfXmlWriterWriteStateWriteState">
            <summary>Sets the shim of XmlSubtreeWriter.WriteAttribute(Action`1&lt;XmlWriter&gt; action, WriteState entryState, WriteState exitState)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteBase64ByteArrayInt32Int32">
            <summary>Sets the shim of XmlSubtreeWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteCDataString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteCData(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteCharEntityChar">
            <summary>Sets the shim of XmlSubtreeWriter.WriteCharEntity(Char ch)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteCharsCharArrayInt32Int32">
            <summary>Sets the shim of XmlSubtreeWriter.WriteChars(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteCommentString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteComment(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteDocTypeStringStringStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteDocType(String name, String pubid, String sysid, String subset)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteElementContentActionOfXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.WriteElementContent(Action`1&lt;XmlWriter&gt; action)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteElementOrAttributeContentActionOfXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.WriteElementOrAttributeContent(Action`1&lt;XmlWriter&gt; action)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteEndAttribute">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteEndDocument">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndDocument()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteEndElement">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteEndElementActionOfXmlWriter">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEndElement(Action`1&lt;XmlWriter&gt; action)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteEntityRefString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteEntityRef(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteFullEndElement">
            <summary>Sets the shim of XmlSubtreeWriter.WriteFullEndElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteProcessingInstructionStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteProcessingInstruction(String name, String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteRawCharArrayInt32Int32">
            <summary>Sets the shim of XmlSubtreeWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteRawString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteRaw(String data)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteStartAttributeStringStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartAttribute(String prefix, String localName, String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteStartDocument">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartDocument()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteStartDocumentBoolean">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartDocument(Boolean standalone)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteStartElementStringStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteStartElement(String prefix, String localName, String ns)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteStateGet">
            <summary>Sets the shim of XmlSubtreeWriter.get_WriteState()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteStringString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteString(String text)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteSurrogateCharEntityCharChar">
            <summary>Sets the shim of XmlSubtreeWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlSubtreeWriter.AllInstances.WriteWhitespaceString">
            <summary>Sets the shim of XmlSubtreeWriter.WriteWhitespace(String ws)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.CanGetStubGet">
            <summary>Sets the shim of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.Constructor">
            <summary>Sets the shim of XmlTypeSerializer.XmlTypeSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.ForType">
            <summary>Sets the shim of XmlTypeSerializer.For(Type type)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.AllInstances.CanGetStubGet">
            <summary>Sets the shim of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlTypeSerializer.AllInstances.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.XmlXmlNodeSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlXmlNodeSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.Constructor">
            <summary>Sets the shim of XmlXmlNodeSerializer.XmlXmlNodeSerializer()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlXmlNodeSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.KindGet">
            <summary>Sets the shim of XmlXmlNodeSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlXmlNodeSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.StaticConstructor">
            <summary>Sets the shim of XmlXmlNodeSerializer.XmlXmlNodeSerializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.AllInstances.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the shim of XmlXmlNodeSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.AllInstances.KindGet">
            <summary>Sets the shim of XmlXmlNodeSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlXmlNodeSerializer.AllInstances.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the shim of XmlXmlNodeSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlns">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.Xmlns</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlns.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlns.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlns.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXmlns.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsd">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.Xsd</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsd.StaticConstructor">
            <summary>Sets the shim of Xsd.Xsd()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi">
            <summary>Shim type of Castle.Components.DictionaryAdapter.Xml.Xsi</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.GetXsiTypeIXmlNode">
            <summary>Sets the shim of Xsi.GetXsiType(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.IsXsiNilIXmlNode">
            <summary>Sets the shim of Xsi.IsXsiNil(IXmlNode node)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.SetXsiNilIXmlNodeBoolean">
            <summary>Sets the shim of Xsi.SetXsiNil(IXmlNode node, Boolean nil)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.SetXsiTypeIXmlNodeXmlName">
            <summary>Sets the shim of Xsi.SetXsiType(IXmlNode node, XmlName xsiType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.ShimXsi.StaticConstructor">
            <summary>Sets the shim of Xsi.Xsi()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIConfigurable`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IConfigurable`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIConfigurable`1.#ctor">
            <summary>Initializes a new instance of type StubIConfigurable</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIConfigurable`1.cc::Castle#Components#DictionaryAdapter#Xml#IConfigurable{T}#Configure(`0)">
            <summary>Sets the stub of IConfigurable`1.Configure(!0 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIConfigurable`1.ConfigureT0">
            <summary>Sets the stub of IConfigurable`1.Configure(!0 value)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IRealizable`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.#ctor">
            <summary>Initializes a new instance of type StubIRealizable</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets stubs of AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.cc::Castle#Components#DictionaryAdapter#Xml#IRealizableSource#AsRealizable``1">
            <summary>Sets the stub of IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.IsRealGet">
            <summary>Sets the stub of IRealizable`1.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.ValueGet">
            <summary>Sets the stub of IRealizable`1.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.cc::Castle#Components#DictionaryAdapter#Xml#IRealizable{T}#IsReal">
            <summary>Sets the stub of IRealizable`1.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizable`1.cc::Castle#Components#DictionaryAdapter#Xml#IRealizable{T}#Value">
            <summary>Sets the stub of IRealizable`1.get_Value()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizableSource">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IRealizableSource</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizableSource.#ctor">
            <summary>Initializes a new instance of type StubIRealizableSource</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizableSource.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets stubs of AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIRealizableSource.cc::Castle#Components#DictionaryAdapter#Xml#IRealizableSource#AsRealizable``1">
            <summary>Sets the stub of IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.#ctor">
            <summary>Initializes a new instance of type StubIXmlAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of IXmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IXmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of IXmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.ClrTypeGet">
            <summary>Sets the stub of IXmlAccessor.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.ContextGet">
            <summary>Sets the stub of IXmlAccessor.get_Context()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of IXmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.GetValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBooleanBoolean">
            <summary>Sets the stub of IXmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.IsNillableGet">
            <summary>Sets the stub of IXmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.IsReferenceGet">
            <summary>Sets the stub of IXmlAccessor.get_IsReference()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.SerializerGet">
            <summary>Sets the stub of IXmlAccessor.get_Serializer()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of IXmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#ClrType">
            <summary>Sets the stub of IXmlAccessor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#Context">
            <summary>Sets the stub of IXmlAccessor.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#IsNillable">
            <summary>Sets the stub of IXmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#IsReference">
            <summary>Sets the stub of IXmlAccessor.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#Serializer">
            <summary>Sets the stub of IXmlAccessor.get_Serializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlBehaviorSemantics`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.#ctor">
            <summary>Initializes a new instance of type StubIXmlBehaviorSemantics</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.cc::Castle#Components#DictionaryAdapter#Xml#IXmlBehaviorSemantics{T}#GetClrType(`0)">
            <summary>Sets the stub of IXmlBehaviorSemantics`1.GetClrType(!0 behavior)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.cc::Castle#Components#DictionaryAdapter#Xml#IXmlBehaviorSemantics{T}#GetLocalName(`0)">
            <summary>Sets the stub of IXmlBehaviorSemantics`1.GetLocalName(!0 behavior)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.cc::Castle#Components#DictionaryAdapter#Xml#IXmlBehaviorSemantics{T}#GetNamespaceUri(`0)">
            <summary>Sets the stub of IXmlBehaviorSemantics`1.GetNamespaceUri(!0 behavior)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.GetClrTypeT0">
            <summary>Sets the stub of IXmlBehaviorSemantics`1.GetClrType(!0 behavior)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.GetLocalNameT0">
            <summary>Sets the stub of IXmlBehaviorSemantics`1.GetLocalName(!0 behavior)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlBehaviorSemantics`1.GetNamespaceUriT0">
            <summary>Sets the stub of IXmlBehaviorSemantics`1.GetNamespaceUri(!0 behavior)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlCollectionAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.#ctor">
            <summary>Initializes a new instance of type StubIXmlCollectionAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of IXmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IXmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of IXmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCollectionAccessor#GetCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Collections.IList)">
            <summary>Sets the stub of IXmlCollectionAccessor.GetCollectionItems(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, IList values)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCollectionAccessor#SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of IXmlCollectionAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.ClrTypeGet">
            <summary>Sets the stub of IXmlAccessor.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.ContextGet">
            <summary>Sets the stub of IXmlAccessor.get_Context()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of IXmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.GetCollectionItemsIXmlNodeIDictionaryAdapterXmlReferenceManagerIList">
            <summary>Sets the stub of IXmlCollectionAccessor.GetCollectionItems(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, IList values)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.GetValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBooleanBoolean">
            <summary>Sets the stub of IXmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.IsNillableGet">
            <summary>Sets the stub of IXmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.IsReferenceGet">
            <summary>Sets the stub of IXmlAccessor.get_IsReference()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of IXmlCollectionAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.SerializerGet">
            <summary>Sets the stub of IXmlAccessor.get_Serializer()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of IXmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#ClrType">
            <summary>Sets the stub of IXmlAccessor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#Context">
            <summary>Sets the stub of IXmlAccessor.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#IsNillable">
            <summary>Sets the stub of IXmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#IsReference">
            <summary>Sets the stub of IXmlAccessor.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCollectionAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#Serializer">
            <summary>Sets the stub of IXmlAccessor.get_Serializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlContext</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.#ctor">
            <summary>Initializes a new instance of type StubIXmlContext</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.AddFunctionXPathFunctionAttribute">
            <summary>Sets the stub of IXmlContext.AddFunction(XPathFunctionAttribute attribute)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.AddVariableXPathVariableAttribute">
            <summary>Sets the stub of IXmlContext.AddVariable(XPathVariableAttribute attribute)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#AddFunction(Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute)">
            <summary>Sets the stub of IXmlContext.AddFunction(XPathFunctionAttribute attribute)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#AddVariable(Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute)">
            <summary>Sets the stub of IXmlContext.AddVariable(XPathVariableAttribute attribute)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#Clone">
            <summary>Sets the stub of IXmlContext.Clone()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#Enlist(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of IXmlContext.Enlist(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#GetDefaultXsiType(System.Type)">
            <summary>Sets the stub of IXmlContext.GetDefaultXsiType(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#GetIncludedTypes(System.Type)">
            <summary>Sets the stub of IXmlContext.GetIncludedTypes(Type baseType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#IsReservedNamespaceUri(System.String)">
            <summary>Sets the stub of IXmlContext.IsReservedNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNamespaceSource#GetAttributePrefix(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.String)">
            <summary>Sets the stub of IXmlNamespaceSource.GetAttributePrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNamespaceSource#GetElementPrefix(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.String)">
            <summary>Sets the stub of IXmlNamespaceSource.GetElementPrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.ChildNamespaceUriGet">
            <summary>Sets the stub of IXmlContext.get_ChildNamespaceUri()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.Clone">
            <summary>Sets the stub of IXmlContext.Clone()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.EnlistCompiledXPath">
            <summary>Sets the stub of IXmlContext.Enlist(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.GetAttributePrefixIXmlNodeString">
            <summary>Sets the stub of IXmlNamespaceSource.GetAttributePrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.GetDefaultXsiTypeType">
            <summary>Sets the stub of IXmlContext.GetDefaultXsiType(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.GetElementPrefixIXmlNodeString">
            <summary>Sets the stub of IXmlNamespaceSource.GetElementPrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.GetIncludedTypesType">
            <summary>Sets the stub of IXmlContext.GetIncludedTypes(Type baseType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.IsReservedNamespaceUriString">
            <summary>Sets the stub of IXmlContext.IsReservedNamespaceUri(String namespaceUri)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlContext.cc::Castle#Components#DictionaryAdapter#Xml#IXmlContext#ChildNamespaceUri">
            <summary>Sets the stub of IXmlContext.get_ChildNamespaceUri()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.#ctor">
            <summary>Initializes a new instance of type StubIXmlCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets stubs of AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubIXmlCursor.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubIXmlCursor.Value as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#IVirtual#Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IRealizableSource#AsRealizable``1">
            <summary>Sets the stub of IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#Coerce(System.Type)">
            <summary>Sets the stub of IXmlCursor.Coerce(Type type)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#Create(System.Type)">
            <summary>Sets the stub of IXmlCursor.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#MoveTo(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of IXmlCursor.MoveTo(IXmlNode node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#MoveToEnd">
            <summary>Sets the stub of IXmlCursor.MoveToEnd()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#Remove">
            <summary>Sets the stub of IXmlCursor.Remove()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#RemoveAllNext">
            <summary>Sets the stub of IXmlCursor.RemoveAllNext()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlCursor#Reset">
            <summary>Sets the stub of IXmlCursor.Reset()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIterator#MoveNext">
            <summary>Sets the stub of IXmlIterator.MoveNext()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Clear">
            <summary>Sets the stub of IXmlNode.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#DefineNamespace(System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of IXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#GetAttribute(Castle.Components.DictionaryAdapter.Xml.XmlName)">
            <summary>Sets the stub of IXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#LookupNamespaceUri(System.String)">
            <summary>Sets the stub of IXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#LookupPrefix(System.String)">
            <summary>Sets the stub of IXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#ReadSubtree">
            <summary>Sets the stub of IXmlNode.ReadSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Save">
            <summary>Sets the stub of IXmlNode.Save()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Select(Castle.Components.DictionaryAdapter.Xml.CompiledXPath,Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Sets the stub of IXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectChildren(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Sets the stub of IXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectSelf(System.Type)">
            <summary>Sets the stub of IXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectSubtree">
            <summary>Sets the stub of IXmlNode.SelectSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SetAttribute(Castle.Components.DictionaryAdapter.Xml.XmlName,System.String)">
            <summary>Sets the stub of IXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#UnderlyingPositionEquals(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of IXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#WriteAttributes">
            <summary>Sets the stub of IXmlNode.WriteAttributes()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#WriteChildren">
            <summary>Sets the stub of IXmlNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.Clear">
            <summary>Sets the stub of IXmlNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.ClrTypeGet">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.CoerceType">
            <summary>Sets the stub of IXmlCursor.Coerce(Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.CreateType">
            <summary>Sets the stub of IXmlCursor.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.DefineNamespaceStringStringBoolean">
            <summary>Sets the stub of IXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.EvaluateCompiledXPath">
            <summary>Sets the stub of IXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.GetAttributeXmlName">
            <summary>Sets the stub of IXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.IsAttributeGet">
            <summary>Sets the stub of IXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.IsElementGet">
            <summary>Sets the stub of IXmlNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.IsNilGet">
            <summary>Sets the stub of IXmlNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.IsNilSetBoolean">
            <summary>Sets the stub of IXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.IsRealGet">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.LookupNamespaceUriString">
            <summary>Sets the stub of IXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.LookupPrefixString">
            <summary>Sets the stub of IXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.MoveNext">
            <summary>Sets the stub of IXmlIterator.MoveNext()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.MoveToEnd">
            <summary>Sets the stub of IXmlCursor.MoveToEnd()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.MoveToIXmlNode">
            <summary>Sets the stub of IXmlCursor.MoveTo(IXmlNode node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.NameGet">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.NamespacesGet">
            <summary>Sets the stub of IXmlNode.get_Namespaces()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.ParentGet">
            <summary>Sets the stub of IXmlNode.get_Parent()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.PathGet">
            <summary>Sets the stub of IXmlNode.get_Path()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.ReadSubtree">
            <summary>Sets the stub of IXmlNode.ReadSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.Remove">
            <summary>Sets the stub of IXmlCursor.Remove()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.RemoveAllNext">
            <summary>Sets the stub of IXmlCursor.RemoveAllNext()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.Reset">
            <summary>Sets the stub of IXmlCursor.Reset()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.Save">
            <summary>Sets the stub of IXmlNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the stub of IXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the stub of IXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.SelectSelfType">
            <summary>Sets the stub of IXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.SelectSubtree">
            <summary>Sets the stub of IXmlNode.SelectSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.SetAttributeXmlNameString">
            <summary>Sets the stub of IXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.UnderlyingObjectGet">
            <summary>Sets the stub of IXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the stub of IXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.ValueGet">
            <summary>Sets the stub of IXmlNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.ValueSetString">
            <summary>Sets the stub of IXmlNode.set_Value(String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.WriteAttributes">
            <summary>Sets the stub of IXmlNode.WriteAttributes()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.WriteChildren">
            <summary>Sets the stub of IXmlNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.XmlGet">
            <summary>Sets the stub of IXmlNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.XsiTypeGet">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownType#ClrType">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsAttribute">
            <summary>Sets the stub of IXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsElement">
            <summary>Sets the stub of IXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsNil">
            <summary>Sets the stub of IXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#IVirtual#IsReal">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#Name">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Namespaces">
            <summary>Sets the stub of IXmlNode.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Parent">
            <summary>Sets the stub of IXmlNode.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Path">
            <summary>Sets the stub of IXmlNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#UnderlyingObject">
            <summary>Sets the stub of IXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Value">
            <summary>Sets the stub of IXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Xml">
            <summary>Sets the stub of IXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlCursor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#XsiType">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIdentity">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlIdentity</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIdentity.#ctor">
            <summary>Initializes a new instance of type StubIXmlIdentity</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIdentity.NameGet">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIdentity.XsiTypeGet">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIdentity.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#Name">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIdentity.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#XsiType">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedType">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedType.#ctor">
            <summary>Initializes a new instance of type StubIXmlIncludedType</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedType.ClrTypeGet">
            <summary>Sets the stub of IXmlIncludedType.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedType.XsiTypeGet">
            <summary>Sets the stub of IXmlIncludedType.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedType.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIncludedType#ClrType">
            <summary>Sets the stub of IXmlIncludedType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedType.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIncludedType#XsiType">
            <summary>Sets the stub of IXmlIncludedType.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.#ctor">
            <summary>Initializes a new instance of type StubIXmlIncludedTypeMap</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIncludedTypeMap#TryGet(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType@)">
            <summary>Sets the stub of IXmlIncludedTypeMap.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIncludedTypeMap#TryGet(Castle.Components.DictionaryAdapter.Xml.XmlName,Castle.Components.DictionaryAdapter.Xml.IXmlIncludedType@)">
            <summary>Sets the stub of IXmlIncludedTypeMap.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.DefaultGet">
            <summary>Sets the stub of IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.TryGetTypeIXmlIncludedTypeOut">
            <summary>Sets the stub of IXmlIncludedTypeMap.TryGet(Type clrType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.TryGetXmlNameIXmlIncludedTypeOut">
            <summary>Sets the stub of IXmlIncludedTypeMap.TryGet(XmlName xsiType, IXmlIncludedType&amp; includedType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIncludedTypeMap.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIncludedTypeMap#Default">
            <summary>Sets the stub of IXmlIncludedTypeMap.get_Default()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlIterator</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.#ctor">
            <summary>Initializes a new instance of type StubIXmlIterator</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets stubs of AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubIXmlIterator.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubIXmlIterator.Value as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#IVirtual#Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IRealizableSource#AsRealizable``1">
            <summary>Sets the stub of IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIterator#MoveNext">
            <summary>Sets the stub of IXmlIterator.MoveNext()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Clear">
            <summary>Sets the stub of IXmlNode.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#DefineNamespace(System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of IXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#GetAttribute(Castle.Components.DictionaryAdapter.Xml.XmlName)">
            <summary>Sets the stub of IXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#LookupNamespaceUri(System.String)">
            <summary>Sets the stub of IXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#LookupPrefix(System.String)">
            <summary>Sets the stub of IXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#ReadSubtree">
            <summary>Sets the stub of IXmlNode.ReadSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Save">
            <summary>Sets the stub of IXmlNode.Save()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Select(Castle.Components.DictionaryAdapter.Xml.CompiledXPath,Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Sets the stub of IXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectChildren(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Sets the stub of IXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectSelf(System.Type)">
            <summary>Sets the stub of IXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectSubtree">
            <summary>Sets the stub of IXmlNode.SelectSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SetAttribute(Castle.Components.DictionaryAdapter.Xml.XmlName,System.String)">
            <summary>Sets the stub of IXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#UnderlyingPositionEquals(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of IXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#WriteAttributes">
            <summary>Sets the stub of IXmlNode.WriteAttributes()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#WriteChildren">
            <summary>Sets the stub of IXmlNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.Clear">
            <summary>Sets the stub of IXmlNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.ClrTypeGet">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.DefineNamespaceStringStringBoolean">
            <summary>Sets the stub of IXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.EvaluateCompiledXPath">
            <summary>Sets the stub of IXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.GetAttributeXmlName">
            <summary>Sets the stub of IXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.IsAttributeGet">
            <summary>Sets the stub of IXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.IsElementGet">
            <summary>Sets the stub of IXmlNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.IsNilGet">
            <summary>Sets the stub of IXmlNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.IsNilSetBoolean">
            <summary>Sets the stub of IXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.IsRealGet">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.LookupNamespaceUriString">
            <summary>Sets the stub of IXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.LookupPrefixString">
            <summary>Sets the stub of IXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.MoveNext">
            <summary>Sets the stub of IXmlIterator.MoveNext()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.NameGet">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.NamespacesGet">
            <summary>Sets the stub of IXmlNode.get_Namespaces()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.ParentGet">
            <summary>Sets the stub of IXmlNode.get_Parent()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.PathGet">
            <summary>Sets the stub of IXmlNode.get_Path()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.ReadSubtree">
            <summary>Sets the stub of IXmlNode.ReadSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.Save">
            <summary>Sets the stub of IXmlNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the stub of IXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the stub of IXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.SelectSelfType">
            <summary>Sets the stub of IXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.SelectSubtree">
            <summary>Sets the stub of IXmlNode.SelectSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.SetAttributeXmlNameString">
            <summary>Sets the stub of IXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.UnderlyingObjectGet">
            <summary>Sets the stub of IXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the stub of IXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.ValueGet">
            <summary>Sets the stub of IXmlNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.ValueSetString">
            <summary>Sets the stub of IXmlNode.set_Value(String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.WriteAttributes">
            <summary>Sets the stub of IXmlNode.WriteAttributes()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.WriteChildren">
            <summary>Sets the stub of IXmlNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.XmlGet">
            <summary>Sets the stub of IXmlNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.XsiTypeGet">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownType#ClrType">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsAttribute">
            <summary>Sets the stub of IXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsElement">
            <summary>Sets the stub of IXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsNil">
            <summary>Sets the stub of IXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#IVirtual#IsReal">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#Name">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Namespaces">
            <summary>Sets the stub of IXmlNode.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Parent">
            <summary>Sets the stub of IXmlNode.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Path">
            <summary>Sets the stub of IXmlNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#UnderlyingObject">
            <summary>Sets the stub of IXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Value">
            <summary>Sets the stub of IXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Xml">
            <summary>Sets the stub of IXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlIterator.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#XsiType">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlKnownType</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.#ctor">
            <summary>Initializes a new instance of type StubIXmlKnownType</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.ClrTypeGet">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.NameGet">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.XsiTypeGet">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownType#ClrType">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#Name">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownType.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#XsiType">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.#ctor">
            <summary>Initializes a new instance of type StubIXmlKnownTypeMap</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownTypeMap#TryGet(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity,Castle.Components.DictionaryAdapter.Xml.IXmlKnownType@)">
            <summary>Sets the stub of IXmlKnownTypeMap.TryGet(IXmlIdentity xmlNode, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownTypeMap#TryGet(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlKnownType@)">
            <summary>Sets the stub of IXmlKnownTypeMap.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.DefaultGet">
            <summary>Sets the stub of IXmlKnownTypeMap.get_Default()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.TryGetIXmlIdentityIXmlKnownTypeOut">
            <summary>Sets the stub of IXmlKnownTypeMap.TryGet(IXmlIdentity xmlNode, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.TryGetTypeIXmlKnownTypeOut">
            <summary>Sets the stub of IXmlKnownTypeMap.TryGet(Type clrType, IXmlKnownType&amp; knownType)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlKnownTypeMap.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownTypeMap#Default">
            <summary>Sets the stub of IXmlKnownTypeMap.get_Default()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNamespaceSource">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNamespaceSource.#ctor">
            <summary>Initializes a new instance of type StubIXmlNamespaceSource</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNamespaceSource.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNamespaceSource#GetAttributePrefix(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.String)">
            <summary>Sets the stub of IXmlNamespaceSource.GetAttributePrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNamespaceSource.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNamespaceSource#GetElementPrefix(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.String)">
            <summary>Sets the stub of IXmlNamespaceSource.GetElementPrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNamespaceSource.GetAttributePrefixIXmlNodeString">
            <summary>Sets the stub of IXmlNamespaceSource.GetAttributePrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNamespaceSource.GetElementPrefixIXmlNodeString">
            <summary>Sets the stub of IXmlNamespaceSource.GetElementPrefix(IXmlNode node, String namespaceUri)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.#ctor">
            <summary>Initializes a new instance of type StubIXmlNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.AsRealizableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.Components.DictionaryAdapter.Xml.IRealizable{``0}})">
            <summary>Sets stubs of AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubIXmlNode.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubIXmlNode.Value as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#IVirtual#Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IRealizableSource#AsRealizable``1">
            <summary>Sets the stub of IRealizableSource.AsRealizable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Clear">
            <summary>Sets the stub of IXmlNode.Clear()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#DefineNamespace(System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of IXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#GetAttribute(Castle.Components.DictionaryAdapter.Xml.XmlName)">
            <summary>Sets the stub of IXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#LookupNamespaceUri(System.String)">
            <summary>Sets the stub of IXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#LookupPrefix(System.String)">
            <summary>Sets the stub of IXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#ReadSubtree">
            <summary>Sets the stub of IXmlNode.ReadSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Save">
            <summary>Sets the stub of IXmlNode.Save()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Select(Castle.Components.DictionaryAdapter.Xml.CompiledXPath,Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Sets the stub of IXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectChildren(Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Sets the stub of IXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectSelf(System.Type)">
            <summary>Sets the stub of IXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SelectSubtree">
            <summary>Sets the stub of IXmlNode.SelectSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#SetAttribute(Castle.Components.DictionaryAdapter.Xml.XmlName,System.String)">
            <summary>Sets the stub of IXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#UnderlyingPositionEquals(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of IXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#WriteAttributes">
            <summary>Sets the stub of IXmlNode.WriteAttributes()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#WriteChildren">
            <summary>Sets the stub of IXmlNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.Clear">
            <summary>Sets the stub of IXmlNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.ClrTypeGet">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.DefineNamespaceStringStringBoolean">
            <summary>Sets the stub of IXmlNode.DefineNamespace(String prefix, String namespaceUri, Boolean root)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.EvaluateCompiledXPath">
            <summary>Sets the stub of IXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.GetAttributeXmlName">
            <summary>Sets the stub of IXmlNode.GetAttribute(XmlName name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.IsAttributeGet">
            <summary>Sets the stub of IXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.IsElementGet">
            <summary>Sets the stub of IXmlNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.IsNilGet">
            <summary>Sets the stub of IXmlNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.IsNilSetBoolean">
            <summary>Sets the stub of IXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.IsRealGet">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.LookupNamespaceUriString">
            <summary>Sets the stub of IXmlNode.LookupNamespaceUri(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.LookupPrefixString">
            <summary>Sets the stub of IXmlNode.LookupPrefix(String namespaceUri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.NameGet">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.NamespacesGet">
            <summary>Sets the stub of IXmlNode.get_Namespaces()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.ParentGet">
            <summary>Sets the stub of IXmlNode.get_Parent()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.PathGet">
            <summary>Sets the stub of IXmlNode.get_Path()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.ReadSubtree">
            <summary>Sets the stub of IXmlNode.ReadSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.Realize">
            <summary>Sets the stub of IVirtual.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.Save">
            <summary>Sets the stub of IXmlNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.SelectChildrenIXmlKnownTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the stub of IXmlNode.SelectChildren(IXmlKnownTypeMap knownTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.SelectCompiledXPathIXmlIncludedTypeMapIXmlNamespaceSourceCursorFlags">
            <summary>Sets the stub of IXmlNode.Select(CompiledXPath path, IXmlIncludedTypeMap includedTypes, IXmlNamespaceSource namespaces, CursorFlags flags)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.SelectSelfType">
            <summary>Sets the stub of IXmlNode.SelectSelf(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.SelectSubtree">
            <summary>Sets the stub of IXmlNode.SelectSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.SetAttributeXmlNameString">
            <summary>Sets the stub of IXmlNode.SetAttribute(XmlName name, String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.UnderlyingObjectGet">
            <summary>Sets the stub of IXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.UnderlyingPositionEqualsIXmlNode">
            <summary>Sets the stub of IXmlNode.UnderlyingPositionEquals(IXmlNode node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.ValueGet">
            <summary>Sets the stub of IXmlNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.ValueSetString">
            <summary>Sets the stub of IXmlNode.set_Value(String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.WriteAttributes">
            <summary>Sets the stub of IXmlNode.WriteAttributes()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.WriteChildren">
            <summary>Sets the stub of IXmlNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.XmlGet">
            <summary>Sets the stub of IXmlNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.XsiTypeGet">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlKnownType#ClrType">
            <summary>Sets the stub of IXmlKnownType.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsAttribute">
            <summary>Sets the stub of IXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsElement">
            <summary>Sets the stub of IXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#IsNil">
            <summary>Sets the stub of IXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#IVirtual#IsReal">
            <summary>Sets the stub of IVirtual.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#Name">
            <summary>Sets the stub of IXmlIdentity.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Namespaces">
            <summary>Sets the stub of IXmlNode.get_Namespaces()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Parent">
            <summary>Sets the stub of IXmlNode.get_Parent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Path">
            <summary>Sets the stub of IXmlNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#UnderlyingObject">
            <summary>Sets the stub of IXmlNode.get_UnderlyingObject()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Value">
            <summary>Sets the stub of IXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNode#Xml">
            <summary>Sets the stub of IXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNode.cc::Castle#Components#DictionaryAdapter#Xml#IXmlIdentity#XsiType">
            <summary>Sets the stub of IXmlIdentity.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNodeSource">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlNodeSource</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNodeSource.#ctor">
            <summary>Initializes a new instance of type StubIXmlNodeSource</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNodeSource.NodeGet">
            <summary>Sets the stub of IXmlNodeSource.get_Node()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlNodeSource.cc::Castle#Components#DictionaryAdapter#Xml#IXmlNodeSource#Node">
            <summary>Sets the stub of IXmlNodeSource.get_Node()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlPropertyAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.#ctor">
            <summary>Initializes a new instance of type StubIXmlPropertyAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of IXmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Boolean)">
            <summary>Sets the stub of IXmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of IXmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlPropertyAccessor#GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of IXmlPropertyAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlPropertyAccessor#SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of IXmlPropertyAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.ClrTypeGet">
            <summary>Sets the stub of IXmlAccessor.get_ClrType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.ContextGet">
            <summary>Sets the stub of IXmlAccessor.get_Context()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of IXmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of IXmlPropertyAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.GetValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBooleanBoolean">
            <summary>Sets the stub of IXmlAccessor.GetValue(IXmlNode node, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean nodeExists, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.IsNillableGet">
            <summary>Sets the stub of IXmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.IsReferenceGet">
            <summary>Sets the stub of IXmlAccessor.get_IsReference()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.SerializerGet">
            <summary>Sets the stub of IXmlAccessor.get_Serializer()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of IXmlPropertyAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of IXmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#ClrType">
            <summary>Sets the stub of IXmlAccessor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#Context">
            <summary>Sets the stub of IXmlAccessor.get_Context()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#IsNillable">
            <summary>Sets the stub of IXmlAccessor.get_IsNillable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#IsReference">
            <summary>Sets the stub of IXmlAccessor.get_IsReference()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlPropertyAccessor.cc::Castle#Components#DictionaryAdapter#Xml#IXmlAccessor#Serializer">
            <summary>Sets the stub of IXmlAccessor.get_Serializer()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.IXmlReferenceFormat</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.#ctor">
            <summary>Initializes a new instance of type StubIXmlReferenceFormat</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.cc::Castle#Components#DictionaryAdapter#Xml#IXmlReferenceFormat#ClearIdentity(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of IXmlReferenceFormat.ClearIdentity(IXmlNode node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.cc::Castle#Components#DictionaryAdapter#Xml#IXmlReferenceFormat#ClearReference(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of IXmlReferenceFormat.ClearReference(IXmlNode node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.cc::Castle#Components#DictionaryAdapter#Xml#IXmlReferenceFormat#SetIdentity(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Int32)">
            <summary>Sets the stub of IXmlReferenceFormat.SetIdentity(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.cc::Castle#Components#DictionaryAdapter#Xml#IXmlReferenceFormat#SetReference(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Int32)">
            <summary>Sets the stub of IXmlReferenceFormat.SetReference(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.cc::Castle#Components#DictionaryAdapter#Xml#IXmlReferenceFormat#TryGetIdentity(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Int32@)">
            <summary>Sets the stub of IXmlReferenceFormat.TryGetIdentity(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.cc::Castle#Components#DictionaryAdapter#Xml#IXmlReferenceFormat#TryGetReference(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Int32@)">
            <summary>Sets the stub of IXmlReferenceFormat.TryGetReference(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.ClearIdentityIXmlNode">
            <summary>Sets the stub of IXmlReferenceFormat.ClearIdentity(IXmlNode node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.ClearReferenceIXmlNode">
            <summary>Sets the stub of IXmlReferenceFormat.ClearReference(IXmlNode node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.SetIdentityIXmlNodeInt32">
            <summary>Sets the stub of IXmlReferenceFormat.SetIdentity(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.SetReferenceIXmlNodeInt32">
            <summary>Sets the stub of IXmlReferenceFormat.SetReference(IXmlNode node, Int32 id)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.TryGetIdentityIXmlNodeInt32Out">
            <summary>Sets the stub of IXmlReferenceFormat.TryGetIdentity(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubIXmlReferenceFormat.TryGetReferenceIXmlNodeInt32Out">
            <summary>Sets the stub of IXmlReferenceFormat.TryGetReference(IXmlNode node, Int32&amp; id)</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSingletonDispenser`2">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.SingletonDispenser`2</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSingletonDispenser`2.#ctor(System.Func{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSingletonDispenser`2.InitializeStub">
            <summary>Initializes a new instance of type StubSingletonDispenser</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSingletonDispenser`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSingletonDispenser`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSingletonDispenser`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.SysXmlCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.Xml.IXmlKnownTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.AdvanceToFirstAttribute">
            <summary>Sets the stub of SysXmlCursor.AdvanceToFirstAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.AdvanceToFirstAttribute01">
            <summary>Sets the stub of SysXmlCursor.AdvanceToFirstAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.AdvanceToFirstElement">
            <summary>Sets the stub of SysXmlCursor.AdvanceToFirstElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.AdvanceToFirstElement01">
            <summary>Sets the stub of SysXmlCursor.AdvanceToFirstElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubSysXmlCursor.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubSysXmlCursor.Value as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.ClrTypeGet">
            <summary>Sets the stub of SysXmlCursor.get_ClrType()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of SysXmlCursor.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.EvaluateCompiledXPath">
            <summary>Sets the stub of SysXmlCursor.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.InitializeStub">
            <summary>Initializes a new instance of type StubSysXmlCursor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsAttributeGet">
            <summary>Sets the stub of SysXmlCursor.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsElementGet">
            <summary>Sets the stub of SysXmlCursor.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsNilGet">
            <summary>Sets the stub of SysXmlCursor.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsNilSetBoolean">
            <summary>Sets the stub of SysXmlCursor.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsRealGet">
            <summary>Sets the stub of SysXmlCursor.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.NameGet">
            <summary>Sets the stub of SysXmlCursor.get_Name()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.OnRealized">
            <summary>Sets the stub of SysXmlCursor.OnRealized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.OnRealized01">
            <summary>Sets the stub of SysXmlCursor.OnRealized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.PathGet">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Realize">
            <summary>Sets the stub of SysXmlCursor.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Realize01">
            <summary>Sets the stub of SysXmlCursor.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Save">
            <summary>Sets the stub of SysXmlCursor.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Save01">
            <summary>Sets the stub of SysXmlCursor.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.ValueGet">
            <summary>Sets the stub of SysXmlCursor.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.ValueSetString">
            <summary>Sets the stub of SysXmlCursor.set_Value(String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.XmlGet">
            <summary>Sets the stub of SysXmlCursor.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.XsiTypeGet">
            <summary>Sets the stub of SysXmlCursor.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.ClrType">
            <summary>Sets the stub of SysXmlCursor.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsAttribute">
            <summary>Sets the stub of SysXmlCursor.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsElement">
            <summary>Sets the stub of SysXmlCursor.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsNil">
            <summary>Sets the stub of SysXmlCursor.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.IsReal">
            <summary>Sets the stub of SysXmlCursor.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Name">
            <summary>Sets the stub of SysXmlCursor.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Path">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Value">
            <summary>Sets the stub of SysXmlCursor.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.Xml">
            <summary>Sets the stub of SysXmlCursor.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlCursor.XsiType">
            <summary>Sets the stub of SysXmlCursor.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.SysXmlNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.#ctor(System.Xml.XmlNode,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubSysXmlNode.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubSysXmlNode.Value as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.ClrTypeGet">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of SysXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.EvaluateCompiledXPath">
            <summary>Sets the stub of SysXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.InitializeStub">
            <summary>Initializes a new instance of type StubSysXmlNode</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsAttributeGet">
            <summary>Sets the stub of SysXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsElementGet">
            <summary>Sets the stub of SysXmlNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsNilGet">
            <summary>Sets the stub of SysXmlNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsNilSetBoolean">
            <summary>Sets the stub of SysXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsRealGet">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.NameGet">
            <summary>Sets the stub of SysXmlNode.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.PathGet">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Realize">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Realize01">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Save">
            <summary>Sets the stub of SysXmlNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Save01">
            <summary>Sets the stub of SysXmlNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.ValueGet">
            <summary>Sets the stub of SysXmlNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.ValueSetString">
            <summary>Sets the stub of SysXmlNode.set_Value(String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.XmlGet">
            <summary>Sets the stub of SysXmlNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.XsiTypeGet">
            <summary>Sets the stub of SysXmlNode.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.ClrType">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsAttribute">
            <summary>Sets the stub of SysXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsElement">
            <summary>Sets the stub of SysXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsNil">
            <summary>Sets the stub of SysXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.IsReal">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Name">
            <summary>Sets the stub of SysXmlNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Path">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Value">
            <summary>Sets the stub of SysXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.Xml">
            <summary>Sets the stub of SysXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlNode.XsiType">
            <summary>Sets the stub of SysXmlNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.SysXmlSubtreeIterator</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubSysXmlSubtreeIterator.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubSysXmlSubtreeIterator.Value as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.ClrTypeGet">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of SysXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.EvaluateCompiledXPath">
            <summary>Sets the stub of SysXmlNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.InitializeStub">
            <summary>Initializes a new instance of type StubSysXmlSubtreeIterator</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsAttributeGet">
            <summary>Sets the stub of SysXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsElementGet">
            <summary>Sets the stub of SysXmlNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsNilGet">
            <summary>Sets the stub of SysXmlNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsNilSetBoolean">
            <summary>Sets the stub of SysXmlNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsRealGet">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.NameGet">
            <summary>Sets the stub of SysXmlNode.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.PathGet">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Realize">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Realize01">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Save">
            <summary>Sets the stub of SysXmlSubtreeIterator.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Save01">
            <summary>Sets the stub of SysXmlSubtreeIterator.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.ValueGet">
            <summary>Sets the stub of SysXmlNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.ValueSetString">
            <summary>Sets the stub of SysXmlNode.set_Value(String value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.XmlGet">
            <summary>Sets the stub of SysXmlNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.XsiTypeGet">
            <summary>Sets the stub of SysXmlNode.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.ClrType">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsAttribute">
            <summary>Sets the stub of SysXmlNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsElement">
            <summary>Sets the stub of SysXmlNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsNil">
            <summary>Sets the stub of SysXmlNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.IsReal">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Name">
            <summary>Sets the stub of SysXmlNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Path">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Value">
            <summary>Sets the stub of SysXmlNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.Xml">
            <summary>Sets the stub of SysXmlNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubSysXmlSubtreeIterator.XsiType">
            <summary>Sets the stub of SysXmlNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XPathAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubXPathAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XPathBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.#ctor(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XPathBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XPathBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XPathBehaviorAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XPathBehaviorAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXPathBehaviorAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XPathBehaviorAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XPathBehaviorAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.Prepare">
            <summary>Sets the stub of XPathBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.Prepare01">
            <summary>Sets the stub of XPathBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XPathBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XPathBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XPathBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XPathBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XPathBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XPathBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean create)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XPathBehaviorAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XPathBehaviorAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathBehaviorAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XPathFunctionAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.ArgTypesGet">
            <summary>Sets the stub of XPathFunctionAttribute.get_ArgTypes()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubXPathFunctionAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
            <summary>Sets the stub of XPathFunctionAttribute.Invoke(XsltContext context, Object[] args, XPathNavigator node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.InvokeXsltContextObjectArrayXPathNavigator">
            <summary>Sets the stub of XPathFunctionAttribute.Invoke(XsltContext context, Object[] args, XPathNavigator node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.MaxargsGet">
            <summary>Sets the stub of XPathFunctionAttribute.get_Maxargs()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.MinargsGet">
            <summary>Sets the stub of XPathFunctionAttribute.get_Minargs()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.NameGet">
            <summary>Sets the stub of XPathFunctionAttribute.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.ReturnTypeGet">
            <summary>Sets the stub of XPathFunctionAttribute.get_ReturnType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.ArgTypes">
            <summary>Sets the stub of XPathFunctionAttribute.get_ArgTypes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.Maxargs">
            <summary>Sets the stub of XPathFunctionAttribute.get_Maxargs()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.Minargs">
            <summary>Sets the stub of XPathFunctionAttribute.get_Minargs()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.Name">
            <summary>Sets the stub of XPathFunctionAttribute.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.ReturnType">
            <summary>Sets the stub of XPathFunctionAttribute.get_ReturnType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathFunctionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XPathNode</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.#ctor(Castle.Components.DictionaryAdapter.Xml.CompiledXPath,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.#ctor(System.Xml.XPath.XPathNavigator,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubXPathNode.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubXPathNode.Value as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Clear">
            <summary>Sets the stub of XPathNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Clear01">
            <summary>Sets the stub of XPathNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.ClrTypeGet">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of XPathNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.EvaluateCompiledXPath">
            <summary>Sets the stub of XPathNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.InitializeStub">
            <summary>Initializes a new instance of type StubXPathNode</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsAttributeGet">
            <summary>Sets the stub of XPathNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsElementGet">
            <summary>Sets the stub of XPathNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsNilGet">
            <summary>Sets the stub of XPathNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsNilSetBoolean">
            <summary>Sets the stub of XPathNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsRealGet">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.NameGet">
            <summary>Sets the stub of XPathNode.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.PathGet">
            <summary>Sets the stub of XPathNode.get_Path()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.ReadSubtree">
            <summary>Sets the stub of XPathNode.ReadSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.ReadSubtree01">
            <summary>Sets the stub of XPathNode.ReadSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Realize">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Realize01">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Save">
            <summary>Sets the stub of XPathNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Save01">
            <summary>Sets the stub of XPathNode.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.ValueGet">
            <summary>Sets the stub of XPathNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.ValueSetString">
            <summary>Sets the stub of XPathNode.set_Value(String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.WriteAttributes">
            <summary>Sets the stub of XPathNode.WriteAttributes()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.WriteAttributes01">
            <summary>Sets the stub of XPathNode.WriteAttributes()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.WriteChildren">
            <summary>Sets the stub of XPathNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.WriteChildren01">
            <summary>Sets the stub of XPathNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.XmlGet">
            <summary>Sets the stub of XPathNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.XsiTypeGet">
            <summary>Sets the stub of XPathNode.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.ClrType">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsAttribute">
            <summary>Sets the stub of XPathNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsElement">
            <summary>Sets the stub of XPathNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsNil">
            <summary>Sets the stub of XPathNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.IsReal">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Name">
            <summary>Sets the stub of XPathNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Path">
            <summary>Sets the stub of XPathNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Value">
            <summary>Sets the stub of XPathNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.Xml">
            <summary>Sets the stub of XPathNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathNode.XsiType">
            <summary>Sets the stub of XPathNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XPathReadOnlyCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.Xml.CompiledXPath,Castle.Components.DictionaryAdapter.Xml.IXmlIncludedTypeMap,Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.CursorFlags)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.AttachBackingFieldToIsNil">
            <summary>Attaches delegates to emulate StubXPathReadOnlyCursor.IsNil as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubXPathReadOnlyCursor.Value as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Clear">
            <summary>Sets the stub of XPathNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Clear01">
            <summary>Sets the stub of XPathNode.Clear()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.ClrTypeGet">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Evaluate(Castle.Components.DictionaryAdapter.Xml.CompiledXPath)">
            <summary>Sets the stub of XPathNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.EvaluateCompiledXPath">
            <summary>Sets the stub of XPathNode.Evaluate(CompiledXPath path)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.InitializeStub">
            <summary>Initializes a new instance of type StubXPathReadOnlyCursor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsAttributeGet">
            <summary>Sets the stub of XPathNode.get_IsAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsElementGet">
            <summary>Sets the stub of XPathNode.get_IsElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsNilGet">
            <summary>Sets the stub of XPathNode.get_IsNil()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsNilSetBoolean">
            <summary>Sets the stub of XPathNode.set_IsNil(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsRealGet">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.NameGet">
            <summary>Sets the stub of XPathNode.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.PathGet">
            <summary>Sets the stub of XPathNode.get_Path()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.ReadSubtree">
            <summary>Sets the stub of XPathNode.ReadSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.ReadSubtree01">
            <summary>Sets the stub of XPathNode.ReadSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Realize">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Realize01">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Save">
            <summary>Sets the stub of XPathReadOnlyCursor.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Save01">
            <summary>Sets the stub of XPathReadOnlyCursor.Save()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.ValueGet">
            <summary>Sets the stub of XPathNode.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.ValueSetString">
            <summary>Sets the stub of XPathNode.set_Value(String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.WriteAttributes">
            <summary>Sets the stub of XPathNode.WriteAttributes()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.WriteAttributes01">
            <summary>Sets the stub of XPathNode.WriteAttributes()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.WriteChildren">
            <summary>Sets the stub of XPathNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.WriteChildren01">
            <summary>Sets the stub of XPathNode.WriteChildren()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.XmlGet">
            <summary>Sets the stub of XPathNode.get_Xml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.XsiTypeGet">
            <summary>Sets the stub of XPathNode.get_XsiType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.ClrType">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsAttribute">
            <summary>Sets the stub of XPathNode.get_IsAttribute()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsElement">
            <summary>Sets the stub of XPathNode.get_IsElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsNil">
            <summary>Sets the stub of XPathNode.get_IsNil()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.IsReal">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Name">
            <summary>Sets the stub of XPathNode.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Path">
            <summary>Sets the stub of XPathNode.get_Path()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Value">
            <summary>Sets the stub of XPathNode.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.Xml">
            <summary>Sets the stub of XPathNode.get_Xml()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathReadOnlyCursor.XsiType">
            <summary>Sets the stub of XPathNode.get_XsiType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XPathVariableAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.Evaluate(System.Xml.Xsl.XsltContext)">
            <summary>Sets the stub of XPathVariableAttribute.Evaluate(XsltContext context)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.EvaluateXsltContext">
            <summary>Sets the stub of XPathVariableAttribute.Evaluate(XsltContext context)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubXPathVariableAttribute</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.NameGet">
            <summary>Sets the stub of XPathVariableAttribute.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.VariableTypeGet">
            <summary>Sets the stub of XPathVariableAttribute.get_VariableType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.Name">
            <summary>Sets the stub of XPathVariableAttribute.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXPathVariableAttribute.VariableType">
            <summary>Sets the stub of XPathVariableAttribute.get_VariableType()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.#ctor(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.Prepare">
            <summary>Sets the stub of XmlAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.Prepare01">
            <summary>Sets the stub of XmlAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.#ctor(System.Xml.XmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.Copy">
            <summary>Sets the stub of XmlAdapter.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.Copy01">
            <summary>Sets the stub of XmlAdapter.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubXmlAdapter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.OnRealized">
            <summary>Sets the stub of XmlAdapter.OnRealized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.OnRealized01">
            <summary>Sets the stub of XmlAdapter.OnRealized()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAdapter.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlArrayBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.#ctor(System.String,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlArrayBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlArrayBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlArrayBehaviorAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsMatch(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsMatch(System.Type)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsMatchIXmlIdentity">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsMatchType">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.Prepare">
            <summary>Sets the stub of XmlArrayBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.Prepare01">
            <summary>Sets the stub of XmlArrayBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlArrayBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlArrayBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArrayBehaviorAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlArraySerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.CanGetStubGet">
            <summary>Sets the stub of XmlArraySerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlArraySerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlArraySerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlArraySerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlArraySerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlArraySerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.KindGet">
            <summary>Sets the stub of XmlArraySerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlArraySerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlArraySerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.CanGetStub">
            <summary>Sets the stub of XmlArraySerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlArraySerializer.Kind">
            <summary>Sets the stub of XmlArraySerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlAttributeBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.#ctor(System.String,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlAttributeBehaviorAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsMatch(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsMatch(System.Type)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsMatchIXmlIdentity">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsMatchType">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.Prepare">
            <summary>Sets the stub of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.Prepare01">
            <summary>Sets the stub of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAttributeBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlAttributeBehaviorAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlCollectionSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlCollectionSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.KindGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.ListTypeConstructorGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.CanGetStub">
            <summary>Sets the stub of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.Kind">
            <summary>Sets the stub of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlCollectionSerializer.ListTypeConstructor">
            <summary>Sets the stub of XmlCollectionSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlComponentSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlComponentSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlComponentSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlComponentSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlComponentSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlComponentSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlComponentSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.KindGet">
            <summary>Sets the stub of XmlComponentSerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlComponentSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlComponentSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.CanGetStub">
            <summary>Sets the stub of XmlComponentSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlComponentSerializer.Kind">
            <summary>Sets the stub of XmlComponentSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlContext</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlMetadata)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.AddNamespace(System.String,System.String)">
            <summary>Sets the stub of XmlContextBase.AddNamespace(String prefix, String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.AddNamespaceStringString">
            <summary>Sets the stub of XmlContextBase.AddNamespace(String prefix, String uri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.CompareDocument(System.String,System.String)">
            <summary>Sets the stub of XmlContextBase.CompareDocument(String baseUriA, String baseUriB)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.CompareDocumentStringString">
            <summary>Sets the stub of XmlContextBase.CompareDocument(String baseUriA, String baseUriB)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.DefaultNamespaceGet">
            <summary>Sets the stub of XmlNamespaceManager.get_DefaultNamespace()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.GetEnumerator">
            <summary>Sets the stub of XmlNamespaceManager.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.GetEnumerator01">
            <summary>Sets the stub of XmlNamespaceManager.GetEnumerator()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>Sets the stub of XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.GetNamespacesInScopeXmlNamespaceScope">
            <summary>Sets the stub of XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.HasNamespace(System.String)">
            <summary>Sets the stub of XmlNamespaceManager.HasNamespace(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.HasNamespaceString">
            <summary>Sets the stub of XmlNamespaceManager.HasNamespace(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.InitializeStub">
            <summary>Initializes a new instance of type StubXmlContext</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.LookupNamespace(System.String)">
            <summary>Sets the stub of XmlContextBase.LookupNamespace(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.LookupNamespaceString">
            <summary>Sets the stub of XmlContextBase.LookupNamespace(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.LookupPrefix(System.String)">
            <summary>Sets the stub of XmlContextBase.LookupPrefix(String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.LookupPrefixString">
            <summary>Sets the stub of XmlContextBase.LookupPrefix(String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.NameTableGet">
            <summary>Sets the stub of XmlNamespaceManager.get_NameTable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.PopScope">
            <summary>Sets the stub of XmlNamespaceManager.PopScope()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.PopScope01">
            <summary>Sets the stub of XmlNamespaceManager.PopScope()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
            <summary>Sets the stub of XmlContextBase.PreserveWhitespace(XPathNavigator node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.PreserveWhitespaceXPathNavigator">
            <summary>Sets the stub of XmlContextBase.PreserveWhitespace(XPathNavigator node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.PushScope">
            <summary>Sets the stub of XmlNamespaceManager.PushScope()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.PushScope01">
            <summary>Sets the stub of XmlNamespaceManager.PushScope()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.RemoveNamespace(System.String,System.String)">
            <summary>Sets the stub of XmlNamespaceManager.RemoveNamespace(String prefix, String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.RemoveNamespaceStringString">
            <summary>Sets the stub of XmlNamespaceManager.RemoveNamespace(String prefix, String uri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
            <summary>Sets the stub of XmlContextBase.ResolveFunction(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.ResolveFunctionStringStringXPathResultTypeArray">
            <summary>Sets the stub of XmlContextBase.ResolveFunction(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.ResolveVariable(System.String,System.String)">
            <summary>Sets the stub of XmlContextBase.ResolveVariable(String prefix, String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.ResolveVariableStringString">
            <summary>Sets the stub of XmlContextBase.ResolveVariable(String prefix, String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.WhitespaceGet">
            <summary>Sets the stub of XmlContextBase.get_Whitespace()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.DefaultNamespace">
            <summary>Sets the stub of XmlNamespaceManager.get_DefaultNamespace()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.NameTable">
            <summary>Sets the stub of XmlNamespaceManager.get_NameTable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContext.Whitespace">
            <summary>Sets the stub of XmlContextBase.get_Whitespace()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlContextBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlContextBase)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.AddNamespace(System.String,System.String)">
            <summary>Sets the stub of XmlContextBase.AddNamespace(String prefix, String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.AddNamespaceStringString">
            <summary>Sets the stub of XmlContextBase.AddNamespace(String prefix, String uri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.CompareDocument(System.String,System.String)">
            <summary>Sets the stub of XmlContextBase.CompareDocument(String baseUriA, String baseUriB)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.CompareDocumentStringString">
            <summary>Sets the stub of XmlContextBase.CompareDocument(String baseUriA, String baseUriB)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.DefaultNamespaceGet">
            <summary>Sets the stub of XmlNamespaceManager.get_DefaultNamespace()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.GetEnumerator">
            <summary>Sets the stub of XmlNamespaceManager.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.GetEnumerator01">
            <summary>Sets the stub of XmlNamespaceManager.GetEnumerator()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>Sets the stub of XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.GetNamespacesInScopeXmlNamespaceScope">
            <summary>Sets the stub of XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope scope)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.HasNamespace(System.String)">
            <summary>Sets the stub of XmlNamespaceManager.HasNamespace(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.HasNamespaceString">
            <summary>Sets the stub of XmlNamespaceManager.HasNamespace(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.InitializeStub">
            <summary>Initializes a new instance of type StubXmlContextBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.LookupNamespace(System.String)">
            <summary>Sets the stub of XmlContextBase.LookupNamespace(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.LookupNamespaceString">
            <summary>Sets the stub of XmlContextBase.LookupNamespace(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.LookupPrefix(System.String)">
            <summary>Sets the stub of XmlContextBase.LookupPrefix(String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.LookupPrefixString">
            <summary>Sets the stub of XmlContextBase.LookupPrefix(String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.NameTableGet">
            <summary>Sets the stub of XmlNamespaceManager.get_NameTable()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.PopScope">
            <summary>Sets the stub of XmlNamespaceManager.PopScope()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.PopScope01">
            <summary>Sets the stub of XmlNamespaceManager.PopScope()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
            <summary>Sets the stub of XmlContextBase.PreserveWhitespace(XPathNavigator node)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.PreserveWhitespaceXPathNavigator">
            <summary>Sets the stub of XmlContextBase.PreserveWhitespace(XPathNavigator node)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.PushScope">
            <summary>Sets the stub of XmlNamespaceManager.PushScope()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.PushScope01">
            <summary>Sets the stub of XmlNamespaceManager.PushScope()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.RemoveNamespace(System.String,System.String)">
            <summary>Sets the stub of XmlNamespaceManager.RemoveNamespace(String prefix, String uri)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.RemoveNamespaceStringString">
            <summary>Sets the stub of XmlNamespaceManager.RemoveNamespace(String prefix, String uri)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
            <summary>Sets the stub of XmlContextBase.ResolveFunction(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.ResolveFunctionStringStringXPathResultTypeArray">
            <summary>Sets the stub of XmlContextBase.ResolveFunction(String prefix, String name, XPathResultType[] argTypes)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.ResolveVariable(System.String,System.String)">
            <summary>Sets the stub of XmlContextBase.ResolveVariable(String prefix, String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.ResolveVariableStringString">
            <summary>Sets the stub of XmlContextBase.ResolveVariable(String prefix, String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.WhitespaceGet">
            <summary>Sets the stub of XmlContextBase.get_Whitespace()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.DefaultNamespace">
            <summary>Sets the stub of XmlNamespaceManager.get_DefaultNamespace()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.NameTable">
            <summary>Sets the stub of XmlNamespaceManager.get_NameTable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlContextBase.Whitespace">
            <summary>Sets the stub of XmlContextBase.get_Whitespace()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlDefaultBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.#ctor(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.#ctor(System.String,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDefaultBehaviorAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsMatch(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsMatch(System.Type)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsMatchIXmlIdentity">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsMatchType">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.Prepare">
            <summary>Sets the stub of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.Prepare01">
            <summary>Sets the stub of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlDefaultBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlDefaultBehaviorAccessor.SelectCollectionItems(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlDefaultBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlDefaultBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlDefaultBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlDefaultBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultBehaviorAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlDefaultSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlDefaultSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlDefaultSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDefaultSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.KindGet">
            <summary>Sets the stub of XmlDefaultSerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlDefaultSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlDefaultSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.CanGetStub">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDefaultSerializer.Kind">
            <summary>Sets the stub of XmlDefaultSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlDynamicSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlDynamicSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlDynamicSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDynamicSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.KindGet">
            <summary>Sets the stub of XmlDynamicSerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlDynamicSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlDynamicSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.CanGetStub">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlDynamicSerializer.Kind">
            <summary>Sets the stub of XmlDynamicSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlElementBehaviorAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.#ctor(System.String,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlElementBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlElementBehaviorAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlElementBehaviorAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsMatch(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsMatch(System.Type)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsMatchIXmlIdentity">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsMatchType">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.Prepare">
            <summary>Sets the stub of XmlElementBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.Prepare01">
            <summary>Sets the stub of XmlElementBehaviorAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlElementBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlElementBehaviorAccessor.SelectCollectionNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlElementBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlElementBehaviorAccessor.SelectPropertyNode(IXmlNode node, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlElementBehaviorAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlElementBehaviorAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlElementBehaviorAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlEnumerationSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlEnumerationSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlEnumerationSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlEnumerationSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.KindGet">
            <summary>Sets the stub of XmlEnumerationSerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlStringSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlStringSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.CanGetStub">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlEnumerationSerializer.Kind">
            <summary>Sets the stub of XmlEnumerationSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlIncludedType</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlName,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType.#ctor(System.String,System.String,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType.InitializeStub">
            <summary>Initializes a new instance of type StubXmlIncludedType</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedTypeSet">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlIncludedTypeSet</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedTypeSet.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedTypeSet.InitializeStub">
            <summary>Initializes a new instance of type StubXmlIncludedTypeSet</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedTypeSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedTypeSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlIncludedTypeSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlKnownType</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType.#ctor(Castle.Components.DictionaryAdapter.Xml.XmlName,Castle.Components.DictionaryAdapter.Xml.XmlName,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType.#ctor(System.String,System.String,System.String,System.String,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType.InitializeStub">
            <summary>Initializes a new instance of type StubXmlKnownType</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownTypeSet">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlKnownTypeSet</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownTypeSet.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownTypeSet.InitializeStub">
            <summary>Initializes a new instance of type StubXmlKnownTypeSet</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownTypeSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownTypeSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlKnownTypeSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlListSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlListSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.KindGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.ListTypeConstructorGet">
            <summary>Sets the stub of XmlListSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.CanGetStub">
            <summary>Sets the stub of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.Kind">
            <summary>Sets the stub of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlListSerializer.ListTypeConstructor">
            <summary>Sets the stub of XmlListSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadata">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlMetadata</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadata.#ctor(Castle.Components.DictionaryAdapter.DictionaryAdapterMeta,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadata.InitializeStub">
            <summary>Initializes a new instance of type StubXmlMetadata</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadata.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadata.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadata.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlMetadataBehavior</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.Copy">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.Copy01">
            <summary>Sets the stub of DictionaryBehaviorAttribute.Copy()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.InitializeStub">
            <summary>Initializes a new instance of type StubXmlMetadataBehavior</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlMetadataBehavior.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlNodeAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.#ctor(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.#ctor(System.String,System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlNodeAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsMatch(Castle.Components.DictionaryAdapter.Xml.IXmlIdentity)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsMatch(System.Type)">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsMatchIXmlIdentity">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(IXmlIdentity xmlIdentity)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsMatchType">
            <summary>Sets the stub of XmlNodeAccessor.IsMatch(Type clrType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.Prepare">
            <summary>Sets the stub of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.Prepare01">
            <summary>Sets the stub of XmlNodeAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlNodeBase</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNamespaceSource,Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.ClrTypeGet">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.InitializeStub">
            <summary>Initializes a new instance of type StubXmlNodeBase</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.IsRealGet">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.PathGet">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.Realize">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.Realize01">
            <summary>Sets the stub of XmlNodeBase.Realize()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.ClrType">
            <summary>Sets the stub of XmlNodeBase.get_ClrType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.IsReal">
            <summary>Sets the stub of XmlNodeBase.get_IsReal()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlNodeBase.Path">
            <summary>Sets the stub of XmlNodeBase.get_Path()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlPositionComparer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlPositionComparer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlPositionComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlPositionComparer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlPositionComparer</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlPositionComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlPositionComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlPositionComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlReferenceManager">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlReferenceManager.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.Xml.IXmlReferenceFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlReferenceManager.InitializeStub">
            <summary>Initializes a new instance of type StubXmlReferenceManager</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlReferenceManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlReferenceManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlReferenceManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlSelfAccessor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.#ctor(System.Type,Castle.Components.DictionaryAdapter.Xml.IXmlContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.ConfigureNillable(System.Boolean)">
            <summary>Sets the stub of XmlSelfAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.ConfigureNillableBoolean">
            <summary>Sets the stub of XmlSelfAccessor.ConfigureNillable(Boolean nillable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.ConfigureReference(System.Boolean)">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.ConfigureReferenceBoolean">
            <summary>Sets the stub of XmlAccessor.ConfigureReference(Boolean isReference)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.GetCollectionAccessor(System.Type)">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.GetCollectionAccessorType">
            <summary>Sets the stub of XmlAccessor.GetCollectionAccessor(Type itemType)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.GetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.GetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerBoolean">
            <summary>Sets the stub of XmlAccessor.GetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean orStub)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSelfAccessor</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.IsIgnoredGet">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.IsPropertyDefined(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.IsPropertyDefinedIXmlNode">
            <summary>Sets the stub of XmlAccessor.IsPropertyDefined(IXmlNode parentNode)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.Prepare">
            <summary>Sets the stub of XmlAccessor.Prepare()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.Prepare01">
            <summary>Sets the stub of XmlAccessor.Prepare()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SelectCollectionItems(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SelectCollectionItemsIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionItems(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SelectCollectionNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SelectCollectionNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlAccessor.SelectCollectionNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SelectPropertyNode(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Boolean)">
            <summary>Sets the stub of XmlSelfAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SelectPropertyNodeIXmlNodeBoolean">
            <summary>Sets the stub of XmlSelfAccessor.SelectPropertyNode(IXmlNode parentNode, Boolean mutable)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SetPropertyValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SetPropertyValueIXmlNodeIDictionaryAdapterXmlReferenceManagerObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetPropertyValue(IXmlNode parentNode, IDictionaryAdapter parentObject, XmlReferenceManager references, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlCursor,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.XmlReferenceManager,System.Boolean,System.Object,System.Object@)">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.SetValueIXmlCursorIDictionaryAdapterXmlReferenceManagerBooleanObjectObjectRef">
            <summary>Sets the stub of XmlAccessor.SetValue(IXmlCursor cursor, IDictionaryAdapter parentObject, XmlReferenceManager references, Boolean hasCurrent, Object oldValue, Object&amp; newValue)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfAccessor.IsIgnored">
            <summary>Sets the stub of XmlAccessor.get_IsIgnored()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfCursor">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlSelfCursor</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfCursor.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfCursor.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSelfCursor</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfCursor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfCursor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSelfCursor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlSetSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlCollectionSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlCollectionSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSetSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.KindGet">
            <summary>Sets the stub of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.ListTypeConstructorGet">
            <summary>Sets the stub of XmlSetSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlCollectionSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.CanGetStub">
            <summary>Sets the stub of XmlCollectionSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.Kind">
            <summary>Sets the stub of XmlCollectionSerializer.get_Kind()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSetSerializer.ListTypeConstructor">
            <summary>Sets the stub of XmlSetSerializer.get_ListTypeConstructor()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlSimpleSerializer`1</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.#ctor(System.Func{`0,System.String},System.Func{System.String,`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.CanGetStubGet">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlSimpleSerializer`1.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlSimpleSerializer`1.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSimpleSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.KindGet">
            <summary>Sets the stub of XmlSimpleSerializer`1.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlSimpleSerializer`1.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlSimpleSerializer`1.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.CanGetStub">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSimpleSerializer`1.Kind">
            <summary>Sets the stub of XmlSimpleSerializer`1.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlStringSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlStringSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlStringSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlStringSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.KindGet">
            <summary>Sets the stub of XmlStringSerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlStringSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlStringSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.CanGetStub">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlStringSerializer.Kind">
            <summary>Sets the stub of XmlStringSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlSubtreeReader</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.Xml.Serialization.XmlRootAttribute)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.AttributeCountGet">
            <summary>Sets the stub of XmlSubtreeReader.get_AttributeCount()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.BaseURIGet">
            <summary>Sets the stub of XmlSubtreeReader.get_BaseURI()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CanReadBinaryContentGet">
            <summary>Sets the stub of XmlReader.get_CanReadBinaryContent()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CanReadValueChunkGet">
            <summary>Sets the stub of XmlReader.get_CanReadValueChunk()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CanResolveEntityGet">
            <summary>Sets the stub of XmlReader.get_CanResolveEntity()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Close">
            <summary>Sets the stub of XmlSubtreeReader.Close()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Close01">
            <summary>Sets the stub of XmlSubtreeReader.Close()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.DepthGet">
            <summary>Sets the stub of XmlSubtreeReader.get_Depth()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Dispose(System.Boolean)">
            <summary>Sets the stub of XmlSubtreeReader.Dispose(Boolean managed)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.DisposeBoolean">
            <summary>Sets the stub of XmlSubtreeReader.Dispose(Boolean managed)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.EOFGet">
            <summary>Sets the stub of XmlSubtreeReader.get_EOF()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetAttribute(System.String)">
            <summary>Sets the stub of XmlSubtreeReader.GetAttribute(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetAttribute(System.Int32)">
            <summary>Sets the stub of XmlSubtreeReader.GetAttribute(Int32 i)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetAttribute(System.String,System.String)">
            <summary>Sets the stub of XmlSubtreeReader.GetAttribute(String name, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetAttributeInt32">
            <summary>Sets the stub of XmlSubtreeReader.GetAttribute(Int32 i)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetAttributeString">
            <summary>Sets the stub of XmlSubtreeReader.GetAttribute(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetAttributeStringString">
            <summary>Sets the stub of XmlSubtreeReader.GetAttribute(String name, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetValueAsync">
            <summary>Sets the stub of XmlReader.GetValueAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.GetValueAsync01">
            <summary>Sets the stub of XmlReader.GetValueAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.HasAttributesGet">
            <summary>Sets the stub of XmlReader.get_HasAttributes()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.HasValueGet">
            <summary>Sets the stub of XmlReader.get_HasValue()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSubtreeReader</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsDefaultGet">
            <summary>Sets the stub of XmlReader.get_IsDefault()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsEmptyElementGet">
            <summary>Sets the stub of XmlSubtreeReader.get_IsEmptyElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsStartElement">
            <summary>Sets the stub of XmlReader.IsStartElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsStartElement(System.String)">
            <summary>Sets the stub of XmlReader.IsStartElement(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsStartElement(System.String,System.String)">
            <summary>Sets the stub of XmlReader.IsStartElement(String localname, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsStartElement01">
            <summary>Sets the stub of XmlReader.IsStartElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsStartElementString">
            <summary>Sets the stub of XmlReader.IsStartElement(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsStartElementStringString">
            <summary>Sets the stub of XmlReader.IsStartElement(String localname, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ItemGetInt32">
            <summary>Sets the stub of XmlReader.get_Item(Int32 i)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ItemGetString">
            <summary>Sets the stub of XmlReader.get_Item(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ItemGetStringString">
            <summary>Sets the stub of XmlReader.get_Item(String name, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.LocalNameGet">
            <summary>Sets the stub of XmlSubtreeReader.get_LocalName()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.LookupNamespace(System.String)">
            <summary>Sets the stub of XmlSubtreeReader.LookupNamespace(String prefix)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.LookupNamespaceString">
            <summary>Sets the stub of XmlSubtreeReader.LookupNamespace(String prefix)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToAttribute(System.String)">
            <summary>Sets the stub of XmlSubtreeReader.MoveToAttribute(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToAttribute(System.String,System.String)">
            <summary>Sets the stub of XmlSubtreeReader.MoveToAttribute(String name, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToAttribute(System.Int32)">
            <summary>Sets the stub of XmlReader.MoveToAttribute(Int32 i)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToAttributeInt32">
            <summary>Sets the stub of XmlReader.MoveToAttribute(Int32 i)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToAttributeString">
            <summary>Sets the stub of XmlSubtreeReader.MoveToAttribute(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToAttributeStringString">
            <summary>Sets the stub of XmlSubtreeReader.MoveToAttribute(String name, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToContent">
            <summary>Sets the stub of XmlReader.MoveToContent()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToContent01">
            <summary>Sets the stub of XmlReader.MoveToContent()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToContentAsync">
            <summary>Sets the stub of XmlReader.MoveToContentAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToContentAsync01">
            <summary>Sets the stub of XmlReader.MoveToContentAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToElement">
            <summary>Sets the stub of XmlSubtreeReader.MoveToElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToElement01">
            <summary>Sets the stub of XmlSubtreeReader.MoveToElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToFirstAttribute">
            <summary>Sets the stub of XmlSubtreeReader.MoveToFirstAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToFirstAttribute01">
            <summary>Sets the stub of XmlSubtreeReader.MoveToFirstAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToNextAttribute">
            <summary>Sets the stub of XmlSubtreeReader.MoveToNextAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.MoveToNextAttribute01">
            <summary>Sets the stub of XmlSubtreeReader.MoveToNextAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NameGet">
            <summary>Sets the stub of XmlReader.get_Name()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NameTableGet">
            <summary>Sets the stub of XmlSubtreeReader.get_NameTable()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NamespaceURIGet">
            <summary>Sets the stub of XmlSubtreeReader.get_NamespaceURI()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NodeTypeGet">
            <summary>Sets the stub of XmlSubtreeReader.get_NodeType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.PrefixGet">
            <summary>Sets the stub of XmlSubtreeReader.get_Prefix()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.QuoteCharGet">
            <summary>Sets the stub of XmlReader.get_QuoteChar()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Read">
            <summary>Sets the stub of XmlSubtreeReader.Read()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Read01">
            <summary>Sets the stub of XmlSubtreeReader.Read()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadAttributeValue">
            <summary>Sets the stub of XmlSubtreeReader.ReadAttributeValue()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadAttributeValue01">
            <summary>Sets the stub of XmlSubtreeReader.ReadAttributeValue()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>Sets the stub of XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>Sets the stub of XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>Sets the stub of XmlReader.ReadContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBase64AsyncByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBase64ByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadContentAsBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBinHexByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadContentAsBinHex(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBoolean">
            <summary>Sets the stub of XmlReader.ReadContentAsBoolean()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsBoolean01">
            <summary>Sets the stub of XmlReader.ReadContentAsBoolean()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDateTime">
            <summary>Sets the stub of XmlReader.ReadContentAsDateTime()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDateTime01">
            <summary>Sets the stub of XmlReader.ReadContentAsDateTime()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDateTimeOffset">
            <summary>Sets the stub of XmlReader.ReadContentAsDateTimeOffset()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDateTimeOffset01">
            <summary>Sets the stub of XmlReader.ReadContentAsDateTimeOffset()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDecimal">
            <summary>Sets the stub of XmlReader.ReadContentAsDecimal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDecimal01">
            <summary>Sets the stub of XmlReader.ReadContentAsDecimal()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDouble">
            <summary>Sets the stub of XmlReader.ReadContentAsDouble()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsDouble01">
            <summary>Sets the stub of XmlReader.ReadContentAsDouble()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsFloat">
            <summary>Sets the stub of XmlReader.ReadContentAsFloat()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsFloat01">
            <summary>Sets the stub of XmlReader.ReadContentAsFloat()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsInt">
            <summary>Sets the stub of XmlReader.ReadContentAsInt()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsInt01">
            <summary>Sets the stub of XmlReader.ReadContentAsInt()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsLong">
            <summary>Sets the stub of XmlReader.ReadContentAsLong()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsLong01">
            <summary>Sets the stub of XmlReader.ReadContentAsLong()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsObject">
            <summary>Sets the stub of XmlReader.ReadContentAsObject()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsObject01">
            <summary>Sets the stub of XmlReader.ReadContentAsObject()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsObjectAsync">
            <summary>Sets the stub of XmlReader.ReadContentAsObjectAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsObjectAsync01">
            <summary>Sets the stub of XmlReader.ReadContentAsObjectAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsString">
            <summary>Sets the stub of XmlReader.ReadContentAsString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsString01">
            <summary>Sets the stub of XmlReader.ReadContentAsString()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsStringAsync">
            <summary>Sets the stub of XmlReader.ReadContentAsStringAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsStringAsync01">
            <summary>Sets the stub of XmlReader.ReadContentAsStringAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadContentAsTypeIXmlNamespaceResolver">
            <summary>Sets the stub of XmlReader.ReadContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>Sets the stub of XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsAsyncTypeIXmlNamespaceResolver">
            <summary>Sets the stub of XmlReader.ReadElementContentAsAsync(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBase64AsyncByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBase64Async(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBase64ByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBinHexAsyncByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBinHexAsync(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBinHexByteArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBinHex(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBoolean">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBoolean()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBoolean(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBoolean01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBoolean()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsBooleanStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsBoolean(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDateTime">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDateTime()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDateTime(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDateTime01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDateTime()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDateTimeStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDateTime(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDecimal">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDecimal()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDecimal(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDecimal01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDecimal()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDecimalStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDecimal(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDouble">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDouble()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDouble(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDouble01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDouble()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsDoubleStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsDouble(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsFloat">
            <summary>Sets the stub of XmlReader.ReadElementContentAsFloat()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsFloat(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsFloat01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsFloat()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsFloatStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsFloat(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsInt">
            <summary>Sets the stub of XmlReader.ReadElementContentAsInt()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsInt(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsInt(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsInt01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsInt()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsIntStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsInt(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsLong">
            <summary>Sets the stub of XmlReader.ReadElementContentAsLong()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsLong(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsLong(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsLong01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsLong()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsLongStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsLong(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsObject">
            <summary>Sets the stub of XmlReader.ReadElementContentAsObject()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsObject(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsObject(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsObject01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsObject()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsObjectAsync">
            <summary>Sets the stub of XmlReader.ReadElementContentAsObjectAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsObjectAsync01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsObjectAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsObjectStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsObject(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsString()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsString(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementContentAsString(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsString01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsString()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsStringAsync">
            <summary>Sets the stub of XmlReader.ReadElementContentAsStringAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsStringAsync01">
            <summary>Sets the stub of XmlReader.ReadElementContentAsStringAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsStringStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAsString(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsTypeIXmlNamespaceResolver">
            <summary>Sets the stub of XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementContentAsTypeIXmlNamespaceResolverStringString">
            <summary>Sets the stub of XmlReader.ReadElementContentAs(Type returnType, IXmlNamespaceResolver namespaceResolver, String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementString">
            <summary>Sets the stub of XmlReader.ReadElementString()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementString(System.String)">
            <summary>Sets the stub of XmlReader.ReadElementString(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementString(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadElementString(String localname, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementString01">
            <summary>Sets the stub of XmlReader.ReadElementString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementStringString">
            <summary>Sets the stub of XmlReader.ReadElementString(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadElementStringStringString">
            <summary>Sets the stub of XmlReader.ReadElementString(String localname, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadEndElement">
            <summary>Sets the stub of XmlReader.ReadEndElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadEndElement01">
            <summary>Sets the stub of XmlReader.ReadEndElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadInnerXml">
            <summary>Sets the stub of XmlReader.ReadInnerXml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadInnerXml01">
            <summary>Sets the stub of XmlReader.ReadInnerXml()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadInnerXmlAsync">
            <summary>Sets the stub of XmlReader.ReadInnerXmlAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadInnerXmlAsync01">
            <summary>Sets the stub of XmlReader.ReadInnerXmlAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadOuterXml">
            <summary>Sets the stub of XmlReader.ReadOuterXml()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadOuterXml01">
            <summary>Sets the stub of XmlReader.ReadOuterXml()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadOuterXmlAsync">
            <summary>Sets the stub of XmlReader.ReadOuterXmlAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadOuterXmlAsync01">
            <summary>Sets the stub of XmlReader.ReadOuterXmlAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStartElement">
            <summary>Sets the stub of XmlReader.ReadStartElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStartElement(System.String)">
            <summary>Sets the stub of XmlReader.ReadStartElement(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStartElement(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadStartElement(String localname, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStartElement01">
            <summary>Sets the stub of XmlReader.ReadStartElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStartElementString">
            <summary>Sets the stub of XmlReader.ReadStartElement(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStartElementStringString">
            <summary>Sets the stub of XmlReader.ReadStartElement(String localname, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadStateGet">
            <summary>Sets the stub of XmlSubtreeReader.get_ReadState()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadString">
            <summary>Sets the stub of XmlReader.ReadString()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadString01">
            <summary>Sets the stub of XmlReader.ReadString()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadSubtree">
            <summary>Sets the stub of XmlReader.ReadSubtree()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadSubtree01">
            <summary>Sets the stub of XmlReader.ReadSubtree()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToDescendant(System.String)">
            <summary>Sets the stub of XmlReader.ReadToDescendant(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToDescendant(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadToDescendant(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToDescendantString">
            <summary>Sets the stub of XmlReader.ReadToDescendant(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToDescendantStringString">
            <summary>Sets the stub of XmlReader.ReadToDescendant(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToFollowing(System.String)">
            <summary>Sets the stub of XmlReader.ReadToFollowing(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToFollowing(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadToFollowing(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToFollowingString">
            <summary>Sets the stub of XmlReader.ReadToFollowing(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToFollowingStringString">
            <summary>Sets the stub of XmlReader.ReadToFollowing(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToNextSibling(System.String)">
            <summary>Sets the stub of XmlReader.ReadToNextSibling(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToNextSibling(System.String,System.String)">
            <summary>Sets the stub of XmlReader.ReadToNextSibling(String localName, String namespaceURI)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToNextSiblingString">
            <summary>Sets the stub of XmlReader.ReadToNextSibling(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadToNextSiblingStringString">
            <summary>Sets the stub of XmlReader.ReadToNextSibling(String localName, String namespaceURI)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadValueChunkAsyncCharArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadValueChunkAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadValueChunkCharArrayInt32Int32">
            <summary>Sets the stub of XmlReader.ReadValueChunk(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ResolveEntity">
            <summary>Sets the stub of XmlSubtreeReader.ResolveEntity()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ResolveEntity01">
            <summary>Sets the stub of XmlSubtreeReader.ResolveEntity()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.SchemaInfoGet">
            <summary>Sets the stub of XmlReader.get_SchemaInfo()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.SettingsGet">
            <summary>Sets the stub of XmlReader.get_Settings()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Skip">
            <summary>Sets the stub of XmlReader.Skip()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Skip01">
            <summary>Sets the stub of XmlReader.Skip()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.SkipAsync">
            <summary>Sets the stub of XmlReader.SkipAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.SkipAsync01">
            <summary>Sets the stub of XmlReader.SkipAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ValueGet">
            <summary>Sets the stub of XmlSubtreeReader.get_Value()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ValueTypeGet">
            <summary>Sets the stub of XmlReader.get_ValueType()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.XmlLangGet">
            <summary>Sets the stub of XmlReader.get_XmlLang()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.XmlSpaceGet">
            <summary>Sets the stub of XmlReader.get_XmlSpace()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.AttributeCount">
            <summary>Sets the stub of XmlSubtreeReader.get_AttributeCount()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.BaseURI">
            <summary>Sets the stub of XmlSubtreeReader.get_BaseURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CanReadBinaryContent">
            <summary>Sets the stub of XmlReader.get_CanReadBinaryContent()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CanReadValueChunk">
            <summary>Sets the stub of XmlReader.get_CanReadValueChunk()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.CanResolveEntity">
            <summary>Sets the stub of XmlReader.get_CanResolveEntity()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Depth">
            <summary>Sets the stub of XmlSubtreeReader.get_Depth()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.EOF">
            <summary>Sets the stub of XmlSubtreeReader.get_EOF()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.HasAttributes">
            <summary>Sets the stub of XmlReader.get_HasAttributes()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.HasValue">
            <summary>Sets the stub of XmlReader.get_HasValue()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsDefault">
            <summary>Sets the stub of XmlReader.get_IsDefault()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.IsEmptyElement">
            <summary>Sets the stub of XmlSubtreeReader.get_IsEmptyElement()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Item(System.Int32)">
            <summary>Sets the stub of XmlReader.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Item(System.String)">
            <summary>Sets the stub of XmlReader.get_Item(String name)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Item(System.String,System.String)">
            <summary>Sets the stub of XmlReader.get_Item(String name, String namespaceURI)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.LocalName">
            <summary>Sets the stub of XmlSubtreeReader.get_LocalName()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Name">
            <summary>Sets the stub of XmlReader.get_Name()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NameTable">
            <summary>Sets the stub of XmlSubtreeReader.get_NameTable()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NamespaceURI">
            <summary>Sets the stub of XmlSubtreeReader.get_NamespaceURI()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.NodeType">
            <summary>Sets the stub of XmlSubtreeReader.get_NodeType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Prefix">
            <summary>Sets the stub of XmlSubtreeReader.get_Prefix()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.QuoteChar">
            <summary>Sets the stub of XmlReader.get_QuoteChar()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ReadState">
            <summary>Sets the stub of XmlSubtreeReader.get_ReadState()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.SchemaInfo">
            <summary>Sets the stub of XmlReader.get_SchemaInfo()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Settings">
            <summary>Sets the stub of XmlReader.get_Settings()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.Value">
            <summary>Sets the stub of XmlSubtreeReader.get_Value()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.ValueType">
            <summary>Sets the stub of XmlReader.get_ValueType()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.XmlLang">
            <summary>Sets the stub of XmlReader.get_XmlLang()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeReader.XmlSpace">
            <summary>Sets the stub of XmlReader.get_XmlSpace()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlSubtreeWriter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.#ctor(Castle.Components.DictionaryAdapter.Xml.IXmlNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.Close">
            <summary>Sets the stub of XmlSubtreeWriter.Close()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.Close01">
            <summary>Sets the stub of XmlSubtreeWriter.Close()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of XmlSubtreeWriter.Dispose(Boolean managed)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.DisposeBoolean">
            <summary>Sets the stub of XmlSubtreeWriter.Dispose(Boolean managed)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.Flush">
            <summary>Sets the stub of XmlSubtreeWriter.Flush()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.Flush01">
            <summary>Sets the stub of XmlSubtreeWriter.Flush()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSubtreeWriter</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.LookupPrefix(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.LookupPrefix(String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.LookupPrefixString">
            <summary>Sets the stub of XmlSubtreeWriter.LookupPrefix(String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.SettingsGet">
            <summary>Sets the stub of XmlWriter.get_Settings()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteAttributesAsyncXmlReaderBoolean">
            <summary>Sets the stub of XmlWriter.WriteAttributesAsync(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteAttributesXmlReaderBoolean">
            <summary>Sets the stub of XmlWriter.WriteAttributes(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBase64AsyncByteArrayInt32Int32">
            <summary>Sets the stub of XmlWriter.WriteBase64Async(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBase64ByteArrayInt32Int32">
            <summary>Sets the stub of XmlSubtreeWriter.WriteBase64(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBinHexAsyncByteArrayInt32Int32">
            <summary>Sets the stub of XmlWriter.WriteBinHexAsync(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteBinHexByteArrayInt32Int32">
            <summary>Sets the stub of XmlWriter.WriteBinHex(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCData(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteCData(String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCDataAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteCDataAsync(String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCDataAsyncString">
            <summary>Sets the stub of XmlWriter.WriteCDataAsync(String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCDataString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteCData(String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharEntity(System.Char)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteCharEntity(Char ch)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharEntityAsync(System.Char)">
            <summary>Sets the stub of XmlWriter.WriteCharEntityAsync(Char ch)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharEntityAsyncChar">
            <summary>Sets the stub of XmlWriter.WriteCharEntityAsync(Char ch)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharEntityChar">
            <summary>Sets the stub of XmlSubtreeWriter.WriteCharEntity(Char ch)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteChars(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharsAsyncCharArrayInt32Int32">
            <summary>Sets the stub of XmlWriter.WriteCharsAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCharsCharArrayInt32Int32">
            <summary>Sets the stub of XmlSubtreeWriter.WriteChars(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteComment(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteComment(String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCommentAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteCommentAsync(String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCommentAsyncString">
            <summary>Sets the stub of XmlWriter.WriteCommentAsync(String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteCommentString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteComment(String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteDocType(String name, String pubid, String sysid, String subset)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteDocTypeAsyncStringStringStringString">
            <summary>Sets the stub of XmlWriter.WriteDocTypeAsync(String name, String pubid, String sysid, String subset)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteDocTypeStringStringStringString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteDocType(String name, String pubid, String sysid, String subset)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndAttribute">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEndAttribute()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndAttribute01">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEndAttribute()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndAttributeAsync">
            <summary>Sets the stub of XmlWriter.WriteEndAttributeAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndAttributeAsync01">
            <summary>Sets the stub of XmlWriter.WriteEndAttributeAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndDocument">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEndDocument()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndDocument01">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEndDocument()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndDocumentAsync">
            <summary>Sets the stub of XmlWriter.WriteEndDocumentAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndDocumentAsync01">
            <summary>Sets the stub of XmlWriter.WriteEndDocumentAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndElement">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEndElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndElement01">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEndElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndElementAsync">
            <summary>Sets the stub of XmlWriter.WriteEndElementAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEndElementAsync01">
            <summary>Sets the stub of XmlWriter.WriteEndElementAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEntityRef(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEntityRef(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEntityRefAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteEntityRefAsync(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEntityRefAsyncString">
            <summary>Sets the stub of XmlWriter.WriteEntityRefAsync(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteEntityRefString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteEntityRef(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteFullEndElement">
            <summary>Sets the stub of XmlSubtreeWriter.WriteFullEndElement()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteFullEndElement01">
            <summary>Sets the stub of XmlSubtreeWriter.WriteFullEndElement()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteFullEndElementAsync">
            <summary>Sets the stub of XmlWriter.WriteFullEndElementAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteFullEndElementAsync01">
            <summary>Sets the stub of XmlWriter.WriteFullEndElementAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteName(System.String)">
            <summary>Sets the stub of XmlWriter.WriteName(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNameAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteNameAsync(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNameAsyncString">
            <summary>Sets the stub of XmlWriter.WriteNameAsync(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNameString">
            <summary>Sets the stub of XmlWriter.WriteName(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNmToken(System.String)">
            <summary>Sets the stub of XmlWriter.WriteNmToken(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNmTokenAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteNmTokenAsync(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNmTokenAsyncString">
            <summary>Sets the stub of XmlWriter.WriteNmTokenAsync(String name)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNmTokenString">
            <summary>Sets the stub of XmlWriter.WriteNmToken(String name)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteNode(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNodeAsyncXPathNavigatorBoolean">
            <summary>Sets the stub of XmlWriter.WriteNodeAsync(XPathNavigator navigator, Boolean defattr)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNodeAsyncXmlReaderBoolean">
            <summary>Sets the stub of XmlWriter.WriteNodeAsync(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNodeXPathNavigatorBoolean">
            <summary>Sets the stub of XmlWriter.WriteNode(XPathNavigator navigator, Boolean defattr)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteNodeXmlReaderBoolean">
            <summary>Sets the stub of XmlWriter.WriteNode(XmlReader reader, Boolean defattr)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteProcessingInstruction(System.String,System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteProcessingInstruction(String name, String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteProcessingInstructionAsync(System.String,System.String)">
            <summary>Sets the stub of XmlWriter.WriteProcessingInstructionAsync(String name, String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteProcessingInstructionAsyncStringString">
            <summary>Sets the stub of XmlWriter.WriteProcessingInstructionAsync(String name, String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteProcessingInstructionStringString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteProcessingInstruction(String name, String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteQualifiedName(System.String,System.String)">
            <summary>Sets the stub of XmlWriter.WriteQualifiedName(String localName, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteQualifiedNameAsync(System.String,System.String)">
            <summary>Sets the stub of XmlWriter.WriteQualifiedNameAsync(String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteQualifiedNameAsyncStringString">
            <summary>Sets the stub of XmlWriter.WriteQualifiedNameAsync(String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteQualifiedNameStringString">
            <summary>Sets the stub of XmlWriter.WriteQualifiedName(String localName, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRaw(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteRaw(String data)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRawAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteRawAsync(String data)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRawAsyncCharArrayInt32Int32">
            <summary>Sets the stub of XmlWriter.WriteRawAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRawAsyncString">
            <summary>Sets the stub of XmlWriter.WriteRawAsync(String data)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRawCharArrayInt32Int32">
            <summary>Sets the stub of XmlSubtreeWriter.WriteRaw(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteRawString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteRaw(String data)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartAttribute(System.String,System.String,System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartAttribute(String prefix, String localName, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartAttributeAsyncStringStringString">
            <summary>Sets the stub of XmlWriter.WriteStartAttributeAsync(String prefix, String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartAttributeStringStringString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartAttribute(String prefix, String localName, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocument">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartDocument()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocument(System.Boolean)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartDocument(Boolean standalone)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocument01">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartDocument()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocumentAsync">
            <summary>Sets the stub of XmlWriter.WriteStartDocumentAsync()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocumentAsync(System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteStartDocumentAsync(Boolean standalone)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocumentAsync01">
            <summary>Sets the stub of XmlWriter.WriteStartDocumentAsync()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocumentAsyncBoolean">
            <summary>Sets the stub of XmlWriter.WriteStartDocumentAsync(Boolean standalone)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartDocumentBoolean">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartDocument(Boolean standalone)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartElement(String prefix, String localName, String ns)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartElementAsync(System.String,System.String,System.String)">
            <summary>Sets the stub of XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartElementAsyncStringStringString">
            <summary>Sets the stub of XmlWriter.WriteStartElementAsync(String prefix, String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStartElementStringStringString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteStartElement(String prefix, String localName, String ns)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStateGet">
            <summary>Sets the stub of XmlSubtreeWriter.get_WriteState()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteString(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteString(String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStringAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteStringAsync(String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStringAsyncString">
            <summary>Sets the stub of XmlWriter.WriteStringAsync(String text)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteStringString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteString(String text)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
            <summary>Sets the stub of XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteSurrogateCharEntityAsyncCharChar">
            <summary>Sets the stub of XmlWriter.WriteSurrogateCharEntityAsync(Char lowChar, Char highChar)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteSurrogateCharEntityCharChar">
            <summary>Sets the stub of XmlSubtreeWriter.WriteSurrogateCharEntity(Char lowChar, Char highChar)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Boolean)">
            <summary>Sets the stub of XmlWriter.WriteValue(Boolean value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.DateTimeOffset)">
            <summary>Sets the stub of XmlWriter.WriteValue(DateTimeOffset value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Object)">
            <summary>Sets the stub of XmlWriter.WriteValue(Object value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.DateTime)">
            <summary>Sets the stub of XmlWriter.WriteValue(DateTime value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Decimal)">
            <summary>Sets the stub of XmlWriter.WriteValue(Decimal value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Double)">
            <summary>Sets the stub of XmlWriter.WriteValue(Double value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.String)">
            <summary>Sets the stub of XmlWriter.WriteValue(String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Int32)">
            <summary>Sets the stub of XmlWriter.WriteValue(Int32 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Int64)">
            <summary>Sets the stub of XmlWriter.WriteValue(Int64 value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValue(System.Single)">
            <summary>Sets the stub of XmlWriter.WriteValue(Single value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueBoolean">
            <summary>Sets the stub of XmlWriter.WriteValue(Boolean value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueDateTime">
            <summary>Sets the stub of XmlWriter.WriteValue(DateTime value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueDateTimeOffset">
            <summary>Sets the stub of XmlWriter.WriteValue(DateTimeOffset value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueDecimal">
            <summary>Sets the stub of XmlWriter.WriteValue(Decimal value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueDouble">
            <summary>Sets the stub of XmlWriter.WriteValue(Double value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueInt32">
            <summary>Sets the stub of XmlWriter.WriteValue(Int32 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueInt64">
            <summary>Sets the stub of XmlWriter.WriteValue(Int64 value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueObject">
            <summary>Sets the stub of XmlWriter.WriteValue(Object value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueSingle">
            <summary>Sets the stub of XmlWriter.WriteValue(Single value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteValueString">
            <summary>Sets the stub of XmlWriter.WriteValue(String value)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteWhitespace(System.String)">
            <summary>Sets the stub of XmlSubtreeWriter.WriteWhitespace(String ws)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteWhitespaceAsync(System.String)">
            <summary>Sets the stub of XmlWriter.WriteWhitespaceAsync(String ws)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteWhitespaceAsyncString">
            <summary>Sets the stub of XmlWriter.WriteWhitespaceAsync(String ws)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteWhitespaceString">
            <summary>Sets the stub of XmlSubtreeWriter.WriteWhitespace(String ws)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.XmlLangGet">
            <summary>Sets the stub of XmlWriter.get_XmlLang()</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.XmlSpaceGet">
            <summary>Sets the stub of XmlWriter.get_XmlSpace()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.Settings">
            <summary>Sets the stub of XmlWriter.get_Settings()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.WriteState">
            <summary>Sets the stub of XmlSubtreeWriter.get_WriteState()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.XmlLang">
            <summary>Sets the stub of XmlWriter.get_XmlLang()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlSubtreeWriter.XmlSpace">
            <summary>Sets the stub of XmlWriter.get_XmlSpace()</summary>
        </member>
        <member name="T:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer">
            <summary>Stub type of Castle.Components.DictionaryAdapter.Xml.XmlTypeSerializer</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.CanGetStubGet">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.GetStub(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.GetStubIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetStub(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.GetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor)">
            <summary>Sets the stub of XmlTypeSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.GetValueIXmlNodeIDictionaryAdapterIXmlAccessor">
            <summary>Sets the stub of XmlTypeSerializer.GetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor)</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlTypeSerializer</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.KindGet">
            <summary>Sets the stub of XmlTypeSerializer.get_Kind()</summary>
        </member>
        <member name="M:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.SetValue(Castle.Components.DictionaryAdapter.Xml.IXmlNode,Castle.Components.DictionaryAdapter.IDictionaryAdapter,Castle.Components.DictionaryAdapter.Xml.IXmlAccessor,System.Object,System.Object@)">
            <summary>Sets the stub of XmlTypeSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="F:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.SetValueIXmlNodeIDictionaryAdapterIXmlAccessorObjectObjectRef">
            <summary>Sets the stub of XmlTypeSerializer.SetValue(IXmlNode node, IDictionaryAdapter parent, IXmlAccessor accessor, Object oldValue, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.CanGetStub">
            <summary>Sets the stub of XmlTypeSerializer.get_CanGetStub()</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Components.DictionaryAdapter.Xml.Fakes.StubXmlTypeSerializer.Kind">
            <summary>Sets the stub of XmlTypeSerializer.get_Kind()</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration">
            <summary>Shim type of Castle.Core.Configuration.AbstractConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.#ctor(Castle.Core.Configuration.AbstractConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.Bind(Castle.Core.Configuration.IConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AttributesGet">
            <summary>Sets the shim of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.ChildrenGet">
            <summary>Sets the shim of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.Constructor">
            <summary>Sets the shim of AbstractConfiguration.AbstractConfiguration()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.GetValueTypeObject">
            <summary>Sets the shim of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.NameGet">
            <summary>Sets the shim of AbstractConfiguration.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.NameSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Name(String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.ValueGet">
            <summary>Sets the shim of AbstractConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.ValueSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.AttributesGet">
            <summary>Sets the shim of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.ChildrenGet">
            <summary>Sets the shim of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.GetValueTypeObject">
            <summary>Sets the shim of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.NameGet">
            <summary>Sets the shim of AbstractConfiguration.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.NameSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Name(String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.ValueGet">
            <summary>Sets the shim of AbstractConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimAbstractConfiguration.AllInstances.ValueSetString">
            <summary>Sets the shim of AbstractConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection">
            <summary>Shim type of Castle.Core.Configuration.ConfigurationAttributeCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.#ctor(Castle.Core.Configuration.ConfigurationAttributeCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.Constructor">
            <summary>Sets the shim of ConfigurationAttributeCollection.ConfigurationAttributeCollection()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ConfigurationAttributeCollection.ConfigurationAttributeCollection(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationAttributeCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationCollection">
            <summary>Shim type of Castle.Core.Configuration.ConfigurationCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.#ctor(Castle.Core.Configuration.ConfigurationCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.ICollection{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.IEnumerable{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.IList{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Bind(System.Collections.Generic.IReadOnlyList{Castle.Core.Configuration.IConfiguration})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.Constructor">
            <summary>Sets the shim of ConfigurationCollection.ConfigurationCollection()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.ConstructorIEnumerableOfIConfiguration">
            <summary>Sets the shim of ConfigurationCollection.ConfigurationCollection(IEnumerable`1&lt;IConfiguration&gt; value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.ItemGetString">
            <summary>Sets the shim of ConfigurationCollection.get_Item(String name)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimConfigurationCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of ConfigurationCollection.get_Item(String name)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimMutableConfiguration">
            <summary>Shim type of Castle.Core.Configuration.MutableConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.#ctor(Castle.Core.Configuration.MutableConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.Bind(Castle.Core.Configuration.IConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AttributeStringString">
            <summary>Sets the shim of MutableConfiguration.Attribute(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ConstructorString">
            <summary>Sets the shim of MutableConfiguration.MutableConfiguration(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ConstructorStringString">
            <summary>Sets the shim of MutableConfiguration.MutableConfiguration(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.CreateChildString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.CreateChildStringString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.CreateString">
            <summary>Sets the shim of MutableConfiguration.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ValueGet">
            <summary>Sets the shim of MutableConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.ValueSetString">
            <summary>Sets the shim of MutableConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.AttributeStringString">
            <summary>Sets the shim of MutableConfiguration.Attribute(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.CreateChildString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.CreateChildStringString">
            <summary>Sets the shim of MutableConfiguration.CreateChild(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.ValueGet">
            <summary>Sets the shim of MutableConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.ShimMutableConfiguration.AllInstances.ValueSetString">
            <summary>Sets the shim of MutableConfiguration.set_Value(String value)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubAbstractConfiguration">
            <summary>Stub type of Castle.Core.Configuration.AbstractConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.AttributesGet">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.ChildrenGet">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.GetValue(System.Type,System.Object)">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.GetValueTypeObject">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractConfiguration</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.Attributes">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.Children">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubAbstractConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection">
            <summary>Stub type of Castle.Core.Configuration.ConfigurationAttributeCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Add(System.String,System.String)">
            <summary>Sets the stub of NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.AddStringString">
            <summary>Sets the stub of NameValueCollection.Add(String name, String value)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.AllKeysGet">
            <summary>Sets the stub of NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Clear">
            <summary>Sets the stub of NameValueCollection.Clear()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Clear01">
            <summary>Sets the stub of NameValueCollection.Clear()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.CountGet">
            <summary>Sets the stub of NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Get(System.Int32)">
            <summary>Sets the stub of NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Get(System.String)">
            <summary>Sets the stub of NameValueCollection.Get(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetEnumerator">
            <summary>Sets the stub of NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetEnumerator01">
            <summary>Sets the stub of NameObjectCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetInt32">
            <summary>Sets the stub of NameValueCollection.Get(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetKey(System.Int32)">
            <summary>Sets the stub of NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetKeyInt32">
            <summary>Sets the stub of NameValueCollection.GetKey(Int32 index)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of NameObjectCollectionBase.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetString">
            <summary>Sets the stub of NameValueCollection.Get(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValues(System.String)">
            <summary>Sets the stub of NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValues(System.Int32)">
            <summary>Sets the stub of NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValuesInt32">
            <summary>Sets the stub of NameValueCollection.GetValues(Int32 index)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.GetValuesString">
            <summary>Sets the stub of NameValueCollection.GetValues(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationAttributeCollection</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.KeysGet">
            <summary>Sets the stub of NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.OnDeserialization(System.Object)">
            <summary>Sets the stub of NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.OnDeserializationObject">
            <summary>Sets the stub of NameObjectCollectionBase.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Remove(System.String)">
            <summary>Sets the stub of NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.RemoveString">
            <summary>Sets the stub of NameValueCollection.Remove(String name)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Set(System.String,System.String)">
            <summary>Sets the stub of NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.SetStringString">
            <summary>Sets the stub of NameValueCollection.Set(String name, String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.AllKeys">
            <summary>Sets the stub of NameValueCollection.get_AllKeys()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Count">
            <summary>Sets the stub of NameObjectCollectionBase.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationAttributeCollection.Keys">
            <summary>Sets the stub of NameObjectCollectionBase.get_Keys()</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubConfigurationCollection">
            <summary>Stub type of Castle.Core.Configuration.ConfigurationCollection</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationCollection.#ctor(System.Collections.Generic.IEnumerable{Castle.Core.Configuration.IConfiguration})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubConfigurationCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConfigurationCollection</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubConfigurationCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubIConfiguration">
            <summary>Stub type of Castle.Core.Configuration.IConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubIConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIConfiguration</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.AttributesGet">
            <summary>Sets the stub of IConfiguration.get_Attributes()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#GetValue(System.Type,System.Object)">
            <summary>Sets the stub of IConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.ChildrenGet">
            <summary>Sets the stub of IConfiguration.get_Children()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.GetValueTypeObject">
            <summary>Sets the stub of IConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.NameGet">
            <summary>Sets the stub of IConfiguration.get_Name()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubIConfiguration.ValueGet">
            <summary>Sets the stub of IConfiguration.get_Value()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Attributes">
            <summary>Sets the stub of IConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Children">
            <summary>Sets the stub of IConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Name">
            <summary>Sets the stub of IConfiguration.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubIConfiguration.cc::Castle#Core#Configuration#IConfiguration#Value">
            <summary>Sets the stub of IConfiguration.get_Value()</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Fakes.StubMutableConfiguration">
            <summary>Stub type of Castle.Core.Configuration.MutableConfiguration</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubMutableConfiguration.AttributesGet">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubMutableConfiguration.ChildrenGet">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.GetValue(System.Type,System.Object)">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="F:Castle.Core.Configuration.Fakes.StubMutableConfiguration.GetValueTypeObject">
            <summary>Sets the stub of AbstractConfiguration.GetValue(Type type, Object defaultValue)</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Fakes.StubMutableConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubMutableConfiguration</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.Attributes">
            <summary>Sets the stub of AbstractConfiguration.get_Attributes()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.Children">
            <summary>Sets the stub of AbstractConfiguration.get_Children()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Fakes.StubMutableConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer">
            <summary>Shim type of Castle.Core.Configuration.Xml.XmlConfigurationDeserializer</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.#ctor(Castle.Core.Configuration.Xml.XmlConfigurationDeserializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.Constructor">
            <summary>Sets the shim of XmlConfigurationDeserializer.XmlConfigurationDeserializer()</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.DeserializeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.Deserialize(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.GetConfigValueString">
            <summary>Sets the shim of XmlConfigurationDeserializer.GetConfigValue(String value)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.GetDeserializedNodeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.GetDeserializedNode(XmlNode node)</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.IsTextNodeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.IsTextNode(XmlNode node)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.ShimXmlConfigurationDeserializer.AllInstances.DeserializeXmlNode">
            <summary>Sets the shim of XmlConfigurationDeserializer.Deserialize(XmlNode node)</summary>
        </member>
        <member name="T:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer">
            <summary>Stub type of Castle.Core.Configuration.Xml.XmlConfigurationDeserializer</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.InitializeStub">
            <summary>Initializes a new instance of type StubXmlConfigurationDeserializer</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Configuration.Xml.Fakes.StubXmlConfigurationDeserializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPair`2">
            <summary>Shim type of Castle.Core.Pair`2</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.#ctor(Castle.Core.Pair{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimPair`2.Bind(System.IEquatable{Castle.Core.Pair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.ConstructorT0T1">
            <summary>Sets the shim of Pair`2.Pair`2(!0 first, !1 second)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.EqualsObject">
            <summary>Sets the shim of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.EqualsPairOfT0T1">
            <summary>Sets the shim of Pair`2.Equals(Pair`2&lt;!0,!1&gt; other)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.FirstGet">
            <summary>Sets the shim of Pair`2.get_First()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.GetHashCode">
            <summary>Sets the shim of Pair`2.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.SecondGet">
            <summary>Sets the shim of Pair`2.get_Second()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.ToString">
            <summary>Sets the shim of Pair`2.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimPair`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.EqualsObject">
            <summary>Sets the shim of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.EqualsPairOfT0T1">
            <summary>Sets the shim of Pair`2.Equals(Pair`2&lt;!0,!1&gt; other)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.FirstGet">
            <summary>Sets the shim of Pair`2.get_First()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.GetHashCode01">
            <summary>Sets the shim of Pair`2.GetHashCode()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.SecondGet">
            <summary>Sets the shim of Pair`2.get_Second()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimPair`2.AllInstances.ToString01">
            <summary>Sets the shim of Pair`2.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimProxyServices">
            <summary>Shim type of Castle.Core.ProxyServices</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimProxyServices.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimProxyServices.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimProxyServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimProxyServices.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimProxyServices.IsDynamicProxyType">
            <summary>Sets the shim of ProxyServices.IsDynamicProxy(Type type)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimReferenceEqualityComparer`1">
            <summary>Shim type of Castle.Core.ReferenceEqualityComparer`1</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.#ctor(Castle.Core.ReferenceEqualityComparer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.Bind(System.Collections.IEqualityComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.Constructor">
            <summary>Sets the shim of ReferenceEqualityComparer`1.ReferenceEqualityComparer`1()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.GetHashCodeObject">
            <summary>Sets the shim of ReferenceEqualityComparer`1.GetHashCode(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.InstanceGet">
            <summary>Sets the shim of ReferenceEqualityComparer`1.get_Instance()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.StaticConstructor">
            <summary>Sets the shim of ReferenceEqualityComparer`1.ReferenceEqualityComparer`1()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.SystemCollectionsGenericIEqualityComparerTEqualsT0T0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.System.Collections.Generic.IEqualityComparer&lt;T&gt;.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.SystemCollectionsGenericIEqualityComparerTGetHashCodeT0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.System.Collections.Generic.IEqualityComparer&lt;T&gt;.GetHashCode(!0 obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.SystemCollectionsIEqualityComparerEqualsObjectObject">
            <summary>Sets the shim of ReferenceEqualityComparer`1.System.Collections.IEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.AllInstances.GetHashCodeObject">
            <summary>Sets the shim of ReferenceEqualityComparer`1.GetHashCode(Object obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.AllInstances.SystemCollectionsGenericIEqualityComparerTEqualsT0T0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.System.Collections.Generic.IEqualityComparer&lt;T&gt;.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.AllInstances.SystemCollectionsGenericIEqualityComparerTGetHashCodeT0">
            <summary>Sets the shim of ReferenceEqualityComparer`1.System.Collections.Generic.IEqualityComparer&lt;T&gt;.GetHashCode(!0 obj)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReferenceEqualityComparer`1.AllInstances.SystemCollectionsIEqualityComparerEqualsObjectObject">
            <summary>Sets the shim of ReferenceEqualityComparer`1.System.Collections.IEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter">
            <summary>Shim type of Castle.Core.ReflectionBasedDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.#ctor(Castle.Core.ReflectionBasedDictionaryAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AddObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.Clear">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ConstructorObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.ReflectionBasedDictionaryAdapter(Object target)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ContainsObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.CountGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.GetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.GetPropertyValueObjectPropertyInfo">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.GetPropertyValue(Object target, PropertyInfo property)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.GetReadablePropertiesType">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.GetReadableProperties(Type targetType)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsReadablePropertyInfo">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.IsReadable(PropertyInfo property)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ItemGetObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.KeysGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ReadIDictionaryObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Read(IDictionary targetDictionary, Object valuesAsAnonymousObject)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.RemoveObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.SyncRootGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.ValuesGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.AddObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.Clear">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ContainsObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.CountGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ItemGetObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.KeysGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.RemoveObject">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.SyncRootGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimReflectionBasedDictionaryAdapter.AllInstances.ValuesGet">
            <summary>Sets the shim of ReflectionBasedDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter">
            <summary>Shim type of Castle.Core.StringObjectDictionaryAdapter</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.#ctor(Castle.Core.StringObjectDictionaryAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AddObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.Clear">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ConstructorIDictionary">
            <summary>Sets the shim of StringObjectDictionaryAdapter.StringObjectDictionaryAdapter(IDictionary dictionary)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ContainsObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.CopyToArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.CountGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.GetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.IsFixedSizeGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.IsReadOnlyGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.IsSynchronizedGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemGetObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemSetObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectgetString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectsetStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.KeysGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.KeysSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.RemoveObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SyncRootGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectAddKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectCopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectRemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectAddStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectContainsKeyString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectRemoveString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIDictionarySystemStringSystemObjectTryGetValueStringObjectOut">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ValuesGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.ValuesSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.AddObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Add(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.Clear">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Clear()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ContainsObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Contains(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.CountGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Count()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.GetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsFixedSize()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_IsSynchronized()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemGetObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Item(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemSetObjectObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectgetString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Item(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ItemSystemCollectionsGenericIDictionarySystemStringSystemObjectsetStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.KeysGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.KeysSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Keys()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.RemoveObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.Remove(Object key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SyncRootGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_SyncRoot()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectAddKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectCopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairSystemStringSystemObjectRemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectAddStringObject">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Add(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectContainsKeyString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.ContainsKey(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectRemoveString">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.Remove(String key)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIDictionarySystemStringSystemObjectTryGetValueStringObjectOut">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairSystemStringSystemObjectGetEnumerator">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ValuesGet">
            <summary>Sets the shim of StringObjectDictionaryAdapter.get_Values()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.ShimStringObjectDictionaryAdapter.AllInstances.ValuesSystemCollectionsGenericIDictionarySystemStringSystemObjectget">
            <summary>Sets the shim of StringObjectDictionaryAdapter.System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;.get_Values()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIServiceEnabledComponent">
            <summary>Stub type of Castle.Core.IServiceEnabledComponent</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceEnabledComponent.#ctor">
            <summary>Initializes a new instance of type StubIServiceEnabledComponent</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceEnabledComponent.cc::Castle#Core#IServiceEnabledComponent#Service(System.IServiceProvider)">
            <summary>Sets the stub of IServiceEnabledComponent.Service(IServiceProvider provider)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIServiceEnabledComponent.ServiceIServiceProvider">
            <summary>Sets the stub of IServiceEnabledComponent.Service(IServiceProvider provider)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIServiceProviderEx">
            <summary>Stub type of Castle.Core.IServiceProviderEx</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.#ctor">
            <summary>Initializes a new instance of type StubIServiceProviderEx</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.cc::Castle#Core#IServiceProviderEx#GetService``1">
            <summary>Sets the stub of IServiceProviderEx.GetService()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.GetServiceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetService()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIServiceProviderEx.GetServiceType">
            <summary>Sets the stub of IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderEx.global::System#IServiceProvider#GetService(System.Type)">
            <summary>Sets the stub of IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubIServiceProviderExAccessor">
            <summary>Stub type of Castle.Core.IServiceProviderExAccessor</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubIServiceProviderExAccessor.#ctor">
            <summary>Initializes a new instance of type StubIServiceProviderExAccessor</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubIServiceProviderExAccessor.ServiceProviderGet">
            <summary>Sets the stub of IServiceProviderExAccessor.get_ServiceProvider()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubIServiceProviderExAccessor.cc::Castle#Core#IServiceProviderExAccessor#ServiceProvider">
            <summary>Sets the stub of IServiceProviderExAccessor.get_ServiceProvider()</summary>
        </member>
        <member name="T:Castle.Core.Fakes.StubPair`2">
            <summary>Stub type of Castle.Core.Pair`2</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.#ctor(`0,`1)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.Equals(System.Object)">
            <summary>Sets the stub of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPair`2.EqualsObject">
            <summary>Sets the stub of Pair`2.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.GetHashCode">
            <summary>Sets the stub of Pair`2.GetHashCode()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPair`2.GetHashCode01">
            <summary>Sets the stub of Pair`2.GetHashCode()</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.InitializeStub">
            <summary>Initializes a new instance of type StubPair</summary>
        </member>
        <member name="M:Castle.Core.Fakes.StubPair`2.ToString">
            <summary>Sets the stub of Pair`2.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Fakes.StubPair`2.ToString01">
            <summary>Sets the stub of Pair`2.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPair`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPair`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Fakes.StubPair`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimAttributesUtil">
            <summary>Shim type of Castle.Core.Internal.AttributesUtil</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetAttributeOf1ICustomAttributeProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,``0})">
            <summary>Sets the shim of AttributesUtil.GetAttribute(ICustomAttributeProvider member)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetAttributesOf1ICustomAttributeProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,``0[]})">
            <summary>Sets the shim of AttributesUtil.GetAttributes(ICustomAttributeProvider member)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetTypeAttributeOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0})">
            <summary>Sets the shim of AttributesUtil.GetTypeAttribute(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetTypeAttributesOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,``0[]})">
            <summary>Sets the shim of AttributesUtil.GetTypeAttributes(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimAttributesUtil.HasAttributeOf1ICustomAttributeProvider``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,System.Boolean})">
            <summary>Sets the shim of AttributesUtil.HasAttribute(ICustomAttributeProvider member)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimAttributesUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetAttributeUsageType">
            <summary>Sets the shim of AttributesUtil.GetAttributeUsage(Type attributeType)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetInterfaceAttributesType">
            <summary>Sets the shim of AttributesUtil.GetInterfaceAttributes(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimAttributesUtil.GetTypeConverterMemberInfo">
            <summary>Sets the shim of AttributesUtil.GetTypeConverter(MemberInfo member)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimAttributesUtil.StaticConstructor">
            <summary>Sets the shim of AttributesUtil.AttributesUtil()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimCollectionExtensions">
            <summary>Shim type of Castle.Core.Internal.CollectionExtensions</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.ConvertAllOf2M0ArrayConverterOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Converter{``0,``1},``1[]})">
            <summary>Sets the shim of CollectionExtensions.ConvertAll(!!0[] items, Converter`2&lt;!!0,!!1&gt; transformation)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.FindAllOf1M0ArrayPredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Predicate{``0},``0[]})">
            <summary>Sets the shim of CollectionExtensions.FindAll(!!0[] items, Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.FindOf1M0ArrayPredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Predicate{``0},``0})">
            <summary>Sets the shim of CollectionExtensions.Find(!!0[] items, Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimCollectionExtensions.ForEachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>Sets the shim of CollectionExtensions.ForEach(IEnumerable`1&lt;!!0&gt; items, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimCollectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimCollectionExtensions.IsNullOrEmptyIEnumerable">
            <summary>Sets the shim of CollectionExtensions.IsNullOrEmpty(IEnumerable this)</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimInternalsVisible">
            <summary>Shim type of Castle.Core.Internal.InternalsVisible</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimInternalsVisible.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimInternalsVisible.#ctor(Castle.Core.Internal.InternalsVisible)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimInternalsVisible.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimInternalsVisible.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimInternalsVisible.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimInternalsVisible.Constructor">
            <summary>Sets the shim of InternalsVisible.InternalsVisible()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimInternalsVisible.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimLock">
            <summary>Shim type of Castle.Core.Internal.Lock</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLock.#ctor(Castle.Core.Internal.Lock)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLock.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimLock.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLock.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLock.Constructor">
            <summary>Sets the shim of Lock.Lock()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimLock.Create">
            <summary>Sets the shim of Lock.Create()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimLock.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.ShimPermissionUtil">
            <summary>Shim type of Castle.Core.Internal.PermissionUtil</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimPermissionUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimPermissionUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.ShimPermissionUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimPermissionUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.ShimPermissionUtil.IsGrantedIPermission">
            <summary>Sets the shim of PermissionUtil.IsGranted(IPermission permission)</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubILockHolder">
            <summary>Stub type of Castle.Core.Internal.ILockHolder</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubILockHolder.#ctor">
            <summary>Initializes a new instance of type StubILockHolder</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubILockHolder.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubILockHolder.LockAcquiredGet">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubILockHolder.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubILockHolder.cc::Castle#Core#Internal#ILockHolder#LockAcquired">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder">
            <summary>Stub type of Castle.Core.Internal.IUpgradeableLockHolder</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.#ctor">
            <summary>Initializes a new instance of type StubIUpgradeableLockHolder</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.cc::Castle#Core#Internal#IUpgradeableLockHolder#Upgrade">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.cc::Castle#Core#Internal#IUpgradeableLockHolder#Upgrade(System.Boolean)">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.LockAcquiredGet">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.Upgrade">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.UpgradeBoolean">
            <summary>Sets the stub of IUpgradeableLockHolder.Upgrade(Boolean waitForLock)</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubIUpgradeableLockHolder.cc::Castle#Core#Internal#ILockHolder#LockAcquired">
            <summary>Sets the stub of ILockHolder.get_LockAcquired()</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubInternalsVisible">
            <summary>Stub type of Castle.Core.Internal.InternalsVisible</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubInternalsVisible.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubInternalsVisible.InitializeStub">
            <summary>Initializes a new instance of type StubInternalsVisible</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubInternalsVisible.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubInternalsVisible.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubInternalsVisible.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Internal.Fakes.StubLock">
            <summary>Stub type of Castle.Core.Internal.Lock</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReading">
            <summary>Sets the stub of Lock.ForReading()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReading(System.Boolean)">
            <summary>Sets the stub of Lock.ForReading(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReading01">
            <summary>Sets the stub of Lock.ForReading()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReadingBoolean">
            <summary>Sets the stub of Lock.ForReading(Boolean waitForLock)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeable">
            <summary>Sets the stub of Lock.ForReadingUpgradeable()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeable(System.Boolean)">
            <summary>Sets the stub of Lock.ForReadingUpgradeable(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeable01">
            <summary>Sets the stub of Lock.ForReadingUpgradeable()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForReadingUpgradeableBoolean">
            <summary>Sets the stub of Lock.ForReadingUpgradeable(Boolean waitForLock)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForWriting">
            <summary>Sets the stub of Lock.ForWriting()</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.ForWriting(System.Boolean)">
            <summary>Sets the stub of Lock.ForWriting(Boolean waitForLock)</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForWriting01">
            <summary>Sets the stub of Lock.ForWriting()</summary>
        </member>
        <member name="F:Castle.Core.Internal.Fakes.StubLock.ForWritingBoolean">
            <summary>Sets the stub of Lock.ForWriting(Boolean waitForLock)</summary>
        </member>
        <member name="M:Castle.Core.Internal.Fakes.StubLock.InitializeStub">
            <summary>Initializes a new instance of type StubLock</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLock.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLock.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Internal.Fakes.StubLock.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.AbstractExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.#ctor(Castle.Core.Logging.AbstractExtendedLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.Bind(Castle.Core.Logging.IExtendedLoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateString">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateStringLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.CastleCoreLoggingILoggerFactoryCreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.Constructor">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.AbstractExtendedLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.CreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.GetConfigFileString">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.GetConfigFile(String fileName)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateString">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateStringLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CastleCoreLoggingILoggerFactoryCreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Castle.Core.Logging.ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CreateType">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractExtendedLoggerFactory.AllInstances.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.AbstractLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.#ctor(Castle.Core.Logging.AbstractLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.Constructor">
            <summary>Sets the shim of AbstractLoggerFactory.AbstractLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.CreateType">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.GetConfigFileString">
            <summary>Sets the shim of AbstractLoggerFactory.GetConfigFile(String fileName)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.AllInstances.CreateType">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimAbstractLoggerFactory.AllInstances.CreateTypeLoggerLevel">
            <summary>Sets the shim of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleFactory">
            <summary>Shim type of Castle.Core.Logging.ConsoleFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.#ctor(Castle.Core.Logging.ConsoleFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.Constructor">
            <summary>Sets the shim of ConsoleFactory.ConsoleFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.ConstructorLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.ConsoleFactory(LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateString">
            <summary>Sets the shim of ConsoleFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateType">
            <summary>Sets the shim of ConsoleFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.CreateTypeLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateString">
            <summary>Sets the shim of ConsoleFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateType">
            <summary>Sets the shim of ConsoleFactory.Create(Type type)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleFactory.AllInstances.CreateTypeLoggerLevel">
            <summary>Sets the shim of ConsoleFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleLogger">
            <summary>Shim type of Castle.Core.Logging.ConsoleLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.#ctor(Castle.Core.Logging.ConsoleLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimConsoleLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.Constructor">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.ConstructorLoggerLevel">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger(LoggerLevel logLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.ConstructorString">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of ConsoleLogger.ConsoleLogger(String name, LoggerLevel logLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.CreateChildLoggerString">
            <summary>Sets the shim of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimConsoleLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimConsoleLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger">
            <summary>Shim type of Castle.Core.Logging.DiagnosticsLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.#ctor(Castle.Core.Logging.DiagnosticsLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.ConstructorString">
            <summary>Sets the shim of DiagnosticsLogger.DiagnosticsLogger(String logName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.ConstructorStringString">
            <summary>Sets the shim of DiagnosticsLogger.DiagnosticsLogger(String logName, String source)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.ConstructorStringStringString">
            <summary>Sets the shim of DiagnosticsLogger.DiagnosticsLogger(String logName, String machineName, String source)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.CreateChildLoggerString">
            <summary>Sets the shim of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.Dispose">
            <summary>Sets the shim of DiagnosticsLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.DisposeBoolean">
            <summary>Sets the shim of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.TranslateLevelLoggerLevel">
            <summary>Sets the shim of DiagnosticsLogger.TranslateLevel(LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.Dispose">
            <summary>Sets the shim of DiagnosticsLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.DiagnosticsLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.#ctor(Castle.Core.Logging.DiagnosticsLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.Constructor">
            <summary>Sets the shim of DiagnosticsLoggerFactory.DiagnosticsLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.CreateString">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimDiagnosticsLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger">
            <summary>Shim type of Castle.Core.Logging.LevelFilteredLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.#ctor(Castle.Core.Logging.LevelFilteredLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ChangeNameString">
            <summary>Sets the shim of LevelFilteredLogger.ChangeName(String newName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.Constructor">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ConstructorLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger(LoggerLevel loggerLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ConstructorString">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.LevelFilteredLogger(String loggerName, LoggerLevel loggerLevel)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugString">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.DebugStringException">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorString">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.ErrorStringException">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalString">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.FatalStringException">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoString">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InfoStringException">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.InitializeLifetimeService">
            <summary>Sets the shim of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsDebugEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsErrorEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsFatalEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsInfoEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.IsWarnEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.LevelGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Level()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.LevelSetLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.set_Level(LoggerLevel value)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.LogLoggerLevelStringException">
            <summary>Sets the shim of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.NameGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnString">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.WarnStringException">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ChangeNameString">
            <summary>Sets the shim of LevelFilteredLogger.ChangeName(String newName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugString">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.DebugStringException">
            <summary>Sets the shim of LevelFilteredLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorString">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.ErrorStringException">
            <summary>Sets the shim of LevelFilteredLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalString">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.FatalStringException">
            <summary>Sets the shim of LevelFilteredLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoString">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InfoStringException">
            <summary>Sets the shim of LevelFilteredLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsDebugEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsErrorEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsFatalEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsInfoEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.IsWarnEnabledGet">
            <summary>Sets the shim of LevelFilteredLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.LevelGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Level()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.LevelSetLoggerLevel">
            <summary>Sets the shim of LevelFilteredLogger.set_Level(LoggerLevel value)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.LogLoggerLevelStringException">
            <summary>Sets the shim of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.NameGet">
            <summary>Sets the shim of LevelFilteredLogger.get_Name()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFormatStringObjectArray">
            <summary>Sets the shim of LevelFilteredLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnFuncOfString">
            <summary>Sets the shim of LevelFilteredLogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnString">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLevelFilteredLogger.AllInstances.WarnStringException">
            <summary>Sets the shim of LevelFilteredLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLoggerException">
            <summary>Shim type of Castle.Core.Logging.LoggerException</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.#ctor(Castle.Core.Logging.LoggerException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimLoggerException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.Constructor">
            <summary>Sets the shim of LoggerException.LoggerException()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of LoggerException.LoggerException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.ConstructorString">
            <summary>Sets the shim of LoggerException.LoggerException(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimLoggerException.ConstructorStringException">
            <summary>Sets the shim of LoggerException.LoggerException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimLoggerException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogFactory">
            <summary>Shim type of Castle.Core.Logging.NullLogFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.#ctor(Castle.Core.Logging.NullLogFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.Constructor">
            <summary>Sets the shim of NullLogFactory.NullLogFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.CreateString">
            <summary>Sets the shim of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.AllInstances.CreateString">
            <summary>Sets the shim of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogger">
            <summary>Shim type of Castle.Core.Logging.NullLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.#ctor(Castle.Core.Logging.NullLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.Bind(Castle.Core.Logging.IExtendedLogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimNullLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.Constructor">
            <summary>Sets the shim of NullLogger.NullLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.CreateChildLoggerString">
            <summary>Sets the shim of NullLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugFuncOfString">
            <summary>Sets the shim of NullLogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugString">
            <summary>Sets the shim of NullLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.DebugStringException">
            <summary>Sets the shim of NullLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorFuncOfString">
            <summary>Sets the shim of NullLogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorString">
            <summary>Sets the shim of NullLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ErrorStringException">
            <summary>Sets the shim of NullLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalFuncOfString">
            <summary>Sets the shim of NullLogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalString">
            <summary>Sets the shim of NullLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.FatalStringException">
            <summary>Sets the shim of NullLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.GlobalPropertiesGet">
            <summary>Sets the shim of NullLogger.get_GlobalProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoFuncOfString">
            <summary>Sets the shim of NullLogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoString">
            <summary>Sets the shim of NullLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.InfoStringException">
            <summary>Sets the shim of NullLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsDebugEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsErrorEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsFatalEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsInfoEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.IsWarnEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.StaticConstructor">
            <summary>Sets the shim of NullLogger.NullLogger()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ThreadPropertiesGet">
            <summary>Sets the shim of NullLogger.get_ThreadProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.ThreadStacksGet">
            <summary>Sets the shim of NullLogger.get_ThreadStacks()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnFuncOfString">
            <summary>Sets the shim of NullLogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnString">
            <summary>Sets the shim of NullLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.WarnStringException">
            <summary>Sets the shim of NullLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of NullLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugFuncOfString">
            <summary>Sets the shim of NullLogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugString">
            <summary>Sets the shim of NullLogger.Debug(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.DebugStringException">
            <summary>Sets the shim of NullLogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorFuncOfString">
            <summary>Sets the shim of NullLogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorString">
            <summary>Sets the shim of NullLogger.Error(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ErrorStringException">
            <summary>Sets the shim of NullLogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalFuncOfString">
            <summary>Sets the shim of NullLogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalString">
            <summary>Sets the shim of NullLogger.Fatal(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.FatalStringException">
            <summary>Sets the shim of NullLogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.GlobalPropertiesGet">
            <summary>Sets the shim of NullLogger.get_GlobalProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoFuncOfString">
            <summary>Sets the shim of NullLogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoString">
            <summary>Sets the shim of NullLogger.Info(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.InfoStringException">
            <summary>Sets the shim of NullLogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsDebugEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsErrorEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsFatalEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsInfoEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.IsWarnEnabledGet">
            <summary>Sets the shim of NullLogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ThreadPropertiesGet">
            <summary>Sets the shim of NullLogger.get_ThreadProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.ThreadStacksGet">
            <summary>Sets the shim of NullLogger.get_ThreadStacks()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatExceptionStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFormatStringObjectArray">
            <summary>Sets the shim of NullLogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnFuncOfString">
            <summary>Sets the shim of NullLogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnString">
            <summary>Sets the shim of NullLogger.Warn(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimNullLogger.AllInstances.WarnStringException">
            <summary>Sets the shim of NullLogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLogger">
            <summary>Shim type of Castle.Core.Logging.StreamLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.#ctor(Castle.Core.Logging.StreamLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLogger.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStream">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, Stream stream)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStreamEncoding">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStreamEncodingInt32">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, Stream stream, Encoding encoding, Int32 bufferSize)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.ConstructorStringStreamWriter">
            <summary>Sets the shim of StreamLogger.StreamLogger(String name, StreamWriter writer)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.CreateChildLoggerString">
            <summary>Sets the shim of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.Dispose">
            <summary>Sets the shim of StreamLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.DisposeBoolean">
            <summary>Sets the shim of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.Dispose">
            <summary>Sets the shim of StreamLogger.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.StreamLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.#ctor(Castle.Core.Logging.StreamLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.Constructor">
            <summary>Sets the shim of StreamLoggerFactory.StreamLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.CreateString">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimStreamLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLogger">
            <summary>Shim type of Castle.Core.Logging.TraceLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.#ctor(Castle.Core.Logging.TraceLogger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLogger.Bind(Castle.Core.Logging.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.ConstructorString">
            <summary>Sets the shim of TraceLogger.TraceLogger(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.ConstructorStringLoggerLevel">
            <summary>Sets the shim of TraceLogger.TraceLogger(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.CreateChildLoggerString">
            <summary>Sets the shim of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.Initialize">
            <summary>Sets the shim of TraceLogger.Initialize()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.InternalCreateChildLoggerString">
            <summary>Sets the shim of TraceLogger.InternalCreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.IsSourceConfiguredTraceSource">
            <summary>Sets the shim of TraceLogger.IsSourceConfigured(TraceSource source)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.LogLoggerLevelStringStringException">
            <summary>Sets the shim of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.MapLoggerLevelSourceLevels">
            <summary>Sets the shim of TraceLogger.MapLoggerLevel(SourceLevels level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.MapSourceLevelsLoggerLevel">
            <summary>Sets the shim of TraceLogger.MapSourceLevels(LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.MapTraceEventTypeLoggerLevel">
            <summary>Sets the shim of TraceLogger.MapTraceEventType(LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.ShortenNameString">
            <summary>Sets the shim of TraceLogger.ShortenName(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.StaticConstructor">
            <summary>Sets the shim of TraceLogger.TraceLogger()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.CreateChildLoggerString">
            <summary>Sets the shim of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.Initialize">
            <summary>Sets the shim of TraceLogger.Initialize()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.InternalCreateChildLoggerString">
            <summary>Sets the shim of TraceLogger.InternalCreateChildLogger(String loggerName)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLogger.AllInstances.LogLoggerLevelStringStringException">
            <summary>Sets the shim of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory">
            <summary>Shim type of Castle.Core.Logging.TraceLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.#ctor(Castle.Core.Logging.TraceLoggerFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.Bind(Castle.Core.Logging.ILoggerFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.Constructor">
            <summary>Sets the shim of TraceLoggerFactory.TraceLoggerFactory()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.CreateString">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.InternalCreateString">
            <summary>Sets the shim of TraceLoggerFactory.InternalCreate(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.InternalCreateStringLoggerLevel">
            <summary>Sets the shim of TraceLoggerFactory.InternalCreate(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances.CreateString">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances.CreateStringLoggerLevel">
            <summary>Sets the shim of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances.InternalCreateString">
            <summary>Sets the shim of TraceLoggerFactory.InternalCreate(String name)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.ShimTraceLoggerFactory.AllInstances.InternalCreateStringLoggerLevel">
            <summary>Sets the shim of TraceLoggerFactory.InternalCreate(String name, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.AbstractExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.Create(System.String)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.CreateString">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractExtendedLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractExtendedLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.AbstractLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.String)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateString">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubAbstractLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubConsoleFactory">
            <summary>Stub type of Castle.Core.Logging.ConsoleFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleFactory.#ctor(Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleFactory.InitializeStub">
            <summary>Initializes a new instance of type StubConsoleFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubConsoleLogger">
            <summary>Stub type of Castle.Core.Logging.ConsoleLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor(Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubConsoleLogger.CreateChildLoggerString">
            <summary>Sets the stub of ConsoleLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubConsoleLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.InitializeStub">
            <summary>Initializes a new instance of type StubConsoleLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubConsoleLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubConsoleLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of ConsoleLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubConsoleLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubDiagnosticsLogger">
            <summary>Stub type of Castle.Core.Logging.DiagnosticsLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.CreateChildLoggerString">
            <summary>Sets the stub of DiagnosticsLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.Dispose(System.Boolean)">
            <summary>Sets the stub of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.DisposeBoolean">
            <summary>Sets the stub of DiagnosticsLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InitializeStub">
            <summary>Initializes a new instance of type StubDiagnosticsLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of DiagnosticsLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.DiagnosticsLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.String)">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateString">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of DiagnosticsLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDiagnosticsLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubDiagnosticsLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIContextProperties">
            <summary>Stub type of Castle.Core.Logging.IContextProperties</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextProperties.#ctor">
            <summary>Initializes a new instance of type StubIContextProperties</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextProperties.ItemGetString">
            <summary>Sets the stub of IContextProperties.get_Item(String key)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextProperties.ItemSetStringObject">
            <summary>Sets the stub of IContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIContextProperties.Castle#Core#Logging#IContextProperties#Item(System.String)">
            <summary>Sets the stub of IContextProperties.get_Item(String key)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIContextStack">
            <summary>Stub type of Castle.Core.Logging.IContextStack</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.#ctor">
            <summary>Initializes a new instance of type StubIContextStack</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Clear">
            <summary>Sets the stub of IContextStack.Clear()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Pop">
            <summary>Sets the stub of IContextStack.Pop()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Push(System.String)">
            <summary>Sets the stub of IContextStack.Push(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.Clear">
            <summary>Sets the stub of IContextStack.Clear()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.CountGet">
            <summary>Sets the stub of IContextStack.get_Count()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.Pop">
            <summary>Sets the stub of IContextStack.Pop()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStack.PushString">
            <summary>Sets the stub of IContextStack.Push(String message)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIContextStack.cc::Castle#Core#Logging#IContextStack#Count">
            <summary>Sets the stub of IContextStack.get_Count()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIContextStacks">
            <summary>Stub type of Castle.Core.Logging.IContextStacks</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIContextStacks.#ctor">
            <summary>Initializes a new instance of type StubIContextStacks</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIContextStacks.ItemGetString">
            <summary>Sets the stub of IContextStacks.get_Item(String key)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIContextStacks.Castle#Core#Logging#IContextStacks#Item(System.String)">
            <summary>Sets the stub of IContextStacks.get_Item(String key)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIExtendedLogger">
            <summary>Stub type of Castle.Core.Logging.IExtendedLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.#ctor">
            <summary>Initializes a new instance of type StubIExtendedLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#CreateChildLogger(System.String)">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Debug(System.String)">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Debug(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Debug(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Error(System.String)">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Error(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Error(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String)">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Fatal(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Info(System.String)">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Info(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Info(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Warn(System.String)">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Warn(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#Warn(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.CreateChildLoggerString">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFormatStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugFuncOfString">
            <summary>Sets the stub of ILogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugString">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.DebugStringException">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFormatStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorFuncOfString">
            <summary>Sets the stub of ILogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorString">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ErrorStringException">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFormatStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalFuncOfString">
            <summary>Sets the stub of ILogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalString">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.FatalStringException">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.GlobalPropertiesGet">
            <summary>Sets the stub of IExtendedLogger.get_GlobalProperties()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFormatStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoFuncOfString">
            <summary>Sets the stub of ILogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoString">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.InfoStringException">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsDebugEnabledGet">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsErrorEnabledGet">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsFatalEnabledGet">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsInfoEnabledGet">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.IsWarnEnabledGet">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ThreadPropertiesGet">
            <summary>Sets the stub of IExtendedLogger.get_ThreadProperties()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.ThreadStacksGet">
            <summary>Sets the stub of IExtendedLogger.get_ThreadStacks()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFormatStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnFuncOfString">
            <summary>Sets the stub of ILogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnString">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLogger.WarnStringException">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#IExtendedLogger#GlobalProperties">
            <summary>Sets the stub of IExtendedLogger.get_GlobalProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsDebugEnabled">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsErrorEnabled">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsFatalEnabled">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsInfoEnabled">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#ILogger#IsWarnEnabled">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#IExtendedLogger#ThreadProperties">
            <summary>Sets the stub of IExtendedLogger.get_ThreadProperties()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubIExtendedLogger.cc::Castle#Core#Logging#IExtendedLogger#ThreadStacks">
            <summary>Sets the stub of IExtendedLogger.get_ThreadStacks()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.IExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.#ctor">
            <summary>Initializes a new instance of type StubIExtendedLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.String)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.Type)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#IExtendedLoggerFactory#Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String)">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateString">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateString01">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateStringLoggerLevel01">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateType">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateType01">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of IExtendedLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubIExtendedLoggerFactory.CreateTypeLoggerLevel01">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubILogger">
            <summary>Stub type of Castle.Core.Logging.ILogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.#ctor">
            <summary>Initializes a new instance of type StubILogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#CreateChildLogger(System.String)">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Debug(System.String)">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Debug(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Debug(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#DebugFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Error(System.String)">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Error(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Error(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#ErrorFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String)">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Fatal(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Fatal(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#FatalFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Info(System.String)">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Info(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Info(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#InfoFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Warn(System.String)">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Warn(System.Func{System.String})">
            <summary>Sets the stub of ILogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#Warn(System.String,System.Exception)">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#WarnFormat(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.CreateChildLoggerString">
            <summary>Sets the stub of ILogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFormatStringObjectArray">
            <summary>Sets the stub of ILogger.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugFuncOfString">
            <summary>Sets the stub of ILogger.Debug(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugString">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.DebugStringException">
            <summary>Sets the stub of ILogger.Debug(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFormatStringObjectArray">
            <summary>Sets the stub of ILogger.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorFuncOfString">
            <summary>Sets the stub of ILogger.Error(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorString">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.ErrorStringException">
            <summary>Sets the stub of ILogger.Error(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFormatStringObjectArray">
            <summary>Sets the stub of ILogger.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalFuncOfString">
            <summary>Sets the stub of ILogger.Fatal(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalString">
            <summary>Sets the stub of ILogger.Fatal(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.FatalStringException">
            <summary>Sets the stub of ILogger.Fatal(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFormatStringObjectArray">
            <summary>Sets the stub of ILogger.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoFuncOfString">
            <summary>Sets the stub of ILogger.Info(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoString">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.InfoStringException">
            <summary>Sets the stub of ILogger.Info(String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsDebugEnabledGet">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsErrorEnabledGet">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsFatalEnabledGet">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsInfoEnabledGet">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.IsWarnEnabledGet">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatExceptionIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatExceptionStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(Exception exception, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatIFormatProviderStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(IFormatProvider formatProvider, String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFormatStringObjectArray">
            <summary>Sets the stub of ILogger.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnFuncOfString">
            <summary>Sets the stub of ILogger.Warn(Func`1&lt;String&gt; messageFactory)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnString">
            <summary>Sets the stub of ILogger.Warn(String message)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILogger.WarnStringException">
            <summary>Sets the stub of ILogger.Warn(String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsDebugEnabled">
            <summary>Sets the stub of ILogger.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsErrorEnabled">
            <summary>Sets the stub of ILogger.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsFatalEnabled">
            <summary>Sets the stub of ILogger.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsInfoEnabled">
            <summary>Sets the stub of ILogger.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubILogger.cc::Castle#Core#Logging#ILogger#IsWarnEnabled">
            <summary>Sets the stub of ILogger.get_IsWarnEnabled()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubILoggerFactory">
            <summary>Stub type of Castle.Core.Logging.ILoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.#ctor">
            <summary>Initializes a new instance of type StubILoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String)">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubILoggerFactory.cc::Castle#Core#Logging#ILoggerFactory#Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateString">
            <summary>Sets the stub of ILoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of ILoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateType">
            <summary>Sets the stub of ILoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubILoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of ILoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubLevelFilteredLogger">
            <summary>Stub type of Castle.Core.Logging.LevelFilteredLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor(Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of LevelFilteredLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.CreateChildLoggerString">
            <summary>Sets the stub of LevelFilteredLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InitializeStub">
            <summary>Initializes a new instance of type StubLevelFilteredLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of LevelFilteredLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLevelFilteredLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubLoggerException">
            <summary>Stub type of Castle.Core.Logging.LoggerException</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubLoggerException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubLoggerException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.InitializeStub">
            <summary>Initializes a new instance of type StubLoggerException</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubLoggerException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubLoggerException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubLoggerException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubNullLogFactory">
            <summary>Stub type of Castle.Core.Logging.NullLogFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.String)">
            <summary>Sets the stub of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateString">
            <summary>Sets the stub of NullLogFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of NullLogFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubNullLogFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogFactory.InitializeStub">
            <summary>Initializes a new instance of type StubNullLogFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubNullLogger">
            <summary>Stub type of Castle.Core.Logging.NullLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogger.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubNullLogger.InitializeStub">
            <summary>Initializes a new instance of type StubNullLogger</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubNullLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubStreamLogger">
            <summary>Stub type of Castle.Core.Logging.StreamLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.StreamWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.Stream,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.#ctor(System.String,System.IO.Stream,System.Text.Encoding,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.CreateChildLoggerString">
            <summary>Sets the stub of StreamLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.Dispose(System.Boolean)">
            <summary>Sets the stub of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.DisposeBoolean">
            <summary>Sets the stub of StreamLogger.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.InitializeStub">
            <summary>Initializes a new instance of type StubStreamLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of StreamLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubStreamLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.StreamLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.String)">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateString">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of StreamLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubStreamLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubStreamLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubTraceLogger">
            <summary>Stub type of Castle.Core.Logging.TraceLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.#ctor(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.CreateChildLogger(System.String)">
            <summary>Sets the stub of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLogger.CreateChildLoggerString">
            <summary>Sets the stub of TraceLogger.CreateChildLogger(String loggerName)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.InitializeLifetimeService">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLogger.InitializeLifetimeService01">
            <summary>Sets the stub of LevelFilteredLogger.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.InitializeStub">
            <summary>Initializes a new instance of type StubTraceLogger</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLogger.Log(Castle.Core.Logging.LoggerLevel,System.String,System.String,System.Exception)">
            <summary>Sets the stub of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLogger.LogLoggerLevelStringStringException">
            <summary>Sets the stub of TraceLogger.Log(LoggerLevel loggerLevel, String loggerName, String message, Exception exception)</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Logging.Fakes.StubTraceLoggerFactory">
            <summary>Stub type of Castle.Core.Logging.TraceLoggerFactory</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.String)">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.Type)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.String,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.Create(System.Type,Castle.Core.Logging.LoggerLevel)">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateString">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateStringLoggerLevel">
            <summary>Sets the stub of TraceLoggerFactory.Create(String name, LoggerLevel level)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateType">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type)</summary>
        </member>
        <member name="F:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CreateTypeLoggerLevel">
            <summary>Sets the stub of AbstractLoggerFactory.Create(Type type, LoggerLevel level)</summary>
        </member>
        <member name="M:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.InitializeStub">
            <summary>Initializes a new instance of type StubTraceLoggerFactory</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Logging.Fakes.StubTraceLoggerFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractResource">
            <summary>Shim type of Castle.Core.Resource.AbstractResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.#ctor(Castle.Core.Resource.AbstractResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.Constructor">
            <summary>Sets the shim of AbstractResource.AbstractResource()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.Dispose">
            <summary>Sets the shim of AbstractResource.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.DisposeBoolean">
            <summary>Sets the shim of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.FileBasePathGet">
            <summary>Sets the shim of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.StaticConstructor">
            <summary>Sets the shim of AbstractResource.AbstractResource()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances.Dispose">
            <summary>Sets the shim of AbstractResource.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractResource.AllInstances.FileBasePathGet">
            <summary>Sets the shim of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractStreamResource">
            <summary>Shim type of Castle.Core.Resource.AbstractStreamResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.#ctor(Castle.Core.Resource.AbstractStreamResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.Constructor">
            <summary>Sets the shim of AbstractStreamResource.AbstractStreamResource()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.CreateStreamGet">
            <summary>Sets the shim of AbstractStreamResource.get_CreateStream()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.CreateStreamSetStreamFactory">
            <summary>Sets the shim of AbstractStreamResource.set_CreateStream(StreamFactory value)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.GetStreamReader">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.GetStreamReaderEncoding">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.CreateStreamGet">
            <summary>Sets the shim of AbstractStreamResource.get_CreateStream()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.CreateStreamSetStreamFactory">
            <summary>Sets the shim of AbstractStreamResource.set_CreateStream(StreamFactory value)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAbstractStreamResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource">
            <summary>Shim type of Castle.Core.Resource.AssemblyBundleResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.#ctor(Castle.Core.Resource.AssemblyBundleResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.ConstructorCustomUri">
            <summary>Sets the shim of AssemblyBundleResource.AssemblyBundleResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.CreateRelativeString">
            <summary>Sets the shim of AssemblyBundleResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.GetStreamReader">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.GetStreamReaderEncoding">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.ObtainAssemblyString">
            <summary>Sets the shim of AssemblyBundleResource.ObtainAssembly(String assemblyName)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of AssemblyBundleResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyBundleResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of AssemblyBundleResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResource">
            <summary>Shim type of Castle.Core.Resource.AssemblyResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.#ctor(Castle.Core.Resource.AssemblyResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConstructorCustomUri">
            <summary>Sets the shim of AssemblyResource.AssemblyResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConstructorCustomUriString">
            <summary>Sets the shim of AssemblyResource.AssemblyResource(CustomUri resource, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConstructorString">
            <summary>Sets the shim of AssemblyResource.AssemblyResource(String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConvertToPathString">
            <summary>Sets the shim of AssemblyResource.ConvertToPath(String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ConvertToResourceNameStringString">
            <summary>Sets the shim of AssemblyResource.ConvertToResourceName(String assembly, String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.CreateRelativeString">
            <summary>Sets the shim of AssemblyResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.CreateResourceFromPathStringString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromPath(String resource, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.CreateResourceFromUriCustomUriString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromUri(CustomUri resourcex, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.GetNameFoundStringArray">
            <summary>Sets the shim of AssemblyResource.GetNameFound(String[] names)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.GetSimpleNameString">
            <summary>Sets the shim of AssemblyResource.GetSimpleName(String assembly)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ObtainAssemblyString">
            <summary>Sets the shim of AssemblyResource.ObtainAssembly(String assemblyName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.ToString">
            <summary>Sets the shim of AssemblyResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.ConvertToPathString">
            <summary>Sets the shim of AssemblyResource.ConvertToPath(String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.ConvertToResourceNameStringString">
            <summary>Sets the shim of AssemblyResource.ConvertToResourceName(String assembly, String resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of AssemblyResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.CreateResourceFromPathStringString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromPath(String resource, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.CreateResourceFromUriCustomUriString">
            <summary>Sets the shim of AssemblyResource.CreateResourceFromUri(CustomUri resourcex, String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.GetNameFoundStringArray">
            <summary>Sets the shim of AssemblyResource.GetNameFound(String[] names)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.GetSimpleNameString">
            <summary>Sets the shim of AssemblyResource.GetSimpleName(String assembly)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResource.AllInstances.ToString01">
            <summary>Sets the shim of AssemblyResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory">
            <summary>Shim type of Castle.Core.Resource.AssemblyResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.#ctor(Castle.Core.Resource.AssemblyResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.Constructor">
            <summary>Sets the shim of AssemblyResourceFactory.AssemblyResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.CreateCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimAssemblyResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of AssemblyResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResource">
            <summary>Shim type of Castle.Core.Resource.ConfigResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.#ctor(Castle.Core.Resource.ConfigResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.Constructor">
            <summary>Sets the shim of ConfigResource.ConfigResource()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.ConstructorCustomUri">
            <summary>Sets the shim of ConfigResource.ConfigResource(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.ConstructorString">
            <summary>Sets the shim of ConfigResource.ConfigResource(String sectionName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.CreateRelativeString">
            <summary>Sets the shim of ConfigResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.GetStreamReader">
            <summary>Sets the shim of ConfigResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.GetStreamReaderEncoding">
            <summary>Sets the shim of ConfigResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.ToString">
            <summary>Sets the shim of ConfigResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of ConfigResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of ConfigResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of ConfigResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResource.AllInstances.ToString01">
            <summary>Sets the shim of ConfigResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResourceFactory">
            <summary>Shim type of Castle.Core.Resource.ConfigResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.#ctor(Castle.Core.Resource.ConfigResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.Constructor">
            <summary>Sets the shim of ConfigResourceFactory.ConfigResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.CreateCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimConfigResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of ConfigResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimCustomUri">
            <summary>Shim type of Castle.Core.Resource.CustomUri</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimCustomUri.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.ConstructorString">
            <summary>Sets the shim of CustomUri.CustomUri(String resourceIdentifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.HostGet">
            <summary>Sets the shim of CustomUri.get_Host()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.IsAssemblyGet">
            <summary>Sets the shim of CustomUri.get_IsAssembly()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.IsFileGet">
            <summary>Sets the shim of CustomUri.get_IsFile()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.IsUncGet">
            <summary>Sets the shim of CustomUri.get_IsUnc()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.ParseIdentifierString">
            <summary>Sets the shim of CustomUri.ParseIdentifier(String identifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.PathGet">
            <summary>Sets the shim of CustomUri.get_Path()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.SchemeGet">
            <summary>Sets the shim of CustomUri.get_Scheme()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.StaticConstructor">
            <summary>Sets the shim of CustomUri.CustomUri()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.HostGet">
            <summary>Sets the shim of CustomUri.get_Host()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.IsAssemblyGet">
            <summary>Sets the shim of CustomUri.get_IsAssembly()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.IsFileGet">
            <summary>Sets the shim of CustomUri.get_IsFile()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.IsUncGet">
            <summary>Sets the shim of CustomUri.get_IsUnc()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.ParseIdentifierString">
            <summary>Sets the shim of CustomUri.ParseIdentifier(String identifier)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.PathGet">
            <summary>Sets the shim of CustomUri.get_Path()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimCustomUri.AllInstances.SchemeGet">
            <summary>Sets the shim of CustomUri.get_Scheme()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResource">
            <summary>Shim type of Castle.Core.Resource.FileResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.#ctor(Castle.Core.Resource.FileResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CheckFileExistsString">
            <summary>Sets the shim of FileResource.CheckFileExists(String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorCustomUri">
            <summary>Sets the shim of FileResource.FileResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorCustomUriString">
            <summary>Sets the shim of FileResource.FileResource(CustomUri resource, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorString">
            <summary>Sets the shim of FileResource.FileResource(String resourceName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ConstructorStringString">
            <summary>Sets the shim of FileResource.FileResource(String resourceName, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CreateRelativeString">
            <summary>Sets the shim of FileResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CreateStreamFromPathStringString">
            <summary>Sets the shim of FileResource.CreateStreamFromPath(String resourcePath, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of FileResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.FileBasePathGet">
            <summary>Sets the shim of FileResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.ToString">
            <summary>Sets the shim of FileResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of FileResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.CreateStreamFromPathStringString">
            <summary>Sets the shim of FileResource.CreateStreamFromPath(String resourcePath, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of FileResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.FileBasePathGet">
            <summary>Sets the shim of FileResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResource.AllInstances.ToString01">
            <summary>Sets the shim of FileResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResourceFactory">
            <summary>Shim type of Castle.Core.Resource.FileResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.#ctor(Castle.Core.Resource.FileResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimFileResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of FileResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.Constructor">
            <summary>Sets the shim of FileResourceFactory.FileResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.CreateCustomUri">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of FileResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimFileResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of FileResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimResourceException">
            <summary>Shim type of Castle.Core.Resource.ResourceException</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.#ctor(Castle.Core.Resource.ResourceException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimResourceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.Constructor">
            <summary>Sets the shim of ResourceException.ResourceException()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ResourceException.ResourceException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.ConstructorString">
            <summary>Sets the shim of ResourceException.ResourceException(String message)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimResourceException.ConstructorStringException">
            <summary>Sets the shim of ResourceException.ResourceException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimResourceException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimStaticContentResource">
            <summary>Shim type of Castle.Core.Resource.StaticContentResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.#ctor(Castle.Core.Resource.StaticContentResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimStaticContentResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.ConstructorString">
            <summary>Sets the shim of StaticContentResource.StaticContentResource(String contents)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.CreateRelativeString">
            <summary>Sets the shim of StaticContentResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.GetStreamReader">
            <summary>Sets the shim of StaticContentResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.GetStreamReaderEncoding">
            <summary>Sets the shim of StaticContentResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of StaticContentResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances.GetStreamReader">
            <summary>Sets the shim of StaticContentResource.GetStreamReader()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimStaticContentResource.AllInstances.GetStreamReaderEncoding">
            <summary>Sets the shim of StaticContentResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResource">
            <summary>Shim type of Castle.Core.Resource.UncResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.#ctor(Castle.Core.Resource.UncResource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.Bind(Castle.Core.Resource.IResource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResource.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.CheckFileExistsString">
            <summary>Sets the shim of UncResource.CheckFileExists(String path)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorCustomUri">
            <summary>Sets the shim of UncResource.UncResource(CustomUri resource)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorCustomUriString">
            <summary>Sets the shim of UncResource.UncResource(CustomUri resource, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorString">
            <summary>Sets the shim of UncResource.UncResource(String resourceName)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ConstructorStringString">
            <summary>Sets the shim of UncResource.UncResource(String resourceName, String basePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.CreateRelativeString">
            <summary>Sets the shim of UncResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of UncResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.FileBasePathGet">
            <summary>Sets the shim of UncResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.ToString">
            <summary>Sets the shim of UncResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.CreateRelativeString">
            <summary>Sets the shim of UncResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.CreateStreamFromUriCustomUriString">
            <summary>Sets the shim of UncResource.CreateStreamFromUri(CustomUri resource, String rootPath)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.FileBasePathGet">
            <summary>Sets the shim of UncResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResource.AllInstances.ToString01">
            <summary>Sets the shim of UncResource.ToString()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResourceFactory">
            <summary>Shim type of Castle.Core.Resource.UncResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.#ctor(Castle.Core.Resource.UncResourceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.ShimUncResourceFactory.Bind(Castle.Core.Resource.IResourceFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AcceptCustomUri">
            <summary>Sets the shim of UncResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.Constructor">
            <summary>Sets the shim of UncResourceFactory.UncResourceFactory()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.CreateCustomUri">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.CreateCustomUriString">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances.AcceptCustomUri">
            <summary>Sets the shim of UncResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances.CreateCustomUri">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.ShimUncResourceFactory.AllInstances.CreateCustomUriString">
            <summary>Sets the shim of UncResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubAbstractResource">
            <summary>Stub type of Castle.Core.Resource.AbstractResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractResource.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractResource.CreateRelative(System.String)">
            <summary>Sets the stub of AbstractResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractResource.CreateRelativeString">
            <summary>Sets the stub of AbstractResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractResource.FileBasePathGet">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractResource.GetStreamReader">
            <summary>Sets the stub of AbstractResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of AbstractResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractResource.GetStreamReader01">
            <summary>Sets the stub of AbstractResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractResource.GetStreamReaderEncoding">
            <summary>Sets the stub of AbstractResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractResource.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractResource</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractResource.FileBasePath">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubAbstractStreamResource">
            <summary>Stub type of Castle.Core.Resource.AbstractStreamResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractStreamResource.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractStreamResource.CreateRelative(System.String)">
            <summary>Sets the stub of AbstractResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractStreamResource.CreateRelativeString">
            <summary>Sets the stub of AbstractResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractStreamResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractStreamResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractStreamResource.FileBasePathGet">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractStreamResource.GetStreamReader">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractStreamResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractStreamResource.GetStreamReader01">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAbstractStreamResource.GetStreamReaderEncoding">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAbstractStreamResource.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractStreamResource</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractStreamResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractStreamResource.FileBasePath">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractStreamResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAbstractStreamResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubAssemblyBundleResource">
            <summary>Stub type of Castle.Core.Resource.AssemblyBundleResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.CreateRelative(System.String)">
            <summary>Sets the stub of AssemblyBundleResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.CreateRelativeString">
            <summary>Sets the stub of AssemblyBundleResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.FileBasePathGet">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.GetStreamReader">
            <summary>Sets the stub of AssemblyBundleResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of AssemblyBundleResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.GetStreamReader01">
            <summary>Sets the stub of AssemblyBundleResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.GetStreamReaderEncoding">
            <summary>Sets the stub of AssemblyBundleResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyBundleResource</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.FileBasePath">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyBundleResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubAssemblyResource">
            <summary>Stub type of Castle.Core.Resource.AssemblyResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.#ctor(Castle.Core.Resource.CustomUri,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.CreateRelative(System.String)">
            <summary>Sets the stub of AssemblyResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyResource.CreateRelativeString">
            <summary>Sets the stub of AssemblyResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyResource.FileBasePathGet">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.GetStreamReader">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyResource.GetStreamReader01">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyResource.GetStreamReaderEncoding">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResource.ToString">
            <summary>Sets the stub of AssemblyResource.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubAssemblyResource.ToString01">
            <summary>Sets the stub of AssemblyResource.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResource.FileBasePath">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory">
            <summary>Stub type of Castle.Core.Resource.AssemblyResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubAssemblyResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubConfigResource">
            <summary>Stub type of Castle.Core.Resource.ConfigResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.CreateRelative(System.String)">
            <summary>Sets the stub of ConfigResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubConfigResource.CreateRelativeString">
            <summary>Sets the stub of ConfigResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubConfigResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubConfigResource.FileBasePathGet">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.GetStreamReader">
            <summary>Sets the stub of ConfigResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of ConfigResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubConfigResource.GetStreamReader01">
            <summary>Sets the stub of ConfigResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubConfigResource.GetStreamReaderEncoding">
            <summary>Sets the stub of ConfigResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.InitializeStub">
            <summary>Initializes a new instance of type StubConfigResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResource.ToString">
            <summary>Sets the stub of ConfigResource.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubConfigResource.ToString01">
            <summary>Sets the stub of ConfigResource.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResource.FileBasePath">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubConfigResourceFactory">
            <summary>Stub type of Castle.Core.Resource.ConfigResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubConfigResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubConfigResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubConfigResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubFileResource">
            <summary>Stub type of Castle.Core.Resource.FileResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.#ctor(Castle.Core.Resource.CustomUri,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.CreateRelative(System.String)">
            <summary>Sets the stub of FileResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubFileResource.CreateRelativeString">
            <summary>Sets the stub of FileResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubFileResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubFileResource.FileBasePathGet">
            <summary>Sets the stub of FileResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.GetStreamReader">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubFileResource.GetStreamReader01">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubFileResource.GetStreamReaderEncoding">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.InitializeStub">
            <summary>Initializes a new instance of type StubFileResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResource.ToString">
            <summary>Sets the stub of FileResource.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubFileResource.ToString01">
            <summary>Sets the stub of FileResource.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResource.FileBasePath">
            <summary>Sets the stub of FileResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubFileResourceFactory">
            <summary>Stub type of Castle.Core.Resource.FileResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubFileResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubFileResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubFileResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubIResource">
            <summary>Stub type of Castle.Core.Resource.IResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResource.#ctor">
            <summary>Initializes a new instance of type StubIResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResource.cc::Castle#Core#Resource#IResource#CreateRelative(System.String)">
            <summary>Sets the stub of IResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResource.cc::Castle#Core#Resource#IResource#GetStreamReader">
            <summary>Sets the stub of IResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResource.cc::Castle#Core#Resource#IResource#GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of IResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResource.CreateRelativeString">
            <summary>Sets the stub of IResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResource.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResource.FileBasePathGet">
            <summary>Sets the stub of IResource.get_FileBasePath()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResource.GetStreamReader">
            <summary>Sets the stub of IResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResource.GetStreamReaderEncoding">
            <summary>Sets the stub of IResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResource.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubIResource.cc::Castle#Core#Resource#IResource#FileBasePath">
            <summary>Sets the stub of IResource.get_FileBasePath()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubIResourceFactory">
            <summary>Stub type of Castle.Core.Resource.IResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.#ctor">
            <summary>Initializes a new instance of type StubIResourceFactory</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResourceFactory.AcceptCustomUri">
            <summary>Sets the stub of IResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.cc::Castle#Core#Resource#IResourceFactory#Accept(Castle.Core.Resource.CustomUri)">
            <summary>Sets the stub of IResourceFactory.Accept(CustomUri uri)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.cc::Castle#Core#Resource#IResourceFactory#Create(Castle.Core.Resource.CustomUri)">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubIResourceFactory.cc::Castle#Core#Resource#IResourceFactory#Create(Castle.Core.Resource.CustomUri,System.String)">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResourceFactory.CreateCustomUri">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubIResourceFactory.CreateCustomUriString">
            <summary>Sets the stub of IResourceFactory.Create(CustomUri uri, String basePath)</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubResourceException">
            <summary>Stub type of Castle.Core.Resource.ResourceException</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubResourceException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubResourceException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.InitializeStub">
            <summary>Initializes a new instance of type StubResourceException</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubResourceException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubResourceException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubResourceException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubStaticContentResource">
            <summary>Stub type of Castle.Core.Resource.StaticContentResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubStaticContentResource.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubStaticContentResource.CreateRelative(System.String)">
            <summary>Sets the stub of StaticContentResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubStaticContentResource.CreateRelativeString">
            <summary>Sets the stub of StaticContentResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubStaticContentResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubStaticContentResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubStaticContentResource.FileBasePathGet">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubStaticContentResource.GetStreamReader">
            <summary>Sets the stub of StaticContentResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubStaticContentResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of StaticContentResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubStaticContentResource.GetStreamReader01">
            <summary>Sets the stub of StaticContentResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubStaticContentResource.GetStreamReaderEncoding">
            <summary>Sets the stub of StaticContentResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubStaticContentResource.InitializeStub">
            <summary>Initializes a new instance of type StubStaticContentResource</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubStaticContentResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubStaticContentResource.FileBasePath">
            <summary>Sets the stub of AbstractResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubStaticContentResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubStaticContentResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubUncResource">
            <summary>Stub type of Castle.Core.Resource.UncResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.#ctor(Castle.Core.Resource.CustomUri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.#ctor(Castle.Core.Resource.CustomUri,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.CreateRelative(System.String)">
            <summary>Sets the stub of UncResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubUncResource.CreateRelativeString">
            <summary>Sets the stub of UncResource.CreateRelative(String relativePath)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.Dispose(System.Boolean)">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubUncResource.DisposeBoolean">
            <summary>Sets the stub of AbstractResource.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubUncResource.FileBasePathGet">
            <summary>Sets the stub of UncResource.get_FileBasePath()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.GetStreamReader">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.GetStreamReader(System.Text.Encoding)">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubUncResource.GetStreamReader01">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubUncResource.GetStreamReaderEncoding">
            <summary>Sets the stub of AbstractStreamResource.GetStreamReader(Encoding encoding)</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.InitializeStub">
            <summary>Initializes a new instance of type StubUncResource</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResource.ToString">
            <summary>Sets the stub of UncResource.ToString()</summary>
        </member>
        <member name="F:Castle.Core.Resource.Fakes.StubUncResource.ToString01">
            <summary>Sets the stub of UncResource.ToString()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResource.FileBasePath">
            <summary>Sets the stub of UncResource.get_FileBasePath()</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Resource.Fakes.StubUncResourceFactory">
            <summary>Stub type of Castle.Core.Resource.UncResourceFactory</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResourceFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Resource.Fakes.StubUncResourceFactory.InitializeStub">
            <summary>Initializes a new instance of type StubUncResourceFactory</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResourceFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResourceFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Resource.Fakes.StubUncResourceFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender">
            <summary>Shim type of Castle.Core.Smtp.DefaultSmtpSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.#ctor(Castle.Core.Smtp.DefaultSmtpSender)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.Bind(Castle.Core.Smtp.IEmailSender)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AsyncSendGet">
            <summary>Sets the shim of DefaultSmtpSender.get_AsyncSend()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AsyncSendSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_AsyncSend(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.CanAccessCredentials">
            <summary>Sets the shim of DefaultSmtpSender.CanAccessCredentials()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.ConfigureSmtpClient">
            <summary>Sets the shim of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.Constructor">
            <summary>Sets the shim of DefaultSmtpSender.DefaultSmtpSender()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.ConstructorString">
            <summary>Sets the shim of DefaultSmtpSender.DefaultSmtpSender(String hostname)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.DomainGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Domain()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.DomainSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Domain(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.HasCredentialsGet">
            <summary>Sets the shim of DefaultSmtpSender.get_HasCredentials()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.HostnameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Hostname()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.InternalSendMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.InternalSend(MailMessage message)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PasswordGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Password()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PasswordSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Password(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PortGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Port()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.PortSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.SendIEnumerableOfMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.SendMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(MailMessage message)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.SendStringStringStringString">
            <summary>Sets the shim of DefaultSmtpSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.TimeoutGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Timeout()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.TimeoutSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UseSslGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UseSsl()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UseSslSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_UseSsl(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UserNameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UserName()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.UserNameSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_UserName(String value)</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.AsyncSendGet">
            <summary>Sets the shim of DefaultSmtpSender.get_AsyncSend()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.AsyncSendSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_AsyncSend(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.ConfigureSmtpClient">
            <summary>Sets the shim of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.DomainGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Domain()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.DomainSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Domain(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.HasCredentialsGet">
            <summary>Sets the shim of DefaultSmtpSender.get_HasCredentials()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.HostnameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Hostname()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.InternalSendMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.InternalSend(MailMessage message)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PasswordGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Password()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PasswordSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_Password(String value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PortGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Port()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.PortSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.SendIEnumerableOfMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.SendMailMessage">
            <summary>Sets the shim of DefaultSmtpSender.Send(MailMessage message)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.SendStringStringStringString">
            <summary>Sets the shim of DefaultSmtpSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.TimeoutGet">
            <summary>Sets the shim of DefaultSmtpSender.get_Timeout()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of DefaultSmtpSender.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UseSslGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UseSsl()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UseSslSetBoolean">
            <summary>Sets the shim of DefaultSmtpSender.set_UseSsl(Boolean value)</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UserNameGet">
            <summary>Sets the shim of DefaultSmtpSender.get_UserName()</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.ShimDefaultSmtpSender.AllInstances.UserNameSetString">
            <summary>Sets the shim of DefaultSmtpSender.set_UserName(String value)</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender">
            <summary>Stub type of Castle.Core.Smtp.DefaultSmtpSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.Configure(System.Net.Mail.SmtpClient)">
            <summary>Sets the stub of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.ConfigureSmtpClient">
            <summary>Sets the stub of DefaultSmtpSender.Configure(SmtpClient smtpClient)</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultSmtpSender</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.Core.Smtp.Fakes.StubDefaultSmtpSender.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.Core.Smtp.Fakes.StubIEmailSender">
            <summary>Stub type of Castle.Core.Smtp.IEmailSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.#ctor">
            <summary>Initializes a new instance of type StubIEmailSender</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.cc::Castle#Core#Smtp#IEmailSender#Send(System.Net.Mail.MailMessage)">
            <summary>Sets the stub of IEmailSender.Send(MailMessage message)</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.cc::Castle#Core#Smtp#IEmailSender#Send(System.Collections.Generic.IEnumerable{System.Net.Mail.MailMessage})">
            <summary>Sets the stub of IEmailSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="M:Castle.Core.Smtp.Fakes.StubIEmailSender.cc::Castle#Core#Smtp#IEmailSender#Send(System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubIEmailSender.SendIEnumerableOfMailMessage">
            <summary>Sets the stub of IEmailSender.Send(IEnumerable`1&lt;MailMessage&gt; messages)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubIEmailSender.SendMailMessage">
            <summary>Sets the stub of IEmailSender.Send(MailMessage message)</summary>
        </member>
        <member name="F:Castle.Core.Smtp.Fakes.StubIEmailSender.SendStringStringStringString">
            <summary>Sets the stub of IEmailSender.Send(String from, String to, String subject, String messageText)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector">
            <summary>Shim type of Castle.DynamicProxy.Contributors.ClassMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.#ctor(Castle.DynamicProxy.Contributors.ClassMembersCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.ConstructorType">
            <summary>Sets the shim of ClassMembersCollector.ClassMembersCollector(Type targetType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of ClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassMembersCollector.AllInstances.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of ClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.#ctor(Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the shim of ClassProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.ConstructorClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.Constructor(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.ConstructorTypeIListOfMethodInfoTypeArrayString">
            <summary>Sets the shim of ClassProxyInstanceContributor.ClassProxyInstanceContributor(Type targetType, IList`1&lt;MethodInfo&gt; methodsToSkip, Type[] interfaces, String typeId)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.EmitCallToBaseGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReference">
            <summary>Sets the shim of ClassProxyInstanceContributor.EmitCallToBaseGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.EmitCustomGetObjectDataAbstractCodeBuilderArgumentReference">
            <summary>Sets the shim of ClassProxyInstanceContributor.EmitCustomGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.GenerateSerializationConstructorClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.GenerateSerializationConstructor(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.IsDelegateType">
            <summary>Sets the shim of ClassProxyInstanceContributor.IsDelegate(Type baseType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.VerifyIfBaseImplementsGetObjectDataTypeIListOfMethodInfo">
            <summary>Sets the shim of ClassProxyInstanceContributor.VerifyIfBaseImplementsGetObjectData(Type baseType, IList`1&lt;MethodInfo&gt; methodsToSkip)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the shim of ClassProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.ConstructorClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.Constructor(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.EmitCallToBaseGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReference">
            <summary>Sets the shim of ClassProxyInstanceContributor.EmitCallToBaseGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.EmitCustomGetObjectDataAbstractCodeBuilderArgumentReference">
            <summary>Sets the shim of ClassProxyInstanceContributor.EmitCustomGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.GenerateSerializationConstructorClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.GenerateSerializationConstructor(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the shim of ClassProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.IsDelegateType">
            <summary>Sets the shim of ClassProxyInstanceContributor.IsDelegate(Type baseType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyInstanceContributor.AllInstances.VerifyIfBaseImplementsGetObjectDataTypeIListOfMethodInfo">
            <summary>Sets the shim of ClassProxyInstanceContributor.VerifyIfBaseImplementsGetObjectData(Type baseType, IList`1&lt;MethodInfo&gt; methodsToSkip)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.ClassProxyTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.#ctor(Castle.DynamicProxy.Contributors.ClassProxyTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.BuildInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyTargetContributor.BuildInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of ClassProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.ConstructorTypeIListOfMethodInfoINamingScope">
            <summary>Sets the shim of ClassProxyTargetContributor.ClassProxyTargetContributor(Type targetType, IList`1&lt;MethodInfo&gt; methodsToSkip, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.CreateCallbackMethodClassEmitterMethodInfoMethodInfo">
            <summary>Sets the shim of ClassProxyTargetContributor.CreateCallbackMethod(ClassEmitter emitter, MethodInfo methodInfo, MethodInfo methodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.ExplicitlyImplementedInterfaceMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyTargetContributor.ExplicitlyImplementedInterfaceMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.ExplicitlyImplementedInterfaceMethodMetaMethod">
            <summary>Sets the shim of ClassProxyTargetContributor.ExplicitlyImplementedInterfaceMethod(MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.GetContributorTypeMetaMethod">
            <summary>Sets the shim of ClassProxyTargetContributor.GetContributor(Type delegate, MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.GetDelegateTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyTargetContributor.GetDelegateType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor._ExplicitlyImplementedInterfaceMethodGeneratorb__bClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyTargetContributor.&lt;ExplicitlyImplementedInterfaceMethodGenerator&gt;b__b(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor._GetMethodGeneratorb__aClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyTargetContributor.&lt;GetMethodGenerator&gt;b__a(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.BuildInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyTargetContributor.BuildInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of ClassProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.CreateCallbackMethodClassEmitterMethodInfoMethodInfo">
            <summary>Sets the shim of ClassProxyTargetContributor.CreateCallbackMethod(ClassEmitter emitter, MethodInfo methodInfo, MethodInfo methodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.ExplicitlyImplementedInterfaceMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyTargetContributor.ExplicitlyImplementedInterfaceMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.ExplicitlyImplementedInterfaceMethodMetaMethod">
            <summary>Sets the shim of ClassProxyTargetContributor.ExplicitlyImplementedInterfaceMethod(MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.GetContributorTypeMetaMethod">
            <summary>Sets the shim of ClassProxyTargetContributor.GetContributor(Type delegate, MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.GetDelegateTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyTargetContributor.GetDelegateType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances._ExplicitlyImplementedInterfaceMethodGeneratorb__bClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyTargetContributor.&lt;ExplicitlyImplementedInterfaceMethodGenerator&gt;b__b(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyTargetContributor.AllInstances._GetMethodGeneratorb__aClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyTargetContributor.&lt;GetMethodGenerator&gt;b__a(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.#ctor(Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.BuildInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.BuildInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.ConstructorTypeIListOfMethodInfoINamingScope">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.ClassProxyWithTargetTargetContributor(Type targetType, IList`1&lt;MethodInfo&gt; methodsToSkip, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.GetContributorTypeMetaMethod">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetContributor(Type delegate, MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.GetDelegateTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetDelegateType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.IndirectlyCalledMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.IndirectlyCalledMethodGenerator(MetaMethod method, ClassEmitter proxy, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.IsDirectlyAccessibleMetaMethod">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.IsDirectlyAccessible(MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor._GetMethodGeneratorb__aClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.&lt;GetMethodGenerator&gt;b__a(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor._IndirectlyCalledMethodGeneratorb__cClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.&lt;IndirectlyCalledMethodGenerator&gt;b__c(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.BuildInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.BuildInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.GetContributorTypeMetaMethod">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetContributor(Type delegate, MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.GetDelegateTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetDelegateType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.IndirectlyCalledMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.IndirectlyCalledMethodGenerator(MetaMethod method, ClassEmitter proxy, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimClassProxyWithTargetTargetContributor.AllInstances.IsDirectlyAccessibleMetaMethod">
            <summary>Sets the shim of ClassProxyWithTargetTargetContributor.IsDirectlyAccessible(MetaMethod method)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.CompositeTypeContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.#ctor(Castle.DynamicProxy.Contributors.CompositeTypeContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AddInterfaceToProxyType">
            <summary>Sets the shim of CompositeTypeContributor.AddInterfaceToProxy(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.CollectElementsToProxyIProxyGenerationHookMetaType">
            <summary>Sets the shim of CompositeTypeContributor.CollectElementsToProxy(IProxyGenerationHook hook, MetaType model)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.ConstructorINamingScope">
            <summary>Sets the shim of CompositeTypeContributor.CompositeTypeContributor(INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.ImplementEventClassEmitterMetaEventProxyGenerationOptions">
            <summary>Sets the shim of CompositeTypeContributor.ImplementEvent(ClassEmitter emitter, MetaEvent event, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.ImplementMethodMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of CompositeTypeContributor.ImplementMethod(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.ImplementPropertyClassEmitterMetaPropertyProxyGenerationOptions">
            <summary>Sets the shim of CompositeTypeContributor.ImplementProperty(ClassEmitter emitter, MetaProperty property, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.LoggerGet">
            <summary>Sets the shim of CompositeTypeContributor.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.LoggerSetILogger">
            <summary>Sets the shim of CompositeTypeContributor.set_Logger(ILogger value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.AddInterfaceToProxyType">
            <summary>Sets the shim of CompositeTypeContributor.AddInterfaceToProxy(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.CollectElementsToProxyIProxyGenerationHookMetaType">
            <summary>Sets the shim of CompositeTypeContributor.CollectElementsToProxy(IProxyGenerationHook hook, MetaType model)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.ImplementEventClassEmitterMetaEventProxyGenerationOptions">
            <summary>Sets the shim of CompositeTypeContributor.ImplementEvent(ClassEmitter emitter, MetaEvent event, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.ImplementMethodMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of CompositeTypeContributor.ImplementMethod(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.ImplementPropertyClassEmitterMetaPropertyProxyGenerationOptions">
            <summary>Sets the shim of CompositeTypeContributor.ImplementProperty(ClassEmitter emitter, MetaProperty property, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.LoggerGet">
            <summary>Sets the shim of CompositeTypeContributor.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimCompositeTypeContributor.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of CompositeTypeContributor.set_Logger(ILogger value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.DelegateProxyTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.#ctor(Castle.DynamicProxy.Contributors.DelegateProxyTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of DelegateProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.ConstructorTypeINamingScope">
            <summary>Sets the shim of DelegateProxyTargetContributor.DelegateProxyTargetContributor(Type targetType, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of DelegateProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter emitter, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of DelegateProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor._GetMethodGeneratorb__5ClassEmitterMethodInfo">
            <summary>Sets the shim of DelegateProxyTargetContributor.&lt;GetMethodGenerator&gt;b__5(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.AllInstances.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of DelegateProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.AllInstances.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of DelegateProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter emitter, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateProxyTargetContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of DelegateProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator">
            <summary>Shim type of Castle.DynamicProxy.Contributors.DelegateTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.#ctor(Castle.DynamicProxy.Contributors.DelegateTypeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.BuildConstructorAbstractTypeEmitter">
            <summary>Sets the shim of DelegateTypeGenerator.BuildConstructor(AbstractTypeEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.BuildInvokeMethodAbstractTypeEmitter">
            <summary>Sets the shim of DelegateTypeGenerator.BuildInvokeMethod(AbstractTypeEmitter delegate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.ConstructorMetaMethodType">
            <summary>Sets the shim of DelegateTypeGenerator.DelegateTypeGenerator(MetaMethod method, Type targetType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of DelegateTypeGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.GetEmitterClassEmitterINamingScope">
            <summary>Sets the shim of DelegateTypeGenerator.GetEmitter(ClassEmitter class, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.GetParamTypesAbstractTypeEmitter">
            <summary>Sets the shim of DelegateTypeGenerator.GetParamTypes(AbstractTypeEmitter delegate)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.AllInstances.BuildConstructorAbstractTypeEmitter">
            <summary>Sets the shim of DelegateTypeGenerator.BuildConstructor(AbstractTypeEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.AllInstances.BuildInvokeMethodAbstractTypeEmitter">
            <summary>Sets the shim of DelegateTypeGenerator.BuildInvokeMethod(AbstractTypeEmitter delegate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.AllInstances.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of DelegateTypeGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.AllInstances.GetEmitterClassEmitterINamingScope">
            <summary>Sets the shim of DelegateTypeGenerator.GetEmitter(ClassEmitter class, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimDelegateTypeGenerator.AllInstances.GetParamTypesAbstractTypeEmitter">
            <summary>Sets the shim of DelegateTypeGenerator.GetParamTypes(AbstractTypeEmitter delegate)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator">
            <summary>Shim type of Castle.DynamicProxy.Contributors.ForwardingMethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.#ctor(Castle.DynamicProxy.Contributors.ForwardingMethodGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of ForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.ConstructorMetaMethodOverrideMethodDelegateGetTargetReferenceDelegate">
            <summary>Sets the shim of ForwardingMethodGenerator.ForwardingMethodGenerator(MetaMethod method, OverrideMethodDelegate overrideMethod, GetTargetReferenceDelegate getTargetReference)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimForwardingMethodGenerator.AllInstances.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of ForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.#ctor(Castle.DynamicProxy.Contributors.InterfaceMembersCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.ConstructorType">
            <summary>Sets the shim of InterfaceMembersCollector.InterfaceMembersCollector(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of InterfaceMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersCollector.AllInstances.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of InterfaceMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.#ctor(Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.ConstructorTypeBooleanInterfaceMapping">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.InterfaceMembersOnClassCollector(Type type, Boolean onlyProxyVirtual, InterfaceMapping map)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.GetMethodOnTargetMethodInfo">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.GetMethodOnTarget(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.IsVirtuallyImplementedInterfaceMethodMethodInfo">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.IsVirtuallyImplementedInterfaceMethod(MethodInfo method)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.AllInstances.GetMethodOnTargetMethodInfo">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.GetMethodOnTarget(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.AllInstances.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceMembersOnClassCollector.AllInstances.IsVirtuallyImplementedInterfaceMethodMethodInfo">
            <summary>Sets the shim of InterfaceMembersOnClassCollector.IsVirtuallyImplementedInterfaceMethod(MethodInfo method)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceProxyInstanceContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.#ctor(Castle.DynamicProxy.Contributors.InterfaceProxyInstanceContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.ConstructorTypeStringTypeArray">
            <summary>Sets the shim of InterfaceProxyInstanceContributor.InterfaceProxyInstanceContributor(Type targetType, String proxyGeneratorId, Type[] interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the shim of InterfaceProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the shim of InterfaceProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.AllInstances.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the shim of InterfaceProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyInstanceContributor.AllInstances.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the shim of InterfaceProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.#ctor(Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of InterfaceProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.ConstructorTypeBooleanINamingScope">
            <summary>Sets the shim of InterfaceProxyTargetContributor.InterfaceProxyTargetContributor(Type proxyTargetType, Boolean canChangeTarget, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.GetCollectorForInterfaceType">
            <summary>Sets the shim of InterfaceProxyTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of InterfaceProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor._GetMethodGeneratorb__7ClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyTargetContributor.&lt;GetMethodGenerator&gt;b__7(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor._GetMethodGeneratorb__8ClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyTargetContributor.&lt;GetMethodGenerator&gt;b__8(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.AllInstances.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of InterfaceProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.AllInstances.GetCollectorForInterfaceType">
            <summary>Sets the shim of InterfaceProxyTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.AllInstances.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of InterfaceProxyTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyTargetContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceProxyWithOptionalTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.#ctor(Castle.DynamicProxy.Contributors.InterfaceProxyWithOptionalTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.ConstructorINamingScopeGetTargetExpressionDelegateGetTargetReferenceDelegate">
            <summary>Sets the shim of InterfaceProxyWithOptionalTargetContributor.InterfaceProxyWithOptionalTargetContributor(INamingScope namingScope, GetTargetExpressionDelegate getTarget, GetTargetReferenceDelegate getTargetReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of InterfaceProxyWithOptionalTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithOptionalTargetContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of InterfaceProxyWithOptionalTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceProxyWithTargetInterfaceTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.#ctor(Castle.DynamicProxy.Contributors.InterfaceProxyWithTargetInterfaceTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.ConstructorTypeBooleanINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceTargetContributor.InterfaceProxyWithTargetInterfaceTargetContributor(Type proxyTargetType, Boolean allowChangeTarget, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterfaceType">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithTargetInterfaceTargetContributor.AllInstances.GetCollectorForInterfaceType">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.#ctor(Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.ConstructorINamingScopeGetTargetExpressionDelegate">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.InterfaceProxyWithoutTargetContributor(INamingScope namingScope, GetTargetExpressionDelegate getTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter emitter, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.AllInstances.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.AllInstances.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.GetInvocationType(MetaMethod method, ClassEmitter emitter, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInterfaceProxyWithoutTargetContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of InterfaceProxyWithoutTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.#ctor(Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.Bind(Castle.DynamicProxy.Generators.IInvocationCreationContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.BuildDelegateTokenClassEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.BuildDelegateToken(ClassEmitter proxy)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.ConstructorTypeTypeMetaMethodINamingScope">
            <summary>Sets the shim of InvocationWithDelegateContributor.InvocationWithDelegateContributor(Type delegateType, Type targetType, MetaMethod method, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.CreateConstructorArgumentReferenceArrayAbstractTypeEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.CreateConstructor(ArgumentReference[] baseCtorArguments, AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.GetAllArgsExpressionArrayReference">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetAllArgs(Expression[] args, Reference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.GetArgumentsArgumentReferenceArray">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetArguments(ArgumentReference[] baseCtorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.GetCallbackMethod">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetCallbackMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayReferenceMethodEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.GetConstructorInvocationArgumentsExpressionArrayClassEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetConstructorInvocationArguments(Expression[] arguments, ClassEmitter proxy)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.BuildDelegateTokenClassEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.BuildDelegateToken(ClassEmitter proxy)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.CreateConstructorArgumentReferenceArrayAbstractTypeEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.CreateConstructor(ArgumentReference[] baseCtorArguments, AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.GetAllArgsExpressionArrayReference">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetAllArgs(Expression[] args, Reference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.GetArgumentsArgumentReferenceArray">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetArguments(ArgumentReference[] baseCtorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.GetCallbackMethod">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetCallbackMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayReferenceMethodEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithDelegateContributor.AllInstances.GetConstructorInvocationArgumentsExpressionArrayClassEmitter">
            <summary>Sets the shim of InvocationWithDelegateContributor.GetConstructorInvocationArguments(Expression[] arguments, ClassEmitter proxy)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.#ctor(Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.Bind(Castle.DynamicProxy.Generators.IInvocationCreationContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.ConstructorTypeMetaMethodReference">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.InvocationWithGenericDelegateContributor(Type delegateType, MetaMethod method, Reference targetReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.CreateConstructorArgumentReferenceArrayAbstractTypeEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.CreateConstructor(ArgumentReference[] baseCtorArguments, AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.GetCallbackMethod">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetCallbackMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayReferenceMethodEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.GetConstructorInvocationArgumentsExpressionArrayClassEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetConstructorInvocationArguments(Expression[] arguments, ClassEmitter proxy)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.GetDelegateAbstractTypeEmitterMethodEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetDelegate(AbstractTypeEmitter invocation, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.SetDelegateLocalReferenceReferenceExpressionTypeMethodInfo">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.SetDelegate(LocalReference localDelegate, ReferenceExpression localTarget, Type closedDelegateType, MethodInfo closedMethodOnTarget)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances.CreateConstructorArgumentReferenceArrayAbstractTypeEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.CreateConstructor(ArgumentReference[] baseCtorArguments, AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances.GetCallbackMethod">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetCallbackMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayReferenceMethodEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances.GetConstructorInvocationArgumentsExpressionArrayClassEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetConstructorInvocationArguments(Expression[] arguments, ClassEmitter proxy)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances.GetDelegateAbstractTypeEmitterMethodEmitter">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.GetDelegate(AbstractTypeEmitter invocation, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimInvocationWithGenericDelegateContributor.AllInstances.SetDelegateLocalReferenceReferenceExpressionTypeMethodInfo">
            <summary>Sets the shim of InvocationWithGenericDelegateContributor.SetDelegate(LocalReference localDelegate, ReferenceExpression localTarget, Type closedDelegateType, MethodInfo closedMethodOnTarget)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector">
            <summary>Shim type of Castle.DynamicProxy.Contributors.MembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.#ctor(Castle.DynamicProxy.Contributors.MembersCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AcceptMethodMethodInfoBooleanIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.AcceptMethod(MethodInfo method, Boolean onlyVirtuals, IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AddEventEventInfoIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.AddEvent(EventInfo event, IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AddMethodMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of MembersCollector.AddMethod(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AddPropertyPropertyInfoIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.AddProperty(PropertyInfo property, IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.CollectEventsIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectEvents(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.CollectMethodsIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectMethods(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.CollectPropertiesIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectProperties(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.ConstructorType">
            <summary>Sets the shim of MembersCollector.MembersCollector(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.EventsGet">
            <summary>Sets the shim of MembersCollector.get_Events()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.IsInternalAndNotVisibleToDynamicProxyMethodInfo">
            <summary>Sets the shim of MembersCollector.IsInternalAndNotVisibleToDynamicProxy(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.LoggerGet">
            <summary>Sets the shim of MembersCollector.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.LoggerSetILogger">
            <summary>Sets the shim of MembersCollector.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.MethodsGet">
            <summary>Sets the shim of MembersCollector.get_Methods()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.PropertiesGet">
            <summary>Sets the shim of MembersCollector.get_Properties()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector._AddPropertyb__0ParameterInfo">
            <summary>Sets the shim of MembersCollector.&lt;AddProperty&gt;b__0(ParameterInfo a)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.AcceptMethodMethodInfoBooleanIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.AcceptMethod(MethodInfo method, Boolean onlyVirtuals, IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.AddEventEventInfoIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.AddEvent(EventInfo event, IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.AddMethodMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of MembersCollector.AddMethod(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.AddPropertyPropertyInfoIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.AddProperty(PropertyInfo property, IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.CollectEventsIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectEvents(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.CollectMethodsIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectMethods(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.CollectPropertiesIProxyGenerationHook">
            <summary>Sets the shim of MembersCollector.CollectProperties(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.EventsGet">
            <summary>Sets the shim of MembersCollector.get_Events()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.LoggerGet">
            <summary>Sets the shim of MembersCollector.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of MembersCollector.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.MethodsGet">
            <summary>Sets the shim of MembersCollector.get_Methods()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMembersCollector.AllInstances.PropertiesGet">
            <summary>Sets the shim of MembersCollector.get_Properties()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator">
            <summary>Shim type of Castle.DynamicProxy.Contributors.MinimialisticMethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.#ctor(Castle.DynamicProxy.Contributors.MinimialisticMethodGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of MinimialisticMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.ConstructorMetaMethodOverrideMethodDelegate">
            <summary>Sets the shim of MinimialisticMethodGenerator.MinimialisticMethodGenerator(MetaMethod method, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.InitOutParametersMethodEmitterParameterInfoArray">
            <summary>Sets the shim of MinimialisticMethodGenerator.InitOutParameters(MethodEmitter emitter, ParameterInfo[] parameters)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.AllInstances.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of MinimialisticMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMinimialisticMethodGenerator.AllInstances.InitOutParametersMethodEmitterParameterInfoArray">
            <summary>Sets the shim of MinimialisticMethodGenerator.InitOutParameters(MethodEmitter emitter, ParameterInfo[] parameters)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.MixinContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.#ctor(Castle.DynamicProxy.Contributors.MixinContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AddEmptyInterfaceType">
            <summary>Sets the shim of MixinContributor.AddEmptyInterface(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.BuildGetTargetExpression">
            <summary>Sets the shim of MixinContributor.BuildGetTargetExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.BuildTargetFieldClassEmitterType">
            <summary>Sets the shim of MixinContributor.BuildTargetField(ClassEmitter class, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of MixinContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.ConstructorINamingScopeBoolean">
            <summary>Sets the shim of MixinContributor.MixinContributor(INamingScope namingScope, Boolean canChangeTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.FieldsGet">
            <summary>Sets the shim of MixinContributor.get_Fields()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of MixinContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of MixinContributor.GetInvocationType(MetaMethod method, ClassEmitter emitter, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of MixinContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor._BuildGetTargetExpressionb__9ClassEmitterMethodInfo">
            <summary>Sets the shim of MixinContributor.&lt;BuildGetTargetExpression&gt;b__9(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor._BuildGetTargetExpressionb__aClassEmitterMethodInfo">
            <summary>Sets the shim of MixinContributor.&lt;BuildGetTargetExpression&gt;b__a(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor._GetMethodGeneratorb__7ClassEmitterMethodInfo">
            <summary>Sets the shim of MixinContributor.&lt;GetMethodGenerator&gt;b__7(ClassEmitter c, MethodInfo i)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.AddEmptyInterfaceType">
            <summary>Sets the shim of MixinContributor.AddEmptyInterface(Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.BuildGetTargetExpression">
            <summary>Sets the shim of MixinContributor.BuildGetTargetExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.BuildTargetFieldClassEmitterType">
            <summary>Sets the shim of MixinContributor.BuildTargetField(ClassEmitter class, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the shim of MixinContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.FieldsGet">
            <summary>Sets the shim of MixinContributor.get_Fields()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of MixinContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.GetInvocationTypeMetaMethodClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of MixinContributor.GetInvocationType(MetaMethod method, ClassEmitter emitter, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the shim of MixinContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances._BuildGetTargetExpressionb__9ClassEmitterMethodInfo">
            <summary>Sets the shim of MixinContributor.&lt;BuildGetTargetExpression&gt;b__9(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances._BuildGetTargetExpressionb__aClassEmitterMethodInfo">
            <summary>Sets the shim of MixinContributor.&lt;BuildGetTargetExpression&gt;b__a(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimMixinContributor.AllInstances._GetMethodGeneratorb__7ClassEmitterMethodInfo">
            <summary>Sets the shim of MixinContributor.&lt;GetMethodGenerator&gt;b__7(ClassEmitter c, MethodInfo i)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator">
            <summary>Shim type of Castle.DynamicProxy.Contributors.OptionallyForwardingMethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.#ctor(Castle.DynamicProxy.Contributors.OptionallyForwardingMethodGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.ConstructorMetaMethodOverrideMethodDelegateGetTargetReferenceDelegate">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.OptionallyForwardingMethodGenerator(MetaMethod method, OverrideMethodDelegate overrideMethod, GetTargetReferenceDelegate getTargetReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.IfNotNullReference">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.IfNotNull(Reference targetReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.IfNullType">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.IfNull(Type returnType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.InitOutParametersMultiStatementExpressionParameterInfoArray">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.InitOutParameters(MultiStatementExpression expression, ParameterInfo[] parameters)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.AllInstances.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.AllInstances.IfNotNullReference">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.IfNotNull(Reference targetReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.AllInstances.IfNullType">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.IfNull(Type returnType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimOptionallyForwardingMethodGenerator.AllInstances.InitOutParametersMultiStatementExpressionParameterInfoArray">
            <summary>Sets the shim of OptionallyForwardingMethodGenerator.InitOutParameters(MultiStatementExpression expression, ParameterInfo[] parameters)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor">
            <summary>Shim type of Castle.DynamicProxy.Contributors.ProxyInstanceContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.#ctor(Castle.DynamicProxy.Contributors.ProxyInstanceContributor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.Bind(Castle.DynamicProxy.Contributors.ITypeContributor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the shim of ProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.CollectElementsToProxyIProxyGenerationHookMetaType">
            <summary>Sets the shim of ProxyInstanceContributor.CollectElementsToProxy(IProxyGenerationHook hook, MetaType model)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.ConstructorTypeTypeArrayString">
            <summary>Sets the shim of ProxyInstanceContributor.ProxyInstanceContributor(Type targetType, Type[] interfaces, String proxyTypeId)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.ImplementGetObjectDataClassEmitter">
            <summary>Sets the shim of ProxyInstanceContributor.ImplementGetObjectData(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.ImplementProxyTargetAccessorClassEmitterFieldReference">
            <summary>Sets the shim of ProxyInstanceContributor.ImplementProxyTargetAccessor(ClassEmitter emitter, FieldReference interceptorsField)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AllInstances.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the shim of ProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AllInstances.CollectElementsToProxyIProxyGenerationHookMetaType">
            <summary>Sets the shim of ProxyInstanceContributor.CollectElementsToProxy(IProxyGenerationHook hook, MetaType model)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AllInstances.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the shim of ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AllInstances.ImplementGetObjectDataClassEmitter">
            <summary>Sets the shim of ProxyInstanceContributor.ImplementGetObjectData(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimProxyInstanceContributor.AllInstances.ImplementProxyTargetAccessorClassEmitterFieldReference">
            <summary>Sets the shim of ProxyInstanceContributor.ImplementProxyTargetAccessor(ClassEmitter emitter, FieldReference interceptorsField)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector">
            <summary>Shim type of Castle.DynamicProxy.Contributors.WrappedClassMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.#ctor(Castle.DynamicProxy.Contributors.WrappedClassMembersCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.CollectFieldsIProxyGenerationHook">
            <summary>Sets the shim of WrappedClassMembersCollector.CollectFields(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the shim of WrappedClassMembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.ConstructorType">
            <summary>Sets the shim of WrappedClassMembersCollector.WrappedClassMembersCollector(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of WrappedClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.IsGeneratedByTheCompilerFieldInfo">
            <summary>Sets the shim of WrappedClassMembersCollector.IsGeneratedByTheCompiler(FieldInfo field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.IsOKToBeOnProxyFieldInfo">
            <summary>Sets the shim of WrappedClassMembersCollector.IsOKToBeOnProxy(FieldInfo field)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.AllInstances.CollectFieldsIProxyGenerationHook">
            <summary>Sets the shim of WrappedClassMembersCollector.CollectFields(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.AllInstances.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the shim of WrappedClassMembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.AllInstances.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of WrappedClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.AllInstances.IsGeneratedByTheCompilerFieldInfo">
            <summary>Sets the shim of WrappedClassMembersCollector.IsGeneratedByTheCompiler(FieldInfo field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.ShimWrappedClassMembersCollector.AllInstances.IsOKToBeOnProxyFieldInfo">
            <summary>Sets the shim of WrappedClassMembersCollector.IsOKToBeOnProxy(FieldInfo field)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ClassMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.CollectMembersToProxy(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.GetMethodToGenerate(System.Reflection.MethodInfo,Castle.DynamicProxy.IProxyGenerationHook,System.Boolean)">
            <summary>Sets the stub of ClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the stub of ClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.InitializeStub">
            <summary>Initializes a new instance of type StubClassMembersCollector</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassMembersCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.#ctor(System.Type,System.Collections.Generic.IList{System.Reflection.MethodInfo},System.Type[],System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.AddAddValueInvocation(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference)">
            <summary>Sets the stub of ClassProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the stub of ClassProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.CustomizeGetObjectData(Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder,Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of ClassProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the stub of ClassProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of ClassProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of ClassProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.GetTargetReferenceExpression(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of ClassProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the stub of ClassProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.InitializeStub">
            <summary>Initializes a new instance of type StubClassProxyInstanceContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyInstanceContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ClassProxyTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.#ctor(System.Type,System.Collections.Generic.IList{System.Reflection.MethodInfo},Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of ClassProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of ClassProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of ClassProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of ClassProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubClassProxyTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.#ctor(System.Type,System.Collections.Generic.IList{System.Reflection.MethodInfo},Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of ClassProxyWithTargetTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of ClassProxyWithTargetTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of ClassProxyWithTargetTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of ClassProxyWithTargetTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubClassProxyWithTargetTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubClassProxyWithTargetTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.CompositeTypeContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.#ctor(Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of CompositeTypeContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of CompositeTypeContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of CompositeTypeContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of CompositeTypeContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeTypeContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubCompositeTypeContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.DelegateProxyTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.#ctor(System.Type,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of DelegateProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of DelegateProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of DelegateProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of DelegateProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubDelegateProxyTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubDelegateProxyTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubDelegateTypeGenerator">
            <summary>Stub type of Castle.DynamicProxy.Contributors.DelegateTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateTypeGenerator.#ctor(Castle.DynamicProxy.Generators.MetaMethod,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubDelegateTypeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubDelegateTypeGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubDelegateTypeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubDelegateTypeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubDelegateTypeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ForwardingMethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.#ctor(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Contributors.OverrideMethodDelegate,Castle.DynamicProxy.Contributors.GetTargetReferenceDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.BuildProxiedMethodBody(Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of ForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the stub of ForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubForwardingMethodGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubForwardingMethodGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubITypeContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ITypeContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubITypeContributor.#ctor">
            <summary>Initializes a new instance of type StubITypeContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubITypeContributor.cc::Castle#DynamicProxy#Contributors#ITypeContributor#CollectElementsToProxy(Castle.DynamicProxy.IProxyGenerationHook,Castle.DynamicProxy.Generators.MetaType)">
            <summary>Sets the stub of ITypeContributor.CollectElementsToProxy(IProxyGenerationHook hook, MetaType model)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubITypeContributor.cc::Castle#DynamicProxy#Contributors#ITypeContributor#Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of ITypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubITypeContributor.CollectElementsToProxyIProxyGenerationHookMetaType">
            <summary>Sets the stub of ITypeContributor.CollectElementsToProxy(IProxyGenerationHook hook, MetaType model)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubITypeContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of ITypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.CollectMembersToProxy(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.GetMethodToGenerate(System.Reflection.MethodInfo,Castle.DynamicProxy.IProxyGenerationHook,System.Boolean)">
            <summary>Sets the stub of InterfaceMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the stub of InterfaceMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceMembersCollector</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.#ctor(System.Type,System.Boolean,System.Reflection.InterfaceMapping)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.CollectMembersToProxy(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.GetMethodToGenerate(System.Reflection.MethodInfo,Castle.DynamicProxy.IProxyGenerationHook,System.Boolean)">
            <summary>Sets the stub of InterfaceMembersOnClassCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the stub of InterfaceMembersOnClassCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceMembersOnClassCollector</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceMembersOnClassCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceProxyInstanceContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.#ctor(System.Type,System.String,System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.AddAddValueInvocation(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference)">
            <summary>Sets the stub of ProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the stub of ProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.CustomizeGetObjectData(Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder,Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of InterfaceProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the stub of InterfaceProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder codebuilder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.GetTargetReferenceExpression(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of InterfaceProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the stub of InterfaceProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyInstanceContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyInstanceContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.#ctor(System.Type,System.Boolean,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of InterfaceProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of InterfaceProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.GetCollectorForInterface(System.Type)">
            <summary>Sets the stub of InterfaceProxyTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.GetCollectorForInterfaceType">
            <summary>Sets the stub of InterfaceProxyTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceProxyWithOptionalTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.#ctor(Castle.DynamicProxy.Generators.INamingScope,Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate,Castle.DynamicProxy.Contributors.GetTargetReferenceDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of InterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of InterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of InterfaceProxyWithOptionalTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of InterfaceProxyWithOptionalTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyWithOptionalTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithOptionalTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceProxyWithTargetInterfaceTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.#ctor(System.Type,System.Boolean,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of InterfaceProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of InterfaceProxyTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterface(System.Type)">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterfaceType">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceTargetContributor.GetCollectorForInterface(Type interface)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of InterfaceProxyTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyWithTargetInterfaceTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithTargetInterfaceTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.#ctor(Castle.DynamicProxy.Generators.INamingScope,Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of InterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of InterfaceProxyWithoutTargetContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of CompositeTypeContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of InterfaceProxyWithoutTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of InterfaceProxyWithoutTargetContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyWithoutTargetContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInterfaceProxyWithoutTargetContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithDelegateContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithDelegateContributor.#ctor(System.Type,System.Type,Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithDelegateContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInvocationWithDelegateContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithDelegateContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithDelegateContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithDelegateContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithGenericDelegateContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithGenericDelegateContributor.#ctor(System.Type,Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithGenericDelegateContributor.InitializeStub">
            <summary>Initializes a new instance of type StubInvocationWithGenericDelegateContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithGenericDelegateContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithGenericDelegateContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubInvocationWithGenericDelegateContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector">
            <summary>Stub type of Castle.DynamicProxy.Contributors.MembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.CollectMembersToProxy(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.GetMethodToGenerate(System.Reflection.MethodInfo,Castle.DynamicProxy.IProxyGenerationHook,System.Boolean)">
            <summary>Sets the stub of MembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the stub of MembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.InitializeStub">
            <summary>Initializes a new instance of type StubMembersCollector</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMembersCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator">
            <summary>Stub type of Castle.DynamicProxy.Contributors.MinimialisticMethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.#ctor(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.BuildProxiedMethodBody(Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of MinimialisticMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the stub of MinimialisticMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubMinimialisticMethodGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMinimialisticMethodGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.MixinContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.#ctor(Castle.DynamicProxy.Generators.INamingScope,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.CollectElementsToProxyInternal(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of MixinContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.CollectElementsToProxyInternalIProxyGenerationHook">
            <summary>Sets the stub of MixinContributor.CollectElementsToProxyInternal(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of MixinContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of MixinContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.GetMethodGenerator(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Sets the stub of MixinContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.GetMethodGeneratorMetaMethodClassEmitterProxyGenerationOptionsOverrideMethodDelegate">
            <summary>Sets the stub of MixinContributor.GetMethodGenerator(MetaMethod method, ClassEmitter class, ProxyGenerationOptions options, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.InitializeStub">
            <summary>Initializes a new instance of type StubMixinContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubMixinContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator">
            <summary>Stub type of Castle.DynamicProxy.Contributors.OptionallyForwardingMethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.#ctor(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Contributors.OverrideMethodDelegate,Castle.DynamicProxy.Contributors.GetTargetReferenceDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.BuildProxiedMethodBody(Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of OptionallyForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the stub of OptionallyForwardingMethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubOptionallyForwardingMethodGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubOptionallyForwardingMethodGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor">
            <summary>Stub type of Castle.DynamicProxy.Contributors.ProxyInstanceContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.#ctor(System.Type,System.Type[],System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.AddAddValueInvocation(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference)">
            <summary>Sets the stub of ProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.AddAddValueInvocationArgumentReferenceMethodEmitterFieldReference">
            <summary>Sets the stub of ProxyInstanceContributor.AddAddValueInvocation(ArgumentReference serializationInfo, MethodEmitter getObjectData, FieldReference field)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.CustomizeGetObjectData(Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder,Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of ProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder builder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.CustomizeGetObjectDataAbstractCodeBuilderArgumentReferenceArgumentReferenceClassEmitter">
            <summary>Sets the stub of ProxyInstanceContributor.CustomizeGetObjectData(AbstractCodeBuilder builder, ArgumentReference serializationInfo, ArgumentReference streamingContext, ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.GenerateClassEmitterProxyGenerationOptions">
            <summary>Sets the stub of ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.GetTargetReferenceExpression(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of ProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.GetTargetReferenceExpressionClassEmitter">
            <summary>Sets the stub of ProxyInstanceContributor.GetTargetReferenceExpression(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.InitializeStub">
            <summary>Initializes a new instance of type StubProxyInstanceContributor</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubProxyInstanceContributor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector">
            <summary>Stub type of Castle.DynamicProxy.Contributors.WrappedClassMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.CollectMembersToProxy(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of WrappedClassMembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the stub of WrappedClassMembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.GetMethodToGenerate(System.Reflection.MethodInfo,Castle.DynamicProxy.IProxyGenerationHook,System.Boolean)">
            <summary>Sets the stub of WrappedClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the stub of WrappedClassMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.InitializeStub">
            <summary>Initializes a new instance of type StubWrappedClassMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.IsOKToBeOnProxy(System.Reflection.FieldInfo)">
            <summary>Sets the stub of WrappedClassMembersCollector.IsOKToBeOnProxy(FieldInfo field)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.IsOKToBeOnProxyFieldInfo">
            <summary>Sets the stub of WrappedClassMembersCollector.IsOKToBeOnProxy(FieldInfo field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Contributors.Fakes.StubWrappedClassMembersCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimAbstractInvocation">
            <summary>Shim type of Castle.DynamicProxy.AbstractInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.#ctor(Castle.DynamicProxy.AbstractInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Bind(Castle.DynamicProxy.IInvocation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ConstructorObjectIInterceptorArrayMethodInfoObjectArray">
            <summary>Sets the shim of AbstractInvocation.AbstractInvocation(Object proxy, IInterceptor[] interceptors, MethodInfo proxiedMethod, Object[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.EnsureClosedMethodMethodInfo">
            <summary>Sets the shim of AbstractInvocation.EnsureClosedMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GenericArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetArgumentValueInt32">
            <summary>Sets the shim of AbstractInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetConcreteMethod">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetConcreteMethodInvocationTarget">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AbstractInvocation.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.MethodGet">
            <summary>Sets the shim of AbstractInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.Proceed">
            <summary>Sets the shim of AbstractInvocation.Proceed()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ProxyGet">
            <summary>Sets the shim of AbstractInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ReturnValueGet">
            <summary>Sets the shim of AbstractInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ReturnValueSetObject">
            <summary>Sets the shim of AbstractInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.SetArgumentValueInt32Object">
            <summary>Sets the shim of AbstractInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.SetGenericMethodArgumentsTypeArray">
            <summary>Sets the shim of AbstractInvocation.SetGenericMethodArguments(Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.ThrowOnNoTarget">
            <summary>Sets the shim of AbstractInvocation.ThrowOnNoTarget()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.EnsureClosedMethodMethodInfo">
            <summary>Sets the shim of AbstractInvocation.EnsureClosedMethod(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GenericArgumentsGet">
            <summary>Sets the shim of AbstractInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetArgumentValueInt32">
            <summary>Sets the shim of AbstractInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetConcreteMethod">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetConcreteMethodInvocationTarget">
            <summary>Sets the shim of AbstractInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AbstractInvocation.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.MethodGet">
            <summary>Sets the shim of AbstractInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.Proceed">
            <summary>Sets the shim of AbstractInvocation.Proceed()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ProxyGet">
            <summary>Sets the shim of AbstractInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ReturnValueGet">
            <summary>Sets the shim of AbstractInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ReturnValueSetObject">
            <summary>Sets the shim of AbstractInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.SetArgumentValueInt32Object">
            <summary>Sets the shim of AbstractInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.SetGenericMethodArgumentsTypeArray">
            <summary>Sets the shim of AbstractInvocation.SetGenericMethodArguments(Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAbstractInvocation.AllInstances.ThrowOnNoTarget">
            <summary>Sets the shim of AbstractInvocation.ThrowOnNoTarget()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimAllMethodsHook">
            <summary>Shim type of Castle.DynamicProxy.AllMethodsHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.#ctor(Castle.DynamicProxy.AllMethodsHook)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.Bind(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.Constructor">
            <summary>Sets the shim of AllMethodsHook.AllMethodsHook()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.EqualsObject">
            <summary>Sets the shim of AllMethodsHook.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.GetHashCode">
            <summary>Sets the shim of AllMethodsHook.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.MethodsInspected">
            <summary>Sets the shim of AllMethodsHook.MethodsInspected()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.NonProxyableMemberNotificationTypeMemberInfo">
            <summary>Sets the shim of AllMethodsHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.ShouldInterceptMethodTypeMethodInfo">
            <summary>Sets the shim of AllMethodsHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.StaticConstructor">
            <summary>Sets the shim of AllMethodsHook.AllMethodsHook()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.AllInstances.EqualsObject">
            <summary>Sets the shim of AllMethodsHook.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.AllInstances.GetHashCode01">
            <summary>Sets the shim of AllMethodsHook.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.AllInstances.MethodsInspected">
            <summary>Sets the shim of AllMethodsHook.MethodsInspected()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.AllInstances.NonProxyableMemberNotificationTypeMemberInfo">
            <summary>Sets the shim of AllMethodsHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimAllMethodsHook.AllInstances.ShouldInterceptMethodTypeMethodInfo">
            <summary>Sets the shim of AllMethodsHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder">
            <summary>Shim type of Castle.DynamicProxy.DefaultProxyBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.#ctor(Castle.DynamicProxy.DefaultProxyBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.Bind(Castle.DynamicProxy.IProxyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AssertValidTypeType">
            <summary>Sets the shim of DefaultProxyBuilder.AssertValidType(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AssertValidTypesIEnumerableOfType">
            <summary>Sets the shim of DefaultProxyBuilder.AssertValidTypes(IEnumerable`1&lt;Type&gt; targetTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.Constructor">
            <summary>Sets the shim of DefaultProxyBuilder.DefaultProxyBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.ConstructorModuleScope">
            <summary>Sets the shim of DefaultProxyBuilder.DefaultProxyBuilder(ModuleScope scope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.CreateClassProxyTypeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.CreateClassProxyTypeWithTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateClassProxyTypeWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.CreateInterfaceProxyTypeWithTargetInterfaceTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateInterfaceProxyTypeWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.CreateInterfaceProxyTypeWithTargetTypeTypeArrayTypeProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.CreateInterfaceProxyTypeWithoutTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.IsAccessibleType">
            <summary>Sets the shim of DefaultProxyBuilder.IsAccessible(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.IsInternalType">
            <summary>Sets the shim of DefaultProxyBuilder.IsInternal(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.IsPublicType">
            <summary>Sets the shim of DefaultProxyBuilder.IsPublic(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.LoggerGet">
            <summary>Sets the shim of DefaultProxyBuilder.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.LoggerSetILogger">
            <summary>Sets the shim of DefaultProxyBuilder.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.ModuleScopeGet">
            <summary>Sets the shim of DefaultProxyBuilder.get_ModuleScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.AssertValidTypeType">
            <summary>Sets the shim of DefaultProxyBuilder.AssertValidType(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.AssertValidTypesIEnumerableOfType">
            <summary>Sets the shim of DefaultProxyBuilder.AssertValidTypes(IEnumerable`1&lt;Type&gt; targetTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.CreateClassProxyTypeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.CreateClassProxyTypeWithTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateClassProxyTypeWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.CreateInterfaceProxyTypeWithTargetInterfaceTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateInterfaceProxyTypeWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.CreateInterfaceProxyTypeWithTargetTypeTypeArrayTypeProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.CreateInterfaceProxyTypeWithoutTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of DefaultProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.IsAccessibleType">
            <summary>Sets the shim of DefaultProxyBuilder.IsAccessible(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.IsPublicType">
            <summary>Sets the shim of DefaultProxyBuilder.IsPublic(Type target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.LoggerGet">
            <summary>Sets the shim of DefaultProxyBuilder.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of DefaultProxyBuilder.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimDefaultProxyBuilder.AllInstances.ModuleScopeGet">
            <summary>Sets the shim of DefaultProxyBuilder.get_ModuleScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException">
            <summary>Shim type of Castle.DynamicProxy.InvalidMixinConfigurationException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.#ctor(Castle.DynamicProxy.InvalidMixinConfigurationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InvalidMixinConfigurationException.InvalidMixinConfigurationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.ConstructorString">
            <summary>Sets the shim of InvalidMixinConfigurationException.InvalidMixinConfigurationException(String message)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.ConstructorStringException">
            <summary>Sets the shim of InvalidMixinConfigurationException.InvalidMixinConfigurationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimInvalidMixinConfigurationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException">
            <summary>Shim type of Castle.DynamicProxy.InvalidProxyConstructorArgumentsException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.#ctor(Castle.DynamicProxy.InvalidProxyConstructorArgumentsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.ClassToProxyGet">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.get_ClassToProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.ClassToProxySetType">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.set_ClassToProxy(Type value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.ConstructorStringTypeType">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.InvalidProxyConstructorArgumentsException(String message, Type proxyType, Type classToProxy)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.ProxyTypeGet">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.get_ProxyType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.ProxyTypeSetType">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.set_ProxyType(Type value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.AllInstances.ClassToProxyGet">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.get_ClassToProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.AllInstances.ClassToProxySetType">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.set_ClassToProxy(Type value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.AllInstances.ProxyTypeGet">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.get_ProxyType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimInvalidProxyConstructorArgumentsException.AllInstances.ProxyTypeSetType">
            <summary>Sets the shim of InvalidProxyConstructorArgumentsException.set_ProxyType(Type value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimMixinData">
            <summary>Shim type of Castle.DynamicProxy.MixinData</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimMixinData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimMixinData.#ctor(Castle.DynamicProxy.MixinData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimMixinData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimMixinData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.ConstructorIEnumerableOfObject">
            <summary>Sets the shim of MixinData.MixinData(IEnumerable`1&lt;Object&gt; mixinInstances)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.ContainsMixinType">
            <summary>Sets the shim of MixinData.ContainsMixin(Type mixinInterfaceType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.EqualsObject">
            <summary>Sets the shim of MixinData.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.GetHashCode">
            <summary>Sets the shim of MixinData.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.GetMixinInstanceType">
            <summary>Sets the shim of MixinData.GetMixinInstance(Type mixinInterfaceType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.GetMixinPositionType">
            <summary>Sets the shim of MixinData.GetMixinPosition(Type mixinInterfaceType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.MixinInterfacesGet">
            <summary>Sets the shim of MixinData.get_MixinInterfaces()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.MixinsGet">
            <summary>Sets the shim of MixinData.get_Mixins()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData._ctorb__0TypeType">
            <summary>Sets the shim of MixinData.&lt;.ctor&gt;b__0(Type x, Type y)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.ContainsMixinType">
            <summary>Sets the shim of MixinData.ContainsMixin(Type mixinInterfaceType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.EqualsObject">
            <summary>Sets the shim of MixinData.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.GetHashCode01">
            <summary>Sets the shim of MixinData.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.GetMixinInstanceType">
            <summary>Sets the shim of MixinData.GetMixinInstance(Type mixinInterfaceType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.GetMixinPositionType">
            <summary>Sets the shim of MixinData.GetMixinPosition(Type mixinInterfaceType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.MixinInterfacesGet">
            <summary>Sets the shim of MixinData.get_MixinInterfaces()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimMixinData.AllInstances.MixinsGet">
            <summary>Sets the shim of MixinData.get_Mixins()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimModuleScope">
            <summary>Shim type of Castle.DynamicProxy.ModuleScope</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimModuleScope.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimModuleScope.#ctor(Castle.DynamicProxy.ModuleScope)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimModuleScope.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimModuleScope.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AddCacheMappingsAssemblyBuilder">
            <summary>Sets the shim of ModuleScope.AddCacheMappings(AssemblyBuilder builder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.Constructor">
            <summary>Sets the shim of ModuleScope.ModuleScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ConstructorBoolean">
            <summary>Sets the shim of ModuleScope.ModuleScope(Boolean savePhysicalAssembly)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ConstructorBooleanBoolean">
            <summary>Sets the shim of ModuleScope.ModuleScope(Boolean savePhysicalAssembly, Boolean disableSignedModule)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ConstructorBooleanBooleanINamingScopeStringStringStringString">
            <summary>Sets the shim of ModuleScope.ModuleScope(Boolean savePhysicalAssembly, Boolean disableSignedModule, INamingScope namingScope, String strongAssemblyName, String strongModulePath, String weakAssemblyName, String weakModulePath)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ConstructorBooleanBooleanStringStringStringString">
            <summary>Sets the shim of ModuleScope.ModuleScope(Boolean savePhysicalAssembly, Boolean disableSignedModule, String strongAssemblyName, String strongModulePath, String weakAssemblyName, String weakModulePath)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.CreateModuleBoolean">
            <summary>Sets the shim of ModuleScope.CreateModule(Boolean signStrongName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.DefineTypeBooleanStringTypeAttributes">
            <summary>Sets the shim of ModuleScope.DefineType(Boolean inSignedModulePreferably, String name, TypeAttributes flags)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.GetAssemblyNameBoolean">
            <summary>Sets the shim of ModuleScope.GetAssemblyName(Boolean signStrongName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.GetFromCacheCacheKey">
            <summary>Sets the shim of ModuleScope.GetFromCache(CacheKey key)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.GetKeyPair">
            <summary>Sets the shim of ModuleScope.GetKeyPair()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.LoadAssemblyIntoCacheAssembly">
            <summary>Sets the shim of ModuleScope.LoadAssemblyIntoCache(Assembly assembly)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.LockGet">
            <summary>Sets the shim of ModuleScope.get_Lock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.NamingScopeGet">
            <summary>Sets the shim of ModuleScope.get_NamingScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ObtainDynamicModuleBoolean">
            <summary>Sets the shim of ModuleScope.ObtainDynamicModule(Boolean isStrongNamed)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ObtainDynamicModuleWithStrongName">
            <summary>Sets the shim of ModuleScope.ObtainDynamicModuleWithStrongName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.ObtainDynamicModuleWithWeakName">
            <summary>Sets the shim of ModuleScope.ObtainDynamicModuleWithWeakName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.RegisterInCacheCacheKeyType">
            <summary>Sets the shim of ModuleScope.RegisterInCache(CacheKey key, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.SaveAssembly">
            <summary>Sets the shim of ModuleScope.SaveAssembly()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.SaveAssemblyBoolean">
            <summary>Sets the shim of ModuleScope.SaveAssembly(Boolean strongNamed)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.StaticConstructor">
            <summary>Sets the shim of ModuleScope.ModuleScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.StrongNamedModuleDirectoryGet">
            <summary>Sets the shim of ModuleScope.get_StrongNamedModuleDirectory()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.StrongNamedModuleGet">
            <summary>Sets the shim of ModuleScope.get_StrongNamedModule()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.StrongNamedModuleNameGet">
            <summary>Sets the shim of ModuleScope.get_StrongNamedModuleName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.WeakNamedModuleDirectoryGet">
            <summary>Sets the shim of ModuleScope.get_WeakNamedModuleDirectory()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.WeakNamedModuleGet">
            <summary>Sets the shim of ModuleScope.get_WeakNamedModule()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.WeakNamedModuleNameGet">
            <summary>Sets the shim of ModuleScope.get_WeakNamedModuleName()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.AddCacheMappingsAssemblyBuilder">
            <summary>Sets the shim of ModuleScope.AddCacheMappings(AssemblyBuilder builder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.CreateModuleBoolean">
            <summary>Sets the shim of ModuleScope.CreateModule(Boolean signStrongName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.DefineTypeBooleanStringTypeAttributes">
            <summary>Sets the shim of ModuleScope.DefineType(Boolean inSignedModulePreferably, String name, TypeAttributes flags)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.GetAssemblyNameBoolean">
            <summary>Sets the shim of ModuleScope.GetAssemblyName(Boolean signStrongName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.GetFromCacheCacheKey">
            <summary>Sets the shim of ModuleScope.GetFromCache(CacheKey key)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.LoadAssemblyIntoCacheAssembly">
            <summary>Sets the shim of ModuleScope.LoadAssemblyIntoCache(Assembly assembly)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.LockGet">
            <summary>Sets the shim of ModuleScope.get_Lock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.NamingScopeGet">
            <summary>Sets the shim of ModuleScope.get_NamingScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.ObtainDynamicModuleBoolean">
            <summary>Sets the shim of ModuleScope.ObtainDynamicModule(Boolean isStrongNamed)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.ObtainDynamicModuleWithStrongName">
            <summary>Sets the shim of ModuleScope.ObtainDynamicModuleWithStrongName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.ObtainDynamicModuleWithWeakName">
            <summary>Sets the shim of ModuleScope.ObtainDynamicModuleWithWeakName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.RegisterInCacheCacheKeyType">
            <summary>Sets the shim of ModuleScope.RegisterInCache(CacheKey key, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.SaveAssembly">
            <summary>Sets the shim of ModuleScope.SaveAssembly()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.SaveAssemblyBoolean">
            <summary>Sets the shim of ModuleScope.SaveAssembly(Boolean strongNamed)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.StrongNamedModuleDirectoryGet">
            <summary>Sets the shim of ModuleScope.get_StrongNamedModuleDirectory()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.StrongNamedModuleGet">
            <summary>Sets the shim of ModuleScope.get_StrongNamedModule()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.StrongNamedModuleNameGet">
            <summary>Sets the shim of ModuleScope.get_StrongNamedModuleName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.WeakNamedModuleDirectoryGet">
            <summary>Sets the shim of ModuleScope.get_WeakNamedModuleDirectory()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.WeakNamedModuleGet">
            <summary>Sets the shim of ModuleScope.get_WeakNamedModule()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimModuleScope.AllInstances.WeakNamedModuleNameGet">
            <summary>Sets the shim of ModuleScope.get_WeakNamedModuleName()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder">
            <summary>Shim type of Castle.DynamicProxy.PersistentProxyBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.#ctor(Castle.DynamicProxy.PersistentProxyBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.Bind(Castle.DynamicProxy.IProxyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.Constructor">
            <summary>Sets the shim of PersistentProxyBuilder.PersistentProxyBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.SaveAssembly">
            <summary>Sets the shim of PersistentProxyBuilder.SaveAssembly()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimPersistentProxyBuilder.AllInstances.SaveAssembly">
            <summary>Sets the shim of PersistentProxyBuilder.SaveAssembly()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyGenerationException">
            <summary>Shim type of Castle.DynamicProxy.ProxyGenerationException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.#ctor(Castle.DynamicProxy.ProxyGenerationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.ConstructorString">
            <summary>Sets the shim of ProxyGenerationException.ProxyGenerationException(String message)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.ConstructorStringException">
            <summary>Sets the shim of ProxyGenerationException.ProxyGenerationException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyGenerationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions">
            <summary>Shim type of Castle.DynamicProxy.ProxyGenerationOptions</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.#ctor(Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AddMixinInstanceObject">
            <summary>Sets the shim of ProxyGenerationOptions.AddMixinInstance(Object instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AdditionalAttributesGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_AdditionalAttributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AttributesToAddToGeneratedTypesGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_AttributesToAddToGeneratedTypes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.BaseTypeForInterfaceProxyGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_BaseTypeForInterfaceProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.BaseTypeForInterfaceProxySetType">
            <summary>Sets the shim of ProxyGenerationOptions.set_BaseTypeForInterfaceProxy(Type value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.Constructor">
            <summary>Sets the shim of ProxyGenerationOptions.ProxyGenerationOptions()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.ConstructorIProxyGenerationHook">
            <summary>Sets the shim of ProxyGenerationOptions.ProxyGenerationOptions(IProxyGenerationHook hook)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyGenerationOptions.ProxyGenerationOptions(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.EqualsObject">
            <summary>Sets the shim of ProxyGenerationOptions.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.GetHashCode">
            <summary>Sets the shim of ProxyGenerationOptions.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyGenerationOptions.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.HasMixinsGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_HasMixins()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.HookGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_Hook()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.HookSetIProxyGenerationHook">
            <summary>Sets the shim of ProxyGenerationOptions.set_Hook(IProxyGenerationHook value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.Initialize">
            <summary>Sets the shim of ProxyGenerationOptions.Initialize()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.MixinDataGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_MixinData()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.MixinsAsArray">
            <summary>Sets the shim of ProxyGenerationOptions.MixinsAsArray()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.SelectorGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_Selector()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.SelectorSetIInterceptorSelector">
            <summary>Sets the shim of ProxyGenerationOptions.set_Selector(IInterceptorSelector value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.StaticConstructor">
            <summary>Sets the shim of ProxyGenerationOptions.ProxyGenerationOptions()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.AddMixinInstanceObject">
            <summary>Sets the shim of ProxyGenerationOptions.AddMixinInstance(Object instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.AdditionalAttributesGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_AdditionalAttributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.AttributesToAddToGeneratedTypesGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_AttributesToAddToGeneratedTypes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.BaseTypeForInterfaceProxyGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_BaseTypeForInterfaceProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.BaseTypeForInterfaceProxySetType">
            <summary>Sets the shim of ProxyGenerationOptions.set_BaseTypeForInterfaceProxy(Type value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.EqualsObject">
            <summary>Sets the shim of ProxyGenerationOptions.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.GetHashCode01">
            <summary>Sets the shim of ProxyGenerationOptions.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyGenerationOptions.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.HasMixinsGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_HasMixins()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.HookGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_Hook()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.HookSetIProxyGenerationHook">
            <summary>Sets the shim of ProxyGenerationOptions.set_Hook(IProxyGenerationHook value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.Initialize">
            <summary>Sets the shim of ProxyGenerationOptions.Initialize()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.MixinDataGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_MixinData()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.MixinsAsArray">
            <summary>Sets the shim of ProxyGenerationOptions.MixinsAsArray()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.SelectorGet">
            <summary>Sets the shim of ProxyGenerationOptions.get_Selector()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerationOptions.AllInstances.SelectorSetIInterceptorSelector">
            <summary>Sets the shim of ProxyGenerationOptions.set_Selector(IInterceptorSelector value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyGenerator">
            <summary>Shim type of Castle.DynamicProxy.ProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.#ctor(Castle.DynamicProxy.ProxyGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyOf1IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyOf1ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetOf1M0IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(!!0 target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetOf1M0ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(!!0 target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetInterfaceOf1M0IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(!!0 target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetInterfaceOf1M0ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(!!0 target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetOf1M0IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(!!0 target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetOf1M0ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(!!0 target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetOf1IInterceptor``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.IInterceptor,``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(IInterceptor interceptor)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetOf1IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetOf1ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.BuildArgumentListForClassProxyProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.BuildArgumentListForClassProxy(ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.BuildArgumentListForClassProxyWithTargetObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.BuildArgumentListForClassProxyWithTarget(Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CheckNotGenericTypeDefinitionTypeString">
            <summary>Sets the shim of ProxyGenerator.CheckNotGenericTypeDefinition(Type type, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CheckNotGenericTypeDefinitionsIEnumerableOfTypeString">
            <summary>Sets the shim of ProxyGenerator.CheckNotGenericTypeDefinitions(IEnumerable`1&lt;Type&gt; types, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.Constructor">
            <summary>Sets the shim of ProxyGenerator.ProxyGenerator()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.ConstructorBoolean">
            <summary>Sets the shim of ProxyGenerator.ProxyGenerator(Boolean disableSignedModule)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.ConstructorIProxyBuilder">
            <summary>Sets the shim of ProxyGenerator.ProxyGenerator(IProxyBuilder builder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyInstanceTypeListOfObjectTypeObjectArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1&lt;Object&gt; proxyArguments, Type classToProxy, Object[] constructorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeTypeArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeTypeArrayProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeTypeArrayProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyTypeWithTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyTypeWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeObjectObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeObjectProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeTypeArrayObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateClassProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyTypeWithTargetInterfaceTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyTypeWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyTypeWithTargetTypeTypeArrayTypeProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyTypeWithoutTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetInterfaceTypeObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetInterfaceTypeObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetInterfaceTypeTypeArrayObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetInterfaceTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetTypeObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetTypeObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetTypeTypeArrayObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetTypeIInterceptor">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, IInterceptor interceptor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetTypeIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetTypeProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetTypeTypeArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.CreateInterfaceProxyWithoutTargetTypeTypeArrayProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.GetConstructorArgumentsObjectIInterceptorArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.GetConstructorArguments(Object target, IInterceptor[] interceptors, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.HasSecurityPermission">
            <summary>Sets the shim of ProxyGenerator.HasSecurityPermission()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.LoggerGet">
            <summary>Sets the shim of ProxyGenerator.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.LoggerSetILogger">
            <summary>Sets the shim of ProxyGenerator.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.ProxyBuilderGet">
            <summary>Sets the shim of ProxyGenerator.get_ProxyBuilder()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyOf1IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyOf1ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetOf1M0IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,``0,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(!!0 target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetOf1M0ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,``0,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(!!0 target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetInterfaceOf1M0IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,``0,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(!!0 target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetInterfaceOf1M0ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,``0,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(!!0 target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetOf1M0IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,``0,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(!!0 target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetOf1M0ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,``0,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(!!0 target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetOf1IInterceptor``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,Castle.DynamicProxy.IInterceptor,``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(IInterceptor interceptor)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetOf1IInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetOf1ProxyGenerationOptionsIInterceptorArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.ProxyGenerator,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[],``0})">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.BuildArgumentListForClassProxyProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.BuildArgumentListForClassProxy(ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.BuildArgumentListForClassProxyWithTargetObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.BuildArgumentListForClassProxyWithTarget(Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CheckNotGenericTypeDefinitionTypeString">
            <summary>Sets the shim of ProxyGenerator.CheckNotGenericTypeDefinition(Type type, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CheckNotGenericTypeDefinitionsIEnumerableOfTypeString">
            <summary>Sets the shim of ProxyGenerator.CheckNotGenericTypeDefinitions(IEnumerable`1&lt;Type&gt; types, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyInstanceTypeListOfObjectTypeObjectArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1&lt;Object&gt; proxyArguments, Type classToProxy, Object[] constructorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeTypeArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeTypeArrayProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeTypeArrayProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyTypeWithTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyTypeWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeObjectObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeObjectProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Object target, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeTypeArrayObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateClassProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyTypeWithTargetInterfaceTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyTypeWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyTypeWithTargetTypeTypeArrayTypeProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyTypeWithoutTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetInterfaceTypeObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetInterfaceTypeObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetInterfaceTypeTypeArrayObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetInterfaceTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetTypeObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetTypeObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetTypeTypeArrayObjectIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetTypeIInterceptor">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, IInterceptor interceptor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetTypeIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetTypeProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetTypeTypeArrayIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.CreateInterfaceProxyWithoutTargetTypeTypeArrayProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the shim of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.GetConstructorArgumentsObjectIInterceptorArrayProxyGenerationOptions">
            <summary>Sets the shim of ProxyGenerator.GetConstructorArguments(Object target, IInterceptor[] interceptors, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.HasSecurityPermission">
            <summary>Sets the shim of ProxyGenerator.HasSecurityPermission()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.LoggerGet">
            <summary>Sets the shim of ProxyGenerator.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of ProxyGenerator.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyGenerator.AllInstances.ProxyBuilderGet">
            <summary>Sets the shim of ProxyGenerator.get_ProxyBuilder()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyUtil">
            <summary>Shim type of Castle.DynamicProxy.ProxyUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyUtil.#ctor(Castle.DynamicProxy.ProxyUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimProxyUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyUtil.Constructor">
            <summary>Sets the shim of ProxyUtil.ProxyUtil()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyUtil.GetUnproxiedInstanceObject">
            <summary>Sets the shim of ProxyUtil.GetUnproxiedInstance(Object instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyUtil.GetUnproxiedTypeObject">
            <summary>Sets the shim of ProxyUtil.GetUnproxiedType(Object instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyUtil.IsProxyObject">
            <summary>Sets the shim of ProxyUtil.IsProxy(Object instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimProxyUtil.IsProxyTypeType">
            <summary>Sets the shim of ProxyUtil.IsProxyType(Type type)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimProxyUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimStandardInterceptor">
            <summary>Shim type of Castle.DynamicProxy.StandardInterceptor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.#ctor(Castle.DynamicProxy.StandardInterceptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.Bind(Castle.DynamicProxy.IInterceptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.Constructor">
            <summary>Sets the shim of StandardInterceptor.StandardInterceptor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.InterceptIInvocation">
            <summary>Sets the shim of StandardInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.PerformProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.PostProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.PreProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.AllInstances.InterceptIInvocation">
            <summary>Sets the shim of StandardInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.AllInstances.PerformProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.AllInstances.PostProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.ShimStandardInterceptor.AllInstances.PreProceedIInvocation">
            <summary>Sets the shim of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubAbstractInvocation">
            <summary>Stub type of Castle.DynamicProxy.AbstractInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.#ctor(System.Object,Castle.DynamicProxy.IInterceptor[],System.Reflection.MethodInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractInvocation</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InvocationTargetGet">
            <summary>Sets the stub of AbstractInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InvokeMethodOnTarget">
            <summary>Sets the stub of AbstractInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InvokeMethodOnTarget01">
            <summary>Sets the stub of AbstractInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAbstractInvocation.MethodInvocationTargetGet">
            <summary>Sets the stub of AbstractInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAbstractInvocation.TargetTypeGet">
            <summary>Sets the stub of AbstractInvocation.get_TargetType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.InvocationTarget">
            <summary>Sets the stub of AbstractInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.MethodInvocationTarget">
            <summary>Sets the stub of AbstractInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAbstractInvocation.TargetType">
            <summary>Sets the stub of AbstractInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubAllMethodsHook">
            <summary>Stub type of Castle.DynamicProxy.AllMethodsHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.Equals(System.Object)">
            <summary>Sets the stub of AllMethodsHook.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAllMethodsHook.EqualsObject">
            <summary>Sets the stub of AllMethodsHook.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.GetHashCode">
            <summary>Sets the stub of AllMethodsHook.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAllMethodsHook.GetHashCode01">
            <summary>Sets the stub of AllMethodsHook.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.InitializeStub">
            <summary>Initializes a new instance of type StubAllMethodsHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.MethodsInspected">
            <summary>Sets the stub of AllMethodsHook.MethodsInspected()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAllMethodsHook.MethodsInspected01">
            <summary>Sets the stub of AllMethodsHook.MethodsInspected()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
            <summary>Sets the stub of AllMethodsHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAllMethodsHook.NonProxyableMemberNotificationTypeMemberInfo">
            <summary>Sets the stub of AllMethodsHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubAllMethodsHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
            <summary>Sets the stub of AllMethodsHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubAllMethodsHook.ShouldInterceptMethodTypeMethodInfo">
            <summary>Sets the stub of AllMethodsHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAllMethodsHook.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAllMethodsHook.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubAllMethodsHook.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder">
            <summary>Stub type of Castle.DynamicProxy.DefaultProxyBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder.#ctor(Castle.DynamicProxy.ModuleScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultProxyBuilder</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubDefaultProxyBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler">
            <summary>Stub type of Castle.DynamicProxy.IAttributeDisassembler</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler.#ctor">
            <summary>Initializes a new instance of type StubIAttributeDisassembler</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler.cc::Castle#DynamicProxy#IAttributeDisassembler#Disassemble(System.Attribute)">
            <summary>Sets the stub of IAttributeDisassembler.Disassemble(Attribute attribute)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIAttributeDisassembler.DisassembleAttribute">
            <summary>Sets the stub of IAttributeDisassembler.Disassemble(Attribute attribute)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIChangeProxyTarget">
            <summary>Stub type of Castle.DynamicProxy.IChangeProxyTarget</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIChangeProxyTarget.#ctor">
            <summary>Initializes a new instance of type StubIChangeProxyTarget</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIChangeProxyTarget.cc::Castle#DynamicProxy#IChangeProxyTarget#ChangeInvocationTarget(System.Object)">
            <summary>Sets the stub of IChangeProxyTarget.ChangeInvocationTarget(Object target)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIChangeProxyTarget.cc::Castle#DynamicProxy#IChangeProxyTarget#ChangeProxyTarget(System.Object)">
            <summary>Sets the stub of IChangeProxyTarget.ChangeProxyTarget(Object target)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIChangeProxyTarget.ChangeInvocationTargetObject">
            <summary>Sets the stub of IChangeProxyTarget.ChangeInvocationTarget(Object target)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIChangeProxyTarget.ChangeProxyTargetObject">
            <summary>Sets the stub of IChangeProxyTarget.ChangeProxyTarget(Object target)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIInterceptor">
            <summary>Stub type of Castle.DynamicProxy.IInterceptor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInterceptor.#ctor">
            <summary>Initializes a new instance of type StubIInterceptor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInterceptor.cc::Castle#DynamicProxy#IInterceptor#Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>Sets the stub of IInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInterceptor.InterceptIInvocation">
            <summary>Sets the stub of IInterceptor.Intercept(IInvocation invocation)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIInterceptorSelector">
            <summary>Stub type of Castle.DynamicProxy.IInterceptorSelector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInterceptorSelector.#ctor">
            <summary>Initializes a new instance of type StubIInterceptorSelector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInterceptorSelector.cc::Castle#DynamicProxy#IInterceptorSelector#SelectInterceptors(System.Type,System.Reflection.MethodInfo,Castle.DynamicProxy.IInterceptor[])">
            <summary>Sets the stub of IInterceptorSelector.SelectInterceptors(Type type, MethodInfo method, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInterceptorSelector.SelectInterceptorsTypeMethodInfoIInterceptorArray">
            <summary>Sets the stub of IInterceptorSelector.SelectInterceptors(Type type, MethodInfo method, IInterceptor[] interceptors)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIInvocation">
            <summary>Stub type of Castle.DynamicProxy.IInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.#ctor">
            <summary>Initializes a new instance of type StubIInvocation</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.ArgumentsGet">
            <summary>Sets the stub of IInvocation.get_Arguments()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.AttachBackingFieldToReturnValue">
            <summary>Attaches delegates to emulate StubIInvocation.ReturnValue as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#GetArgumentValue(System.Int32)">
            <summary>Sets the stub of IInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#GetConcreteMethod">
            <summary>Sets the stub of IInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#GetConcreteMethodInvocationTarget">
            <summary>Sets the stub of IInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#Proceed">
            <summary>Sets the stub of IInvocation.Proceed()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#SetArgumentValue(System.Int32,System.Object)">
            <summary>Sets the stub of IInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.GenericArgumentsGet">
            <summary>Sets the stub of IInvocation.get_GenericArguments()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.GetArgumentValueInt32">
            <summary>Sets the stub of IInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.GetConcreteMethod">
            <summary>Sets the stub of IInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.GetConcreteMethodInvocationTarget">
            <summary>Sets the stub of IInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.InvocationTargetGet">
            <summary>Sets the stub of IInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.MethodGet">
            <summary>Sets the stub of IInvocation.get_Method()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.MethodInvocationTargetGet">
            <summary>Sets the stub of IInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.Proceed">
            <summary>Sets the stub of IInvocation.Proceed()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.ProxyGet">
            <summary>Sets the stub of IInvocation.get_Proxy()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.ReturnValueGet">
            <summary>Sets the stub of IInvocation.get_ReturnValue()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.ReturnValueSetObject">
            <summary>Sets the stub of IInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.SetArgumentValueInt32Object">
            <summary>Sets the stub of IInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIInvocation.TargetTypeGet">
            <summary>Sets the stub of IInvocation.get_TargetType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#Arguments">
            <summary>Sets the stub of IInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#GenericArguments">
            <summary>Sets the stub of IInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#InvocationTarget">
            <summary>Sets the stub of IInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#Method">
            <summary>Sets the stub of IInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#MethodInvocationTarget">
            <summary>Sets the stub of IInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#Proxy">
            <summary>Sets the stub of IInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#ReturnValue">
            <summary>Sets the stub of IInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIInvocation.cc::Castle#DynamicProxy#IInvocation#TargetType">
            <summary>Sets the stub of IInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIProxyBuilder">
            <summary>Stub type of Castle.DynamicProxy.IProxyBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.#ctor">
            <summary>Initializes a new instance of type StubIProxyBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.AttachBackingFieldToLogger">
            <summary>Attaches delegates to emulate StubIProxyBuilder.Logger as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#CreateClassProxyType(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of IProxyBuilder.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#CreateClassProxyTypeWithTarget(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of IProxyBuilder.CreateClassProxyTypeWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#CreateInterfaceProxyTypeWithTarget(System.Type,System.Type[],System.Type,Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of IProxyBuilder.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#CreateInterfaceProxyTypeWithTargetInterface(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of IProxyBuilder.CreateInterfaceProxyTypeWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#CreateInterfaceProxyTypeWithoutTarget(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Sets the stub of IProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.CreateClassProxyTypeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the stub of IProxyBuilder.CreateClassProxyType(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.CreateClassProxyTypeWithTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the stub of IProxyBuilder.CreateClassProxyTypeWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.CreateInterfaceProxyTypeWithTargetInterfaceTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the stub of IProxyBuilder.CreateInterfaceProxyTypeWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.CreateInterfaceProxyTypeWithTargetTypeTypeArrayTypeProxyGenerationOptions">
            <summary>Sets the stub of IProxyBuilder.CreateInterfaceProxyTypeWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Type targetType, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.CreateInterfaceProxyTypeWithoutTargetTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the stub of IProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.LoggerGet">
            <summary>Sets the stub of IProxyBuilder.get_Logger()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.LoggerSetILogger">
            <summary>Sets the stub of IProxyBuilder.set_Logger(ILogger value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyBuilder.ModuleScopeGet">
            <summary>Sets the stub of IProxyBuilder.get_ModuleScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#Logger">
            <summary>Sets the stub of IProxyBuilder.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubIProxyBuilder.cc::Castle#DynamicProxy#IProxyBuilder#ModuleScope">
            <summary>Sets the stub of IProxyBuilder.get_ModuleScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook">
            <summary>Stub type of Castle.DynamicProxy.IProxyGenerationHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.#ctor">
            <summary>Initializes a new instance of type StubIProxyGenerationHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.cc::Castle#DynamicProxy#IProxyGenerationHook#MethodsInspected">
            <summary>Sets the stub of IProxyGenerationHook.MethodsInspected()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.cc::Castle#DynamicProxy#IProxyGenerationHook#NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
            <summary>Sets the stub of IProxyGenerationHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.cc::Castle#DynamicProxy#IProxyGenerationHook#ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
            <summary>Sets the stub of IProxyGenerationHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.MethodsInspected">
            <summary>Sets the stub of IProxyGenerationHook.MethodsInspected()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.NonProxyableMemberNotificationTypeMemberInfo">
            <summary>Sets the stub of IProxyGenerationHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyGenerationHook.ShouldInterceptMethodTypeMethodInfo">
            <summary>Sets the stub of IProxyGenerationHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubIProxyTargetAccessor">
            <summary>Stub type of Castle.DynamicProxy.IProxyTargetAccessor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyTargetAccessor.#ctor">
            <summary>Initializes a new instance of type StubIProxyTargetAccessor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyTargetAccessor.cc::Castle#DynamicProxy#IProxyTargetAccessor#DynProxyGetTarget">
            <summary>Sets the stub of IProxyTargetAccessor.DynProxyGetTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubIProxyTargetAccessor.cc::Castle#DynamicProxy#IProxyTargetAccessor#GetInterceptors">
            <summary>Sets the stub of IProxyTargetAccessor.GetInterceptors()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyTargetAccessor.DynProxyGetTarget">
            <summary>Sets the stub of IProxyTargetAccessor.DynProxyGetTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubIProxyTargetAccessor.GetInterceptors">
            <summary>Sets the stub of IProxyTargetAccessor.GetInterceptors()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException">
            <summary>Stub type of Castle.DynamicProxy.InvalidMixinConfigurationException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidMixinConfigurationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidMixinConfigurationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidMixinConfigurationException</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidMixinConfigurationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException">
            <summary>Stub type of Castle.DynamicProxy.InvalidProxyConstructorArgumentsException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.#ctor(System.String,System.Type,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidProxyConstructorArgumentsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidProxyConstructorArgumentsException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidProxyConstructorArgumentsException</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.MessageGet">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.ParamNameGet">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.Message">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.ParamName">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubInvalidProxyConstructorArgumentsException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubMixinData">
            <summary>Stub type of Castle.DynamicProxy.MixinData</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubMixinData.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubMixinData.Equals(System.Object)">
            <summary>Sets the stub of MixinData.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubMixinData.EqualsObject">
            <summary>Sets the stub of MixinData.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubMixinData.GetHashCode">
            <summary>Sets the stub of MixinData.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubMixinData.GetHashCode01">
            <summary>Sets the stub of MixinData.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubMixinData.InitializeStub">
            <summary>Initializes a new instance of type StubMixinData</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubMixinData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubMixinData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubMixinData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubModuleScope">
            <summary>Stub type of Castle.DynamicProxy.ModuleScope</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubModuleScope.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubModuleScope.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubModuleScope.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubModuleScope.#ctor(System.Boolean,System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubModuleScope.#ctor(System.Boolean,System.Boolean,Castle.DynamicProxy.Generators.INamingScope,System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubModuleScope.InitializeStub">
            <summary>Initializes a new instance of type StubModuleScope</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubModuleScope.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubModuleScope.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubModuleScope.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubPersistentProxyBuilder">
            <summary>Stub type of Castle.DynamicProxy.PersistentProxyBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubPersistentProxyBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubPersistentProxyBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubPersistentProxyBuilder</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubPersistentProxyBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubPersistentProxyBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubPersistentProxyBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubProxyGenerationException">
            <summary>Stub type of Castle.DynamicProxy.ProxyGenerationException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubProxyGenerationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubProxyGenerationException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.InitializeStub">
            <summary>Initializes a new instance of type StubProxyGenerationException</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions">
            <summary>Stub type of Castle.DynamicProxy.ProxyGenerationOptions</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.#ctor(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.Equals(System.Object)">
            <summary>Sets the stub of ProxyGenerationOptions.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.EqualsObject">
            <summary>Sets the stub of ProxyGenerationOptions.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.GetHashCode">
            <summary>Sets the stub of ProxyGenerationOptions.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.GetHashCode01">
            <summary>Sets the stub of ProxyGenerationOptions.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.InitializeStub">
            <summary>Initializes a new instance of type StubProxyGenerationOptions</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerationOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubProxyGenerator">
            <summary>Stub type of Castle.DynamicProxy.ProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.#ctor(Castle.DynamicProxy.IProxyBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateClassProxy(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions,System.Object[],Castle.DynamicProxy.IInterceptor[])">
            <summary>Sets the stub of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateClassProxyTypeTypeArrayProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the stub of ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateClassProxyWithTarget(System.Type,System.Type[],System.Object,Castle.DynamicProxy.ProxyGenerationOptions,System.Object[],Castle.DynamicProxy.IInterceptor[])">
            <summary>Sets the stub of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateClassProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsObjectArrayIInterceptorArray">
            <summary>Sets the stub of ProxyGenerator.CreateClassProxyWithTarget(Type classToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateInterfaceProxyWithTarget(System.Type,System.Type[],System.Object,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[])">
            <summary>Sets the stub of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateInterfaceProxyWithTargetInterface(System.Type,System.Type[],System.Object,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[])">
            <summary>Sets the stub of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateInterfaceProxyWithTargetInterfaceTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the stub of ProxyGenerator.CreateInterfaceProxyWithTargetInterface(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateInterfaceProxyWithTargetTypeTypeArrayObjectProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the stub of ProxyGenerator.CreateInterfaceProxyWithTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, Object target, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateInterfaceProxyWithoutTarget(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.IInterceptor[])">
            <summary>Sets the stub of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubProxyGenerator.CreateInterfaceProxyWithoutTargetTypeTypeArrayProxyGenerationOptionsIInterceptorArray">
            <summary>Sets the stub of ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubProxyGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubProxyUtil">
            <summary>Stub type of Castle.DynamicProxy.ProxyUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubProxyUtil.InitializeStub">
            <summary>Initializes a new instance of type StubProxyUtil</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubProxyUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Fakes.StubStandardInterceptor">
            <summary>Stub type of Castle.DynamicProxy.StandardInterceptor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubStandardInterceptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubStandardInterceptor.InitializeStub">
            <summary>Initializes a new instance of type StubStandardInterceptor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubStandardInterceptor.PerformProceed(Castle.DynamicProxy.IInvocation)">
            <summary>Sets the stub of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubStandardInterceptor.PerformProceedIInvocation">
            <summary>Sets the stub of StandardInterceptor.PerformProceed(IInvocation invocation)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubStandardInterceptor.PostProceed(Castle.DynamicProxy.IInvocation)">
            <summary>Sets the stub of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubStandardInterceptor.PostProceedIInvocation">
            <summary>Sets the stub of StandardInterceptor.PostProceed(IInvocation invocation)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Fakes.StubStandardInterceptor.PreProceed(Castle.DynamicProxy.IInvocation)">
            <summary>Sets the stub of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Fakes.StubStandardInterceptor.PreProceedIInvocation">
            <summary>Sets the stub of StandardInterceptor.PreProceed(IInvocation invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubStandardInterceptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubStandardInterceptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Fakes.StubStandardInterceptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.#ctor(Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AddExpressionExpression">
            <summary>Sets the shim of AbstractCodeBuilder.AddExpression(Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AddStatementStatement">
            <summary>Sets the shim of AbstractCodeBuilder.AddStatement(Statement stmt)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.ConstructorILGenerator">
            <summary>Sets the shim of AbstractCodeBuilder.AbstractCodeBuilder(ILGenerator generator)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.DeclareLocalType">
            <summary>Sets the shim of AbstractCodeBuilder.DeclareLocal(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.GenerateIMemberEmitterILGenerator">
            <summary>Sets the shim of AbstractCodeBuilder.Generate(IMemberEmitter member, ILGenerator il)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.GeneratorGet">
            <summary>Sets the shim of AbstractCodeBuilder.get_Generator()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.IsEmptyGet">
            <summary>Sets the shim of AbstractCodeBuilder.get_IsEmpty()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.SetNonEmpty">
            <summary>Sets the shim of AbstractCodeBuilder.SetNonEmpty()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.AddExpressionExpression">
            <summary>Sets the shim of AbstractCodeBuilder.AddExpression(Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.AddStatementStatement">
            <summary>Sets the shim of AbstractCodeBuilder.AddStatement(Statement stmt)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.DeclareLocalType">
            <summary>Sets the shim of AbstractCodeBuilder.DeclareLocal(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.GenerateIMemberEmitterILGenerator">
            <summary>Sets the shim of AbstractCodeBuilder.Generate(IMemberEmitter member, ILGenerator il)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.GeneratorGet">
            <summary>Sets the shim of AbstractCodeBuilder.get_Generator()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.IsEmptyGet">
            <summary>Sets the shim of AbstractCodeBuilder.get_IsEmpty()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimAbstractCodeBuilder.AllInstances.SetNonEmpty">
            <summary>Sets the shim of AbstractCodeBuilder.SetNonEmpty()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.#ctor(Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.ConstructorTypeILGenerator">
            <summary>Sets the shim of ConstructorCodeBuilder.ConstructorCodeBuilder(Type baseType, ILGenerator generator)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.InvokeBaseConstructor">
            <summary>Sets the shim of ConstructorCodeBuilder.InvokeBaseConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.InvokeBaseConstructorConstructorInfo">
            <summary>Sets the shim of ConstructorCodeBuilder.InvokeBaseConstructor(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.InvokeBaseConstructorConstructorInfoArgumentReferenceArray">
            <summary>Sets the shim of ConstructorCodeBuilder.InvokeBaseConstructor(ConstructorInfo constructor, ArgumentReference[] arguments)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.AllInstances.InvokeBaseConstructor">
            <summary>Sets the shim of ConstructorCodeBuilder.InvokeBaseConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.AllInstances.InvokeBaseConstructorConstructorInfo">
            <summary>Sets the shim of ConstructorCodeBuilder.InvokeBaseConstructor(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimConstructorCodeBuilder.AllInstances.InvokeBaseConstructorConstructorInfoArgumentReferenceArray">
            <summary>Sets the shim of ConstructorCodeBuilder.InvokeBaseConstructor(ConstructorInfo constructor, ArgumentReference[] arguments)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.CodeBuilders.MethodCodeBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.#ctor(Castle.DynamicProxy.Generators.Emitters.CodeBuilders.MethodCodeBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.ConstructorILGenerator">
            <summary>Sets the shim of MethodCodeBuilder.MethodCodeBuilder(ILGenerator generator)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.ShimMethodCodeBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubAbstractCodeBuilder">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubAbstractCodeBuilder.#ctor(System.Reflection.Emit.ILGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubAbstractCodeBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractCodeBuilder</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubAbstractCodeBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubAbstractCodeBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubAbstractCodeBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubConstructorCodeBuilder">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubConstructorCodeBuilder.#ctor(System.Type,System.Reflection.Emit.ILGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubConstructorCodeBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorCodeBuilder</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubConstructorCodeBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubConstructorCodeBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubConstructorCodeBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubMethodCodeBuilder">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.CodeBuilders.MethodCodeBuilder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubMethodCodeBuilder.#ctor(System.Reflection.Emit.ILGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubMethodCodeBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubMethodCodeBuilder</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubMethodCodeBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubMethodCodeBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.CodeBuilders.Fakes.StubMethodCodeBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.DefineCustomAttributeForOf1FieldReference``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference})">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttributeFor(FieldReference field)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.DefineCustomAttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttribute()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.DefineCustomAttributeOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object[]})">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttribute(Object[] constructorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AddCustomAttributesProxyGenerationOptions">
            <summary>Sets the shim of AbstractTypeEmitter.AddCustomAttributes(ProxyGenerationOptions proxyGenerationOptions)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.BaseTypeGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_BaseType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.BuildType">
            <summary>Sets the shim of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.ClassConstructorGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_ClassConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.ClassConstructorSetTypeConstructorEmitter">
            <summary>Sets the shim of AbstractTypeEmitter.set_ClassConstructor(TypeConstructorEmitter value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.ConstructorTypeBuilder">
            <summary>Sets the shim of AbstractTypeEmitter.AbstractTypeEmitter(TypeBuilder typeBuilder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.ConstructorsGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_Constructors()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CopyGenericParametersFromMethodMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.CopyGenericParametersFromMethod(MethodInfo methodToCopyGenericsFrom)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateConstructorArgumentReferenceArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateConstructor(ArgumentReference[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateDefaultConstructor">
            <summary>Sets the shim of AbstractTypeEmitter.CreateDefaultConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateEventStringEventAttributesType">
            <summary>Sets the shim of AbstractTypeEmitter.CreateEvent(String name, EventAttributes atts, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateFieldStringType">
            <summary>Sets the shim of AbstractTypeEmitter.CreateField(String name, Type fieldType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateFieldStringTypeBoolean">
            <summary>Sets the shim of AbstractTypeEmitter.CreateField(String name, Type fieldType, Boolean serializable)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateFieldStringTypeFieldAttributes">
            <summary>Sets the shim of AbstractTypeEmitter.CreateField(String name, Type fieldType, FieldAttributes atts)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, MethodAttributes attributes, MethodInfo methodToUseAsATemplate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateMethodStringMethodAttributesTypeTypeArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, MethodAttributes attrs, Type returnType, Type[] argumentTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateMethodStringMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, MethodInfo methodToUseAsATemplate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateMethodStringTypeTypeArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, Type returnType, Type[] parameterTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreatePropertyStringPropertyAttributesTypeTypeArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateProperty(String name, PropertyAttributes attributes, Type propertyType, Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateStaticFieldStringType">
            <summary>Sets the shim of AbstractTypeEmitter.CreateStaticField(String name, Type fieldType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateStaticFieldStringTypeFieldAttributes">
            <summary>Sets the shim of AbstractTypeEmitter.CreateStaticField(String name, Type fieldType, FieldAttributes atts)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateTypeConstructor">
            <summary>Sets the shim of AbstractTypeEmitter.CreateTypeConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.CreateTypeTypeBuilder">
            <summary>Sets the shim of AbstractTypeEmitter.CreateType(TypeBuilder type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.DefineCustomAttributeCustomAttributeBuilder">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttribute(CustomAttributeBuilder attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.EnsureBuildersAreInAValidState">
            <summary>Sets the shim of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.GenericTypeParamsGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_GenericTypeParams()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.GetAllFields">
            <summary>Sets the shim of AbstractTypeEmitter.GetAllFields()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.GetFieldString">
            <summary>Sets the shim of AbstractTypeEmitter.GetField(String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.GetGenericArgumentString">
            <summary>Sets the shim of AbstractTypeEmitter.GetGenericArgument(String genericArgumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.GetGenericArgumentsForMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.GetGenericArgumentsFor(MethodInfo genericMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.GetGenericArgumentsForType">
            <summary>Sets the shim of AbstractTypeEmitter.GetGenericArgumentsFor(Type genericType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.NestedGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_Nested()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.SetGenericTypeParametersGenericTypeParameterBuilderArray">
            <summary>Sets the shim of AbstractTypeEmitter.SetGenericTypeParameters(GenericTypeParameterBuilder[] genericTypeParameterBuilders)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.TypeBuilderGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_TypeBuilder()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.DefineCustomAttributeForOf1FieldReference``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference})">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttributeFor(FieldReference field)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.DefineCustomAttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter})">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttribute()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.DefineCustomAttributeOf1ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.Object[]})">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttribute(Object[] constructorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.AddCustomAttributesProxyGenerationOptions">
            <summary>Sets the shim of AbstractTypeEmitter.AddCustomAttributes(ProxyGenerationOptions proxyGenerationOptions)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.BaseTypeGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_BaseType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.BuildType">
            <summary>Sets the shim of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.ClassConstructorGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_ClassConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.ClassConstructorSetTypeConstructorEmitter">
            <summary>Sets the shim of AbstractTypeEmitter.set_ClassConstructor(TypeConstructorEmitter value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.ConstructorsGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_Constructors()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CopyGenericParametersFromMethodMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.CopyGenericParametersFromMethod(MethodInfo methodToCopyGenericsFrom)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateConstructorArgumentReferenceArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateConstructor(ArgumentReference[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateDefaultConstructor">
            <summary>Sets the shim of AbstractTypeEmitter.CreateDefaultConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateEventStringEventAttributesType">
            <summary>Sets the shim of AbstractTypeEmitter.CreateEvent(String name, EventAttributes atts, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateFieldStringType">
            <summary>Sets the shim of AbstractTypeEmitter.CreateField(String name, Type fieldType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateFieldStringTypeBoolean">
            <summary>Sets the shim of AbstractTypeEmitter.CreateField(String name, Type fieldType, Boolean serializable)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateFieldStringTypeFieldAttributes">
            <summary>Sets the shim of AbstractTypeEmitter.CreateField(String name, Type fieldType, FieldAttributes atts)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, MethodAttributes attributes, MethodInfo methodToUseAsATemplate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateMethodStringMethodAttributesTypeTypeArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, MethodAttributes attrs, Type returnType, Type[] argumentTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateMethodStringMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, MethodInfo methodToUseAsATemplate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateMethodStringTypeTypeArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateMethod(String name, Type returnType, Type[] parameterTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreatePropertyStringPropertyAttributesTypeTypeArray">
            <summary>Sets the shim of AbstractTypeEmitter.CreateProperty(String name, PropertyAttributes attributes, Type propertyType, Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateStaticFieldStringType">
            <summary>Sets the shim of AbstractTypeEmitter.CreateStaticField(String name, Type fieldType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateStaticFieldStringTypeFieldAttributes">
            <summary>Sets the shim of AbstractTypeEmitter.CreateStaticField(String name, Type fieldType, FieldAttributes atts)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateTypeConstructor">
            <summary>Sets the shim of AbstractTypeEmitter.CreateTypeConstructor()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.CreateTypeTypeBuilder">
            <summary>Sets the shim of AbstractTypeEmitter.CreateType(TypeBuilder type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.DefineCustomAttributeCustomAttributeBuilder">
            <summary>Sets the shim of AbstractTypeEmitter.DefineCustomAttribute(CustomAttributeBuilder attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.EnsureBuildersAreInAValidState">
            <summary>Sets the shim of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.GenericTypeParamsGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_GenericTypeParams()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.GetAllFields">
            <summary>Sets the shim of AbstractTypeEmitter.GetAllFields()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.GetFieldString">
            <summary>Sets the shim of AbstractTypeEmitter.GetField(String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.GetGenericArgumentString">
            <summary>Sets the shim of AbstractTypeEmitter.GetGenericArgument(String genericArgumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.GetGenericArgumentsForMethodInfo">
            <summary>Sets the shim of AbstractTypeEmitter.GetGenericArgumentsFor(MethodInfo genericMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.GetGenericArgumentsForType">
            <summary>Sets the shim of AbstractTypeEmitter.GetGenericArgumentsFor(Type genericType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.NestedGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_Nested()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.SetGenericTypeParametersGenericTypeParameterBuilderArray">
            <summary>Sets the shim of AbstractTypeEmitter.SetGenericTypeParameters(GenericTypeParameterBuilder[] genericTypeParameterBuilders)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimAbstractTypeEmitter.AllInstances.TypeBuilderGet">
            <summary>Sets the shim of AbstractTypeEmitter.get_TypeBuilder()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.#ctor(Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.Constructor">
            <summary>Sets the shim of ArgumentsUtil.ArgumentsUtil()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.ConvertArgumentReferenceToExpressionArgumentReferenceArray">
            <summary>Sets the shim of ArgumentsUtil.ConvertArgumentReferenceToExpression(ArgumentReference[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.ConvertToArgumentReferenceExpressionParameterInfoArray">
            <summary>Sets the shim of ArgumentsUtil.ConvertToArgumentReferenceExpression(ParameterInfo[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.ConvertToArgumentReferenceParameterInfoArray">
            <summary>Sets the shim of ArgumentsUtil.ConvertToArgumentReference(ParameterInfo[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.ConvertToArgumentReferenceTypeArray">
            <summary>Sets the shim of ArgumentsUtil.ConvertToArgumentReference(Type[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.EmitLoadOwnerAndReferenceReferenceILGenerator">
            <summary>Sets the shim of ArgumentsUtil.EmitLoadOwnerAndReference(Reference reference, ILGenerator il)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.GetTypesParameterInfoArray">
            <summary>Sets the shim of ArgumentsUtil.GetTypes(ParameterInfo[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.InitializeAndConvertArgumentReferenceArray">
            <summary>Sets the shim of ArgumentsUtil.InitializeAndConvert(ArgumentReference[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.InitializeArgumentsByPositionArgumentReferenceArrayBoolean">
            <summary>Sets the shim of ArgumentsUtil.InitializeArgumentsByPosition(ArgumentReference[] args, Boolean isStatic)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.IsAnyByRefParameterInfoArray">
            <summary>Sets the shim of ArgumentsUtil.IsAnyByRef(ParameterInfo[] parameters)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimArgumentsUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.ClassEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.ConstructorModuleScopeStringTypeIEnumerableOfType">
            <summary>Sets the shim of ClassEmitter.ClassEmitter(ModuleScope modulescope, String name, Type baseType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.ConstructorModuleScopeStringTypeIEnumerableOfTypeTypeAttributes">
            <summary>Sets the shim of ClassEmitter.ClassEmitter(ModuleScope modulescope, String name, Type baseType, IEnumerable`1&lt;Type&gt; interfaces, TypeAttributes flags)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.ConstructorModuleScopeStringTypeIEnumerableOfTypeTypeAttributesBoolean">
            <summary>Sets the shim of ClassEmitter.ClassEmitter(ModuleScope modulescope, String name, Type baseType, IEnumerable`1&lt;Type&gt; interfaces, TypeAttributes flags, Boolean forceUnsigned)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.ConstructorTypeBuilder">
            <summary>Sets the shim of ClassEmitter.ClassEmitter(TypeBuilder typeBuilder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.CreateTypeBuilderModuleScopeStringTypeIEnumerableOfTypeTypeAttributesBoolean">
            <summary>Sets the shim of ClassEmitter.CreateTypeBuilder(ModuleScope modulescope, String name, Type baseType, IEnumerable`1&lt;Type&gt; interfaces, TypeAttributes flags, Boolean forceUnsigned)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.ModuleScopeGet">
            <summary>Sets the shim of ClassEmitter.get_ModuleScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.ShouldForceUnsigned">
            <summary>Sets the shim of ClassEmitter.ShouldForceUnsigned()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimClassEmitter.AllInstances.ModuleScopeGet">
            <summary>Sets the shim of ClassEmitter.get_ModuleScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.ConstructorCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.#ctor(Castle.DynamicProxy.Generators.Emitters.ConstructorCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.Generic.ICollection{Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.Generic.IList{Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Bind(System.Collections.Generic.IReadOnlyList{Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.Constructor">
            <summary>Sets the shim of ConstructorCollection.ConstructorCollection()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.Bind(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.CodeBuilderGet">
            <summary>Sets the shim of ConstructorEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.ConstructorAbstractTypeEmitterArgumentReferenceArray">
            <summary>Sets the shim of ConstructorEmitter.ConstructorEmitter(AbstractTypeEmitter maintype, ArgumentReference[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.ConstructorAbstractTypeEmitterConstructorBuilder">
            <summary>Sets the shim of ConstructorEmitter.ConstructorEmitter(AbstractTypeEmitter maintype, ConstructorBuilder builder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.ConstructorBuilderGet">
            <summary>Sets the shim of ConstructorEmitter.get_ConstructorBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.EnsureValidCodeBlock">
            <summary>Sets the shim of ConstructorEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.Generate">
            <summary>Sets the shim of ConstructorEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.ImplementedByRuntimeGet">
            <summary>Sets the shim of ConstructorEmitter.get_ImplementedByRuntime()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.MemberGet">
            <summary>Sets the shim of ConstructorEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.ReturnTypeGet">
            <summary>Sets the shim of ConstructorEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.CodeBuilderGet">
            <summary>Sets the shim of ConstructorEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.ConstructorBuilderGet">
            <summary>Sets the shim of ConstructorEmitter.get_ConstructorBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.EnsureValidCodeBlock">
            <summary>Sets the shim of ConstructorEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.Generate">
            <summary>Sets the shim of ConstructorEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.ImplementedByRuntimeGet">
            <summary>Sets the shim of ConstructorEmitter.get_ImplementedByRuntime()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.MemberGet">
            <summary>Sets the shim of ConstructorEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimConstructorEmitter.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of ConstructorEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.EventCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.#ctor(Castle.DynamicProxy.Generators.Emitters.EventCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.Generic.ICollection{Castle.DynamicProxy.Generators.Emitters.EventEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Generators.Emitters.EventEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.Generic.IList{Castle.DynamicProxy.Generators.Emitters.EventEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Castle.DynamicProxy.Generators.Emitters.EventEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Bind(System.Collections.Generic.IReadOnlyList{Castle.DynamicProxy.Generators.Emitters.EventEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.Constructor">
            <summary>Sets the shim of EventCollection.EventCollection()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.EventEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.EventEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.Bind(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.ConstructorAbstractTypeEmitterStringEventAttributesType">
            <summary>Sets the shim of EventEmitter.EventEmitter(AbstractTypeEmitter typeEmitter, String name, EventAttributes attributes, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.CreateAddMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of EventEmitter.CreateAddMethod(String addMethodName, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.CreateRemoveMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of EventEmitter.CreateRemoveMethod(String removeMethodName, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.EnsureValidCodeBlock">
            <summary>Sets the shim of EventEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.Generate">
            <summary>Sets the shim of EventEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.MemberGet">
            <summary>Sets the shim of EventEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.ReturnTypeGet">
            <summary>Sets the shim of EventEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances.CreateAddMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of EventEmitter.CreateAddMethod(String addMethodName, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances.CreateRemoveMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of EventEmitter.CreateRemoveMethod(String removeMethodName, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances.EnsureValidCodeBlock">
            <summary>Sets the shim of EventEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances.Generate">
            <summary>Sets the shim of EventEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances.MemberGet">
            <summary>Sets the shim of EventEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimEventEmitter.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of EventEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.LdcOpCodesDictionary</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.#ctor(Castle.DynamicProxy.Generators.Emitters.LdcOpCodesDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.Generic.IDictionary{System.Type,System.Reflection.Emit.OpCode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Reflection.Emit.OpCode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.Constructor">
            <summary>Sets the shim of LdcOpCodesDictionary.LdcOpCodesDictionary()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.EmptyOpCodeGet">
            <summary>Sets the shim of LdcOpCodesDictionary.get_EmptyOpCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.InstanceGet">
            <summary>Sets the shim of LdcOpCodesDictionary.get_Instance()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.ItemGetType">
            <summary>Sets the shim of LdcOpCodesDictionary.get_Item(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.StaticConstructor">
            <summary>Sets the shim of LdcOpCodesDictionary.LdcOpCodesDictionary()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdcOpCodesDictionary.AllInstances.ItemGetType">
            <summary>Sets the shim of LdcOpCodesDictionary.get_Item(Type type)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.#ctor(Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.Generic.IDictionary{System.Type,System.Reflection.Emit.OpCode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Reflection.Emit.OpCode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.Constructor">
            <summary>Sets the shim of LdindOpCodesDictionary.LdindOpCodesDictionary()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.EmptyOpCodeGet">
            <summary>Sets the shim of LdindOpCodesDictionary.get_EmptyOpCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.InstanceGet">
            <summary>Sets the shim of LdindOpCodesDictionary.get_Instance()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.ItemGetType">
            <summary>Sets the shim of LdindOpCodesDictionary.get_Item(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.StaticConstructor">
            <summary>Sets the shim of LdindOpCodesDictionary.LdindOpCodesDictionary()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimLdindOpCodesDictionary.AllInstances.ItemGetType">
            <summary>Sets the shim of LdindOpCodesDictionary.get_Item(Type type)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.MethodCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.#ctor(Castle.DynamicProxy.Generators.Emitters.MethodCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.ICollection{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IList{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Bind(System.Collections.Generic.IReadOnlyList{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.Constructor">
            <summary>Sets the shim of MethodCollection.MethodCollection()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.MethodEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.Bind(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ArgumentsGet">
            <summary>Sets the shim of MethodEmitter.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.CodeBuilderGet">
            <summary>Sets the shim of MethodEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ConstructorAbstractTypeEmitterStringMethodAttributes">
            <summary>Sets the shim of MethodEmitter.MethodEmitter(AbstractTypeEmitter owner, String name, MethodAttributes attributes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ConstructorAbstractTypeEmitterStringMethodAttributesMethodInfo">
            <summary>Sets the shim of MethodEmitter.MethodEmitter(AbstractTypeEmitter owner, String name, MethodAttributes attributes, MethodInfo methodToUseAsATemplate)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ConstructorAbstractTypeEmitterStringMethodAttributesTypeTypeArray">
            <summary>Sets the shim of MethodEmitter.MethodEmitter(AbstractTypeEmitter owner, String name, MethodAttributes attributes, Type returnType, Type[] argumentTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ConstructorMethodBuilder">
            <summary>Sets the shim of MethodEmitter.MethodEmitter(MethodBuilder builder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.DefineCustomAttributeCustomAttributeBuilder">
            <summary>Sets the shim of MethodEmitter.DefineCustomAttribute(CustomAttributeBuilder attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.DefineParametersParameterInfoArray">
            <summary>Sets the shim of MethodEmitter.DefineParameters(ParameterInfo[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.EnsureValidCodeBlock">
            <summary>Sets the shim of MethodEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.Generate">
            <summary>Sets the shim of MethodEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.GenericTypeParamsGet">
            <summary>Sets the shim of MethodEmitter.get_GenericTypeParams()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ImplementedByRuntimeGet">
            <summary>Sets the shim of MethodEmitter.get_ImplementedByRuntime()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.MemberGet">
            <summary>Sets the shim of MethodEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.MethodBuilderGet">
            <summary>Sets the shim of MethodEmitter.get_MethodBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.ReturnTypeGet">
            <summary>Sets the shim of MethodEmitter.get_ReturnType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.SetParametersTypeArray">
            <summary>Sets the shim of MethodEmitter.SetParameters(Type[] paramTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.SetReturnTypeType">
            <summary>Sets the shim of MethodEmitter.SetReturnType(Type returnType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.SetSignatureTypeParameterInfoTypeArrayParameterInfoArray">
            <summary>Sets the shim of MethodEmitter.SetSignature(Type returnType, ParameterInfo returnParameter, Type[] parameters, ParameterInfo[] baseMethodParameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter._SetSignatureb__0ParameterInfo">
            <summary>Sets the shim of MethodEmitter.&lt;SetSignature&gt;b__0(ParameterInfo x)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter._SetSignatureb__1ParameterInfo">
            <summary>Sets the shim of MethodEmitter.&lt;SetSignature&gt;b__1(ParameterInfo x)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.ArgumentsGet">
            <summary>Sets the shim of MethodEmitter.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.CodeBuilderGet">
            <summary>Sets the shim of MethodEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.DefineCustomAttributeCustomAttributeBuilder">
            <summary>Sets the shim of MethodEmitter.DefineCustomAttribute(CustomAttributeBuilder attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.DefineParametersParameterInfoArray">
            <summary>Sets the shim of MethodEmitter.DefineParameters(ParameterInfo[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.EnsureValidCodeBlock">
            <summary>Sets the shim of MethodEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.Generate">
            <summary>Sets the shim of MethodEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.GenericTypeParamsGet">
            <summary>Sets the shim of MethodEmitter.get_GenericTypeParams()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.ImplementedByRuntimeGet">
            <summary>Sets the shim of MethodEmitter.get_ImplementedByRuntime()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.MemberGet">
            <summary>Sets the shim of MethodEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.MethodBuilderGet">
            <summary>Sets the shim of MethodEmitter.get_MethodBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of MethodEmitter.get_ReturnType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.SetParametersTypeArray">
            <summary>Sets the shim of MethodEmitter.SetParameters(Type[] paramTypes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.SetReturnTypeType">
            <summary>Sets the shim of MethodEmitter.SetReturnType(Type returnType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimMethodEmitter.AllInstances.SetSignatureTypeParameterInfoTypeArrayParameterInfoArray">
            <summary>Sets the shim of MethodEmitter.SetSignature(Type returnType, ParameterInfo returnParameter, Type[] parameters, ParameterInfo[] baseMethodParameters)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.NestedClassCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.#ctor(Castle.DynamicProxy.Generators.Emitters.NestedClassCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.Generic.ICollection{Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.Generic.IList{Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Bind(System.Collections.Generic.IReadOnlyList{Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.Constructor">
            <summary>Sets the shim of NestedClassCollection.NestedClassCollection()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.ConstructorAbstractTypeEmitterStringTypeAttributesTypeTypeArray">
            <summary>Sets the shim of NestedClassEmitter.NestedClassEmitter(AbstractTypeEmitter maintype, String name, TypeAttributes attributes, Type baseType, Type[] interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.ConstructorAbstractTypeEmitterStringTypeTypeArray">
            <summary>Sets the shim of NestedClassEmitter.NestedClassEmitter(AbstractTypeEmitter maintype, String name, Type baseType, Type[] interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.ConstructorAbstractTypeEmitterTypeBuilder">
            <summary>Sets the shim of NestedClassEmitter.NestedClassEmitter(AbstractTypeEmitter maintype, TypeBuilder typeBuilder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.CreateTypeBuilderAbstractTypeEmitterStringTypeAttributesTypeTypeArray">
            <summary>Sets the shim of NestedClassEmitter.CreateTypeBuilder(AbstractTypeEmitter maintype, String name, TypeAttributes attributes, Type baseType, Type[] interfaces)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimNestedClassEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.PropertiesCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.#ctor(Castle.DynamicProxy.Generators.Emitters.PropertiesCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.Generic.ICollection{Castle.DynamicProxy.Generators.Emitters.PropertyEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Generators.Emitters.PropertyEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.Generic.IList{Castle.DynamicProxy.Generators.Emitters.PropertyEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.Generic.IReadOnlyCollection{Castle.DynamicProxy.Generators.Emitters.PropertyEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Bind(System.Collections.Generic.IReadOnlyList{Castle.DynamicProxy.Generators.Emitters.PropertyEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.Constructor">
            <summary>Sets the shim of PropertiesCollection.PropertiesCollection()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertiesCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.PropertyEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.PropertyEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.Bind(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.ConstructorAbstractTypeEmitterStringPropertyAttributesTypeTypeArray">
            <summary>Sets the shim of PropertyEmitter.PropertyEmitter(AbstractTypeEmitter parentTypeEmitter, String name, PropertyAttributes attributes, Type propertyType, Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.CreateGetMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of PropertyEmitter.CreateGetMethod(String name, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.CreateGetMethodStringMethodAttributesMethodInfoTypeArray">
            <summary>Sets the shim of PropertyEmitter.CreateGetMethod(String name, MethodAttributes attrs, MethodInfo methodToOverride, Type[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.CreateSetMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of PropertyEmitter.CreateSetMethod(String name, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.CreateSetMethodStringMethodAttributesMethodInfoTypeArray">
            <summary>Sets the shim of PropertyEmitter.CreateSetMethod(String name, MethodAttributes attrs, MethodInfo methodToOverride, Type[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.DefineCustomAttributeCustomAttributeBuilder">
            <summary>Sets the shim of PropertyEmitter.DefineCustomAttribute(CustomAttributeBuilder attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.EnsureValidCodeBlock">
            <summary>Sets the shim of PropertyEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.Generate">
            <summary>Sets the shim of PropertyEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.MemberGet">
            <summary>Sets the shim of PropertyEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.ReturnTypeGet">
            <summary>Sets the shim of PropertyEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.CreateGetMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of PropertyEmitter.CreateGetMethod(String name, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.CreateGetMethodStringMethodAttributesMethodInfoTypeArray">
            <summary>Sets the shim of PropertyEmitter.CreateGetMethod(String name, MethodAttributes attrs, MethodInfo methodToOverride, Type[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.CreateSetMethodStringMethodAttributesMethodInfo">
            <summary>Sets the shim of PropertyEmitter.CreateSetMethod(String name, MethodAttributes attributes, MethodInfo methodToOverride)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.CreateSetMethodStringMethodAttributesMethodInfoTypeArray">
            <summary>Sets the shim of PropertyEmitter.CreateSetMethod(String name, MethodAttributes attrs, MethodInfo methodToOverride, Type[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.DefineCustomAttributeCustomAttributeBuilder">
            <summary>Sets the shim of PropertyEmitter.DefineCustomAttribute(CustomAttributeBuilder attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.EnsureValidCodeBlock">
            <summary>Sets the shim of PropertyEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.Generate">
            <summary>Sets the shim of PropertyEmitter.Generate()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.MemberGet">
            <summary>Sets the shim of PropertyEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimPropertyEmitter.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of PropertyEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.StindOpCodesDictionary</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.#ctor(Castle.DynamicProxy.Generators.Emitters.StindOpCodesDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Type,System.Reflection.Emit.OpCode}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.Generic.IDictionary{System.Type,System.Reflection.Emit.OpCode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Reflection.Emit.OpCode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.Constructor">
            <summary>Sets the shim of StindOpCodesDictionary.StindOpCodesDictionary()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.EmptyOpCodeGet">
            <summary>Sets the shim of StindOpCodesDictionary.get_EmptyOpCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.InstanceGet">
            <summary>Sets the shim of StindOpCodesDictionary.get_Instance()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.ItemGetType">
            <summary>Sets the shim of StindOpCodesDictionary.get_Item(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.StaticConstructor">
            <summary>Sets the shim of StindOpCodesDictionary.StindOpCodesDictionary()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStindOpCodesDictionary.AllInstances.ItemGetType">
            <summary>Sets the shim of StindOpCodesDictionary.get_Item(Type type)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.StrongNameUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.CanStrongNameAssemblyGet">
            <summary>Sets the shim of StrongNameUtil.get_CanStrongNameAssembly()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.CanStrongNameAssemblySetBoolean">
            <summary>Sets the shim of StrongNameUtil.set_CanStrongNameAssembly(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.ContainsPublicKeyAssembly">
            <summary>Sets the shim of StrongNameUtil.ContainsPublicKey(Assembly assembly)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.IsAnyTypeFromUnsignedAssemblyIEnumerableOfType">
            <summary>Sets the shim of StrongNameUtil.IsAnyTypeFromUnsignedAssembly(IEnumerable`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.IsAnyTypeFromUnsignedAssemblyTypeIEnumerableOfType">
            <summary>Sets the shim of StrongNameUtil.IsAnyTypeFromUnsignedAssembly(Type baseType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.IsAssemblySignedAssembly">
            <summary>Sets the shim of StrongNameUtil.IsAssemblySigned(Assembly assembly)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil.StaticConstructor">
            <summary>Sets the shim of StrongNameUtil.StrongNameUtil()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimStrongNameUtil._IsAnyTypeFromUnsignedAssemblyb__1Type">
            <summary>Sets the shim of StrongNameUtil.&lt;IsAnyTypeFromUnsignedAssembly&gt;b__1(Type t)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.TypeConstructorEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.TypeConstructorEmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.Bind(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.ConstructorAbstractTypeEmitter">
            <summary>Sets the shim of TypeConstructorEmitter.TypeConstructorEmitter(AbstractTypeEmitter maintype)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.EnsureValidCodeBlock">
            <summary>Sets the shim of TypeConstructorEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.ShimTypeConstructorEmitter.AllInstances.EnsureValidCodeBlock">
            <summary>Sets the shim of TypeConstructorEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.#ctor(System.Reflection.Emit.TypeBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.BuildType">
            <summary>Sets the stub of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.BuildType01">
            <summary>Sets the stub of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.EnsureBuildersAreInAValidState">
            <summary>Sets the stub of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.EnsureBuildersAreInAValidState01">
            <summary>Sets the stub of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractTypeEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubAbstractTypeEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubArgumentsUtil">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubArgumentsUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubArgumentsUtil.InitializeStub">
            <summary>Initializes a new instance of type StubArgumentsUtil</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubArgumentsUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubArgumentsUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubArgumentsUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.ClassEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.#ctor(System.Reflection.Emit.TypeBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.#ctor(Castle.DynamicProxy.ModuleScope,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.#ctor(Castle.DynamicProxy.ModuleScope,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Reflection.TypeAttributes)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.#ctor(Castle.DynamicProxy.ModuleScope,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Reflection.TypeAttributes,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.BuildType">
            <summary>Sets the stub of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.BuildType01">
            <summary>Sets the stub of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.EnsureBuildersAreInAValidState">
            <summary>Sets the stub of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.EnsureBuildersAreInAValidState01">
            <summary>Sets the stub of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.InitializeGenericArgumentsFromBases(System.Type@,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of ClassEmitter.InitializeGenericArgumentsFromBases(Type&amp; baseType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.InitializeGenericArgumentsFromBasesTypeRefIEnumerableOfType">
            <summary>Sets the stub of ClassEmitter.InitializeGenericArgumentsFromBases(Type&amp; baseType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubClassEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubClassEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.ConstructorCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.InsertItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.InsertItemInt32ConstructorEmitter">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.SetItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.SetItemInt32ConstructorEmitter">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.Reflection.Emit.ConstructorBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.CodeBuilderGet">
            <summary>Sets the stub of ConstructorEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.EnsureValidCodeBlock">
            <summary>Sets the stub of ConstructorEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.EnsureValidCodeBlock01">
            <summary>Sets the stub of ConstructorEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.Generate">
            <summary>Sets the stub of ConstructorEmitter.Generate()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.Generate01">
            <summary>Sets the stub of ConstructorEmitter.Generate()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.CodeBuilder">
            <summary>Sets the stub of ConstructorEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubConstructorEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.EventCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.InitializeStub">
            <summary>Initializes a new instance of type StubEventCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.InsertItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.EventEmitter)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.InsertItemInt32EventEmitter">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.SetItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.EventEmitter)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.SetItemInt32EventEmitter">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.EventEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.String,System.Reflection.EventAttributes,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubEventEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubEventEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.IMemberEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.#ctor">
            <summary>Initializes a new instance of type StubIMemberEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.cc::Castle#DynamicProxy#Generators#Emitters#IMemberEmitter#EnsureValidCodeBlock">
            <summary>Sets the stub of IMemberEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.cc::Castle#DynamicProxy#Generators#Emitters#IMemberEmitter#Generate">
            <summary>Sets the stub of IMemberEmitter.Generate()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.EnsureValidCodeBlock">
            <summary>Sets the stub of IMemberEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.Generate">
            <summary>Sets the stub of IMemberEmitter.Generate()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.MemberGet">
            <summary>Sets the stub of IMemberEmitter.get_Member()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.ReturnTypeGet">
            <summary>Sets the stub of IMemberEmitter.get_ReturnType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.cc::Castle#DynamicProxy#Generators#Emitters#IMemberEmitter#Member">
            <summary>Sets the stub of IMemberEmitter.get_Member()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubIMemberEmitter.cc::Castle#DynamicProxy#Generators#Emitters#IMemberEmitter#ReturnType">
            <summary>Sets the stub of IMemberEmitter.get_ReturnType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.MethodCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.InitializeStub">
            <summary>Initializes a new instance of type StubMethodCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.InsertItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.InsertItemInt32MethodEmitter">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.SetItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.SetItemInt32MethodEmitter">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.MethodEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.#ctor(System.Reflection.Emit.MethodBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.CodeBuilderGet">
            <summary>Sets the stub of MethodEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.EnsureValidCodeBlock">
            <summary>Sets the stub of MethodEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.EnsureValidCodeBlock01">
            <summary>Sets the stub of MethodEmitter.EnsureValidCodeBlock()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.Generate">
            <summary>Sets the stub of MethodEmitter.Generate()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.Generate01">
            <summary>Sets the stub of MethodEmitter.Generate()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubMethodEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.CodeBuilder">
            <summary>Sets the stub of MethodEmitter.get_CodeBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubMethodEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.NestedClassCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.InitializeStub">
            <summary>Initializes a new instance of type StubNestedClassCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.InsertItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.InsertItemInt32NestedClassEmitter">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.SetItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.SetItemInt32NestedClassEmitter">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.Reflection.Emit.TypeBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.String,System.Type,System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.BuildType">
            <summary>Sets the stub of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.BuildType01">
            <summary>Sets the stub of AbstractTypeEmitter.BuildType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.EnsureBuildersAreInAValidState">
            <summary>Sets the stub of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.EnsureBuildersAreInAValidState01">
            <summary>Sets the stub of AbstractTypeEmitter.EnsureBuildersAreInAValidState()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubNestedClassEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubNestedClassEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.PropertiesCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.ClearItems">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.ClearItems01">
            <summary>Sets the stub of Collection`1.ClearItems()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.InitializeStub">
            <summary>Initializes a new instance of type StubPropertiesCollection</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.InsertItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.PropertyEmitter)">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.InsertItemInt32PropertyEmitter">
            <summary>Sets the stub of Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.RemoveItem(System.Int32)">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.RemoveItemInt32">
            <summary>Sets the stub of Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.SetItem(System.Int32,Castle.DynamicProxy.Generators.Emitters.PropertyEmitter)">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.SetItemInt32PropertyEmitter">
            <summary>Sets the stub of Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertiesCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertyEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.PropertyEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertyEmitter.#ctor(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertyEmitter.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyEmitter</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertyEmitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertyEmitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.Fakes.StubPropertyEmitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AddressOfReferenceExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.AddressOfReferenceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.ConstructorReference">
            <summary>Sets the shim of AddressOfReferenceExpression.AddressOfReferenceExpression(Reference reference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AddressOfReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAddressOfReferenceExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AddressOfReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.ConstructorType">
            <summary>Sets the shim of ArgumentReference.ArgumentReference(Type argumentType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.ConstructorTypeInt32">
            <summary>Sets the shim of ArgumentReference.ArgumentReference(Type argumentType, Int32 position)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of ArgumentReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.LoadReferenceILGenerator">
            <summary>Sets the shim of ArgumentReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.PositionGet">
            <summary>Sets the shim of ArgumentReference.get_Position()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.PositionSetInt32">
            <summary>Sets the shim of ArgumentReference.set_Position(Int32 value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.StoreReferenceILGenerator">
            <summary>Sets the shim of ArgumentReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of ArgumentReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of ArgumentReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.AllInstances.PositionGet">
            <summary>Sets the shim of ArgumentReference.get_Position()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.AllInstances.PositionSetInt32">
            <summary>Sets the shim of ArgumentReference.set_Position(Int32 value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimArgumentReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of ArgumentReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.ConstructorReferenceType">
            <summary>Sets the shim of AsTypeReference.AsTypeReference(Reference reference, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of AsTypeReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.LoadReferenceILGenerator">
            <summary>Sets the shim of AsTypeReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.StoreReferenceILGenerator">
            <summary>Sets the shim of AsTypeReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of AsTypeReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of AsTypeReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAsTypeReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of AsTypeReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.ConstructorArgumentReferenceExpression">
            <summary>Sets the shim of AssignArgumentStatement.AssignArgumentStatement(ArgumentReference argument, Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AssignArgumentStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArgumentStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AssignArgumentStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.ConstructorReferenceInt32Expression">
            <summary>Sets the shim of AssignArrayStatement.AssignArrayStatement(Reference targetArray, Int32 targetPosition, Expression value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AssignArrayStatement.Emit(IMemberEmitter member, ILGenerator il)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignArrayStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AssignArrayStatement.Emit(IMemberEmitter member, ILGenerator il)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.ConstructorReferenceExpression">
            <summary>Sets the shim of AssignStatement.AssignStatement(Reference target, Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AssignStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimAssignStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of AssignStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.BindDelegateExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.BindDelegateExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.ConstructorTypeExpressionMethodInfoGenericTypeParameterBuilderArray">
            <summary>Sets the shim of BindDelegateExpression.BindDelegateExpression(Type delegate, Expression owner, MethodInfo methodToBindTo, GenericTypeParameterBuilder[] genericTypeParams)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of BindDelegateExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimBindDelegateExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of BindDelegateExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.ConstructorLocalReference">
            <summary>Sets the shim of ByRefReference.ByRefReference(LocalReference localReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of ByRefReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.LoadReferenceILGenerator">
            <summary>Sets the shim of ByRefReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.StoreReferenceILGenerator">
            <summary>Sets the shim of ByRefReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of ByRefReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of ByRefReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimByRefReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of ByRefReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.ConstructorObject">
            <summary>Sets the shim of ConstReference.ConstReference(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.GenerateILGenerator">
            <summary>Sets the shim of ConstReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of ConstReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.LoadReferenceILGenerator">
            <summary>Sets the shim of ConstReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.StoreReferenceILGenerator">
            <summary>Sets the shim of ConstReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.AllInstances.GenerateILGenerator">
            <summary>Sets the shim of ConstReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of ConstReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of ConstReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of ConstReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.ConstructorConstructorInfoExpressionArray">
            <summary>Sets the shim of ConstructorInvocationStatement.ConstructorInvocationStatement(ConstructorInfo method, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ConstructorInvocationStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConstructorInvocationStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ConstructorInvocationStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.ConstructorTypeExpression">
            <summary>Sets the shim of ConvertExpression.ConvertExpression(Type targetType, Expression right)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.ConstructorTypeTypeExpression">
            <summary>Sets the shim of ConvertExpression.ConvertExpression(Type targetType, Type fromType, Expression right)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.EmitCastIfNeededTypeTypeILGenerator">
            <summary>Sets the shim of ConvertExpression.EmitCastIfNeeded(Type from, Type target, ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ConvertExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimConvertExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ConvertExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.ConstructorType">
            <summary>Sets the shim of DefaultValueExpression.DefaultValueExpression(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.EmitByRefILGenerator">
            <summary>Sets the shim of DefaultValueExpression.EmitByRef(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of DefaultValueExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.IsPrimitiveOrClassType">
            <summary>Sets the shim of DefaultValueExpression.IsPrimitiveOrClass(Type type)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.AllInstances.EmitByRefILGenerator">
            <summary>Sets the shim of DefaultValueExpression.EmitByRef(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of DefaultValueExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimDefaultValueExpression.AllInstances.IsPrimitiveOrClassType">
            <summary>Sets the shim of DefaultValueExpression.IsPrimitiveOrClass(Type type)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.EndExceptionBlockStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.EndExceptionBlockStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.Constructor">
            <summary>Sets the shim of EndExceptionBlockStatement.EndExceptionBlockStatement()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of EndExceptionBlockStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimEndExceptionBlockStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of EndExceptionBlockStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.Constructor">
            <summary>Sets the shim of Expression.Expression()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.ConstructorExpression">
            <summary>Sets the shim of ExpressionStatement.ExpressionStatement(Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ExpressionStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimExpressionStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ExpressionStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.ConstructorFieldBuilder">
            <summary>Sets the shim of FieldReference.FieldReference(FieldBuilder fieldbuilder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.ConstructorFieldInfo">
            <summary>Sets the shim of FieldReference.FieldReference(FieldInfo field)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.FieldbuilderGet">
            <summary>Sets the shim of FieldReference.get_Fieldbuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of FieldReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.LoadReferenceILGenerator">
            <summary>Sets the shim of FieldReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.ReferenceGet">
            <summary>Sets the shim of FieldReference.get_Reference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.StoreReferenceILGenerator">
            <summary>Sets the shim of FieldReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.AllInstances.FieldbuilderGet">
            <summary>Sets the shim of FieldReference.get_Fieldbuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of FieldReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of FieldReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.AllInstances.ReferenceGet">
            <summary>Sets the shim of FieldReference.get_Reference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFieldReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of FieldReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.FinallyStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.FinallyStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.Constructor">
            <summary>Sets the shim of FinallyStatement.FinallyStatement()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of FinallyStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimFinallyStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of FinallyStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.IfNullExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IfNullExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.ConstructorReferenceIILEmitterIILEmitter">
            <summary>Sets the shim of IfNullExpression.IfNullExpression(Reference reference, IILEmitter ifNull, IILEmitter ifNotNull)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of IfNullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIfNullExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of IfNullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.ConstructorTypeReference">
            <summary>Sets the shim of IndirectReference.IndirectReference(TypeReference byRefReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of IndirectReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.LoadReferenceILGenerator">
            <summary>Sets the shim of IndirectReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.StoreReferenceILGenerator">
            <summary>Sets the shim of IndirectReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.WrapIfByRefTypeReference">
            <summary>Sets the shim of IndirectReference.WrapIfByRef(TypeReference reference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.WrapIfByRefTypeReferenceArray">
            <summary>Sets the shim of IndirectReference.WrapIfByRef(TypeReference[] references)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of IndirectReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of IndirectReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimIndirectReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of IndirectReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.ConstructorInt32">
            <summary>Sets the shim of LiteralIntExpression.LiteralIntExpression(Int32 value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of LiteralIntExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLiteralIntExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of LiteralIntExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadArrayElementExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadArrayElementExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.ConstructorConstReferenceReferenceType">
            <summary>Sets the shim of LoadArrayElementExpression.LoadArrayElementExpression(ConstReference index, Reference arrayReference, Type returnType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.ConstructorInt32ReferenceType">
            <summary>Sets the shim of LoadArrayElementExpression.LoadArrayElementExpression(Int32 index, Reference arrayReference, Type returnType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of LoadArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadArrayElementExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of LoadArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.ConstructorConstReferenceReference">
            <summary>Sets the shim of LoadRefArrayElementExpression.LoadRefArrayElementExpression(ConstReference index, Reference arrayReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.ConstructorInt32Reference">
            <summary>Sets the shim of LoadRefArrayElementExpression.LoadRefArrayElementExpression(Int32 index, Reference arrayReference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of LoadRefArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLoadRefArrayElementExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of LoadRefArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.ConstructorType">
            <summary>Sets the shim of LocalReference.LocalReference(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.GenerateILGenerator">
            <summary>Sets the shim of LocalReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of LocalReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.LoadReferenceILGenerator">
            <summary>Sets the shim of LocalReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.StoreReferenceILGenerator">
            <summary>Sets the shim of LocalReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.AllInstances.GenerateILGenerator">
            <summary>Sets the shim of LocalReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of LocalReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of LocalReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimLocalReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of LocalReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.ConstructorMethodEmitterExpressionArray">
            <summary>Sets the shim of MethodInvocationExpression.MethodInvocationExpression(MethodEmitter method, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.ConstructorMethodInfoExpressionArray">
            <summary>Sets the shim of MethodInvocationExpression.MethodInvocationExpression(MethodInfo method, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.ConstructorReferenceMethodEmitterExpressionArray">
            <summary>Sets the shim of MethodInvocationExpression.MethodInvocationExpression(Reference owner, MethodEmitter method, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.ConstructorReferenceMethodInfoExpressionArray">
            <summary>Sets the shim of MethodInvocationExpression.MethodInvocationExpression(Reference owner, MethodInfo method, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of MethodInvocationExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.VirtualCallGet">
            <summary>Sets the shim of MethodInvocationExpression.get_VirtualCall()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.VirtualCallSetBoolean">
            <summary>Sets the shim of MethodInvocationExpression.set_VirtualCall(Boolean value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of MethodInvocationExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.AllInstances.VirtualCallGet">
            <summary>Sets the shim of MethodInvocationExpression.get_VirtualCall()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodInvocationExpression.AllInstances.VirtualCallSetBoolean">
            <summary>Sets the shim of MethodInvocationExpression.set_VirtualCall(Boolean value)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.ConstructorMethodInfo">
            <summary>Sets the shim of MethodTokenExpression.MethodTokenExpression(MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of MethodTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMethodTokenExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of MethodTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.MultiStatementExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.MultiStatementExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.AddExpressionExpression">
            <summary>Sets the shim of MultiStatementExpression.AddExpression(Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.AddStatementStatement">
            <summary>Sets the shim of MultiStatementExpression.AddStatement(Statement statement)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.Constructor">
            <summary>Sets the shim of MultiStatementExpression.MultiStatementExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of MultiStatementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.AllInstances.AddExpressionExpression">
            <summary>Sets the shim of MultiStatementExpression.AddExpression(Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.AllInstances.AddStatementStatement">
            <summary>Sets the shim of MultiStatementExpression.AddStatement(Statement statement)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimMultiStatementExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of MultiStatementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.ConstructorInt32Type">
            <summary>Sets the shim of NewArrayExpression.NewArrayExpression(Int32 size, Type arrayType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NewArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewArrayExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NewArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.ConstructorConstructorInfoExpressionArray">
            <summary>Sets the shim of NewInstanceExpression.NewInstanceExpression(ConstructorInfo constructor, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.ConstructorTypeTypeArrayExpressionArray">
            <summary>Sets the shim of NewInstanceExpression.NewInstanceExpression(Type target, Type[] constructor_args, Expression[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NewInstanceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNewInstanceExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NewInstanceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NopStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.NopStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.Constructor">
            <summary>Sets the shim of NopStatement.NopStatement()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NopStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNopStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NopStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.ConstructorExpressionExpression">
            <summary>Sets the shim of NullCoalescingOperatorExpression.NullCoalescingOperatorExpression(Expression expression, Expression default)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NullCoalescingOperatorExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullCoalescingOperatorExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NullCoalescingOperatorExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.Constructor">
            <summary>Sets the shim of NullExpression.NullExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.StaticConstructor">
            <summary>Sets the shim of NullExpression.NullExpression()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimNullExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of NullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.Constructor">
            <summary>Sets the shim of Reference.Reference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.ConstructorReference">
            <summary>Sets the shim of Reference.Reference(Reference owner)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.GenerateILGenerator">
            <summary>Sets the shim of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.OwnerReferenceGet">
            <summary>Sets the shim of Reference.get_OwnerReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.OwnerReferenceSetReference">
            <summary>Sets the shim of Reference.set_OwnerReference(Reference value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.ToAddressOfExpression">
            <summary>Sets the shim of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.ToExpression">
            <summary>Sets the shim of Reference.ToExpression()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.AllInstances.GenerateILGenerator">
            <summary>Sets the shim of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.AllInstances.OwnerReferenceGet">
            <summary>Sets the shim of Reference.get_OwnerReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.AllInstances.OwnerReferenceSetReference">
            <summary>Sets the shim of Reference.set_OwnerReference(Reference value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.AllInstances.ToAddressOfExpression">
            <summary>Sets the shim of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReference.AllInstances.ToExpression">
            <summary>Sets the shim of Reference.ToExpression()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.ConstructorReference">
            <summary>Sets the shim of ReferenceExpression.ReferenceExpression(Reference reference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferenceExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.ConstructorTypeReferenceArray">
            <summary>Sets the shim of ReferencesToObjectArrayExpression.ReferencesToObjectArrayExpression(TypeReference[] args)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ReferencesToObjectArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReferencesToObjectArrayExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ReferencesToObjectArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.Constructor">
            <summary>Sets the shim of ReturnStatement.ReturnStatement()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.ConstructorExpression">
            <summary>Sets the shim of ReturnStatement.ReturnStatement(Expression expression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.ConstructorReference">
            <summary>Sets the shim of ReturnStatement.ReturnStatement(Reference reference)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ReturnStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimReturnStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ReturnStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.Constructor">
            <summary>Sets the shim of SelfReference.SelfReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of SelfReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.LoadReferenceILGenerator">
            <summary>Sets the shim of SelfReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.StaticConstructor">
            <summary>Sets the shim of SelfReference.SelfReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.StoreReferenceILGenerator">
            <summary>Sets the shim of SelfReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.AllInstances.LoadAddressOfReferenceILGenerator">
            <summary>Sets the shim of SelfReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.AllInstances.LoadReferenceILGenerator">
            <summary>Sets the shim of SelfReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimSelfReference.AllInstances.StoreReferenceILGenerator">
            <summary>Sets the shim of SelfReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.Constructor">
            <summary>Sets the shim of Statement.Statement()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ThrowStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ThrowStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.ConstructorTypeString">
            <summary>Sets the shim of ThrowStatement.ThrowStatement(Type exceptionType, String errorMessage)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ThrowStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimThrowStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of ThrowStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.TryStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.TryStatement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.Constructor">
            <summary>Sets the shim of TryStatement.TryStatement()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of TryStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTryStatement.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of TryStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.ConstructorReferenceType">
            <summary>Sets the shim of TypeReference.TypeReference(Reference owner, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.ConstructorType">
            <summary>Sets the shim of TypeReference.TypeReference(Type argumentType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.TypeGet">
            <summary>Sets the shim of TypeReference.get_Type()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeReference.AllInstances.TypeGet">
            <summary>Sets the shim of TypeReference.get_Type()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression">
            <summary>Shim type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.Bind(Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.ConstructorType">
            <summary>Sets the shim of TypeTokenExpression.TypeTokenExpression(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of TypeTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.ShimTypeTokenExpression.AllInstances.EmitIMemberEmitterILGenerator">
            <summary>Sets the shim of TypeTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AddressOfReferenceExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AddressOfReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of AddressOfReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.InitializeStub">
            <summary>Initializes a new instance of type StubAddressOfReferenceExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAddressOfReferenceExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.#ctor(System.Type,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.InitializeStub">
            <summary>Initializes a new instance of type StubArgumentReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ArgumentReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of ArgumentReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ArgumentReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.LoadReferenceILGenerator">
            <summary>Sets the stub of ArgumentReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ArgumentReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.StoreReferenceILGenerator">
            <summary>Sets the stub of ArgumentReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubArgumentReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.InitializeStub">
            <summary>Initializes a new instance of type StubAsTypeReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AsTypeReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of AsTypeReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AsTypeReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.LoadReferenceILGenerator">
            <summary>Sets the stub of AsTypeReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AsTypeReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.StoreReferenceILGenerator">
            <summary>Sets the stub of AsTypeReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAsTypeReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AssignArgumentStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of AssignArgumentStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.InitializeStub">
            <summary>Initializes a new instance of type StubAssignArgumentStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArgumentStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Int32,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AssignArrayStatement.Emit(IMemberEmitter member, ILGenerator il)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of AssignArrayStatement.Emit(IMemberEmitter member, ILGenerator il)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.InitializeStub">
            <summary>Initializes a new instance of type StubAssignArrayStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignArrayStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of AssignStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of AssignStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.InitializeStub">
            <summary>Initializes a new instance of type StubAssignStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubAssignStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.BindDelegateExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.#ctor(System.Type,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression,System.Reflection.MethodInfo,System.Reflection.Emit.GenericTypeParameterBuilder[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of BindDelegateExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of BindDelegateExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.InitializeStub">
            <summary>Initializes a new instance of type StubBindDelegateExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubBindDelegateExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.InitializeStub">
            <summary>Initializes a new instance of type StubByRefReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ByRefReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of ByRefReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ByRefReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.LoadReferenceILGenerator">
            <summary>Sets the stub of ByRefReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ByRefReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.StoreReferenceILGenerator">
            <summary>Sets the stub of ByRefReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubByRefReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ConstReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.GenerateILGenerator">
            <summary>Sets the stub of ConstReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.InitializeStub">
            <summary>Initializes a new instance of type StubConstReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ConstReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of ConstReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ConstReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.LoadReferenceILGenerator">
            <summary>Sets the stub of ConstReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ConstReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.StoreReferenceILGenerator">
            <summary>Sets the stub of ConstReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.#ctor(System.Reflection.ConstructorInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ConstructorInvocationStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ConstructorInvocationStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.InitializeStub">
            <summary>Initializes a new instance of type StubConstructorInvocationStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConstructorInvocationStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.#ctor(System.Type,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.#ctor(System.Type,System.Type,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ConvertExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ConvertExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.InitializeStub">
            <summary>Initializes a new instance of type StubConvertExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubConvertExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of DefaultValueExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of DefaultValueExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultValueExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubDefaultValueExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.EndExceptionBlockStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of EndExceptionBlockStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of EndExceptionBlockStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.InitializeStub">
            <summary>Initializes a new instance of type StubEndExceptionBlockStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubEndExceptionBlockStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Expression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of Expression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.InitializeStub">
            <summary>Initializes a new instance of type StubExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ExpressionStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ExpressionStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.InitializeStub">
            <summary>Initializes a new instance of type StubExpressionStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubExpressionStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.#ctor(System.Reflection.FieldInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.#ctor(System.Reflection.Emit.FieldBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.InitializeStub">
            <summary>Initializes a new instance of type StubFieldReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of FieldReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of FieldReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of FieldReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.LoadReferenceILGenerator">
            <summary>Sets the stub of FieldReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of FieldReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.StoreReferenceILGenerator">
            <summary>Sets the stub of FieldReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFieldReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.FinallyStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of FinallyStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of FinallyStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.InitializeStub">
            <summary>Initializes a new instance of type StubFinallyStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubFinallyStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIILEmitter">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIILEmitter.#ctor">
            <summary>Initializes a new instance of type StubIILEmitter</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIILEmitter.cc::Castle#DynamicProxy#Generators#Emitters#SimpleAST#IILEmitter#Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of IILEmitter.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIILEmitter.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of IILEmitter.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.IfNullExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.IILEmitter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of IfNullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of IfNullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.InitializeStub">
            <summary>Initializes a new instance of type StubIfNullExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIfNullExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.InitializeStub">
            <summary>Initializes a new instance of type StubIndirectReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of IndirectReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of IndirectReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of IndirectReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.LoadReferenceILGenerator">
            <summary>Sets the stub of IndirectReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of IndirectReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.StoreReferenceILGenerator">
            <summary>Sets the stub of IndirectReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubIndirectReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LiteralIntExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of LiteralIntExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.InitializeStub">
            <summary>Initializes a new instance of type StubLiteralIntExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLiteralIntExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadArrayElementExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.#ctor(System.Int32,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LoadArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of LoadArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.InitializeStub">
            <summary>Initializes a new instance of type StubLoadArrayElementExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadArrayElementExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.#ctor(System.Int32,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LoadRefArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of LoadRefArrayElementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.InitializeStub">
            <summary>Initializes a new instance of type StubLoadRefArrayElementExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLoadRefArrayElementExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LocalReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.GenerateILGenerator">
            <summary>Sets the stub of LocalReference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.InitializeStub">
            <summary>Initializes a new instance of type StubLocalReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LocalReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of LocalReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LocalReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.LoadReferenceILGenerator">
            <summary>Sets the stub of LocalReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of LocalReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.StoreReferenceILGenerator">
            <summary>Sets the stub of LocalReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubLocalReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.#ctor(System.Reflection.MethodInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Reflection.MethodInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of MethodInvocationExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of MethodInvocationExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.InitializeStub">
            <summary>Initializes a new instance of type StubMethodInvocationExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodInvocationExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.#ctor(System.Reflection.MethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of MethodTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of MethodTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.InitializeStub">
            <summary>Initializes a new instance of type StubMethodTokenExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMethodTokenExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.MultiStatementExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of MultiStatementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of MultiStatementExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.InitializeStub">
            <summary>Initializes a new instance of type StubMultiStatementExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubMultiStatementExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.#ctor(System.Int32,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of NewArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of NewArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.InitializeStub">
            <summary>Initializes a new instance of type StubNewArrayExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewArrayExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.#ctor(System.Reflection.ConstructorInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.#ctor(System.Type,System.Type[],Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of NewInstanceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of NewInstanceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.InitializeStub">
            <summary>Initializes a new instance of type StubNewInstanceExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNewInstanceExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NopStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of NopStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of NopStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.InitializeStub">
            <summary>Initializes a new instance of type StubNopStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNopStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of NullCoalescingOperatorExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of NullCoalescingOperatorExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.InitializeStub">
            <summary>Initializes a new instance of type StubNullCoalescingOperatorExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullCoalescingOperatorExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of NullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of NullExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.InitializeStub">
            <summary>Initializes a new instance of type StubNullExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubNullExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.InitializeStub">
            <summary>Initializes a new instance of type StubReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of Reference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.LoadReferenceILGenerator">
            <summary>Sets the stub of Reference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.StoreReferenceILGenerator">
            <summary>Sets the stub of Reference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ReferenceExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.InitializeStub">
            <summary>Initializes a new instance of type StubReferenceExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferenceExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ReferencesToObjectArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ReferencesToObjectArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.InitializeStub">
            <summary>Initializes a new instance of type StubReferencesToObjectArrayExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReferencesToObjectArrayExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ReturnStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ReturnStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.InitializeStub">
            <summary>Initializes a new instance of type StubReturnStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubReturnStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.InitializeStub">
            <summary>Initializes a new instance of type StubSelfReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of SelfReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of SelfReference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of SelfReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.LoadReferenceILGenerator">
            <summary>Sets the stub of SelfReference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of SelfReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.StoreReferenceILGenerator">
            <summary>Sets the stub of SelfReference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubSelfReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Statement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of Statement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.InitializeStub">
            <summary>Initializes a new instance of type StubStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.ThrowStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of ThrowStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of ThrowStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.InitializeStub">
            <summary>Initializes a new instance of type StubThrowStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubThrowStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.TryStatement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of TryStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of TryStatement.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.InitializeStub">
            <summary>Initializes a new instance of type StubTryStatement</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTryStatement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.#ctor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.Generate(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.GenerateILGenerator">
            <summary>Sets the stub of Reference.Generate(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.InitializeStub">
            <summary>Initializes a new instance of type StubTypeReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.LoadAddressOfReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.LoadAddressOfReferenceILGenerator">
            <summary>Sets the stub of Reference.LoadAddressOfReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.LoadReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.LoadReferenceILGenerator">
            <summary>Sets the stub of Reference.LoadReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.StoreReference(System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of Reference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.StoreReferenceILGenerator">
            <summary>Sets the stub of Reference.StoreReference(ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.ToAddressOfExpression">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.ToAddressOfExpression01">
            <summary>Sets the stub of Reference.ToAddressOfExpression()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.ToExpression">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.ToExpression01">
            <summary>Sets the stub of Reference.ToExpression()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression">
            <summary>Stub type of Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.Emit(Castle.DynamicProxy.Generators.Emitters.IMemberEmitter,System.Reflection.Emit.ILGenerator)">
            <summary>Sets the stub of TypeTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.EmitIMemberEmitterILGenerator">
            <summary>Sets the stub of TypeTokenExpression.Emit(IMemberEmitter member, ILGenerator gen)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.InitializeStub">
            <summary>Initializes a new instance of type StubTypeTokenExpression</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Emitters.SimpleAST.Fakes.StubTypeTokenExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler">
            <summary>Shim type of Castle.DynamicProxy.Generators.AttributeDisassembler</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.#ctor(Castle.DynamicProxy.Generators.AttributeDisassembler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.Bind(Castle.DynamicProxy.IAttributeDisassembler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AreAttributeElementsEqualObjectObject">
            <summary>Sets the shim of AttributeDisassembler.AreAttributeElementsEqual(Object first, Object second)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AreStringsEqualStringString">
            <summary>Sets the shim of AttributeDisassembler.AreStringsEqual(String first, String second)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.Constructor">
            <summary>Sets the shim of AttributeDisassembler.AttributeDisassembler()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.ConvertValueObjectType">
            <summary>Sets the shim of AttributeDisassembler.ConvertValue(Object obj, Type paramType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.DisassembleAttribute">
            <summary>Sets the shim of AttributeDisassembler.Disassemble(Attribute attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.EqualsAttributeDisassembler">
            <summary>Sets the shim of AttributeDisassembler.Equals(AttributeDisassembler other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.EqualsObject">
            <summary>Sets the shim of AttributeDisassembler.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetArgumentValueTypeAttributeParameterInfo">
            <summary>Sets the shim of AttributeDisassembler.GetArgumentValue(Type attributeType, Attribute attribute, ParameterInfo parameter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetConstructorAndArgsTypeAttributeConstructorInfoOut">
            <summary>Sets the shim of AttributeDisassembler.GetConstructorAndArgs(Type attributeType, Attribute attribute, ConstructorInfo&amp; ctor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetDefaultValueForParameterInfo">
            <summary>Sets the shim of AttributeDisassembler.GetDefaultValueFor(ParameterInfo parameter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetFieldValuesTypeFieldInfoArrayOutAttributeAttribute">
            <summary>Sets the shim of AttributeDisassembler.GetFieldValues(Type attType, FieldInfo[]&amp; fields, Attribute original, Attribute replicated)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetHashCode">
            <summary>Sets the shim of AttributeDisassembler.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetPropertyCandidatesType">
            <summary>Sets the shim of AttributeDisassembler.GetPropertyCandidates(Type attributeType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.GetPropertyValuesTypePropertyInfoArrayOutAttributeAttribute">
            <summary>Sets the shim of AttributeDisassembler.GetPropertyValues(Type attType, PropertyInfo[]&amp; properties, Attribute original, Attribute replicated)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.HandleErrorTypeException">
            <summary>Sets the shim of AttributeDisassembler.HandleError(Type attributeType, Exception exception)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.InitializeConstructorArgsTypeAttributeParameterInfoArray">
            <summary>Sets the shim of AttributeDisassembler.InitializeConstructorArgs(Type attributeType, Attribute attribute, ParameterInfo[] parameters)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.ReplaceIfBetterMatchParameterInfoPropertyInfoPropertyInfo">
            <summary>Sets the shim of AttributeDisassembler.ReplaceIfBetterMatch(ParameterInfo parameterInfo, PropertyInfo propertyInfo, PropertyInfo bestMatch)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AllInstances.DisassembleAttribute">
            <summary>Sets the shim of AttributeDisassembler.Disassemble(Attribute attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AllInstances.EqualsAttributeDisassembler">
            <summary>Sets the shim of AttributeDisassembler.Equals(AttributeDisassembler other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AllInstances.EqualsObject">
            <summary>Sets the shim of AttributeDisassembler.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AllInstances.GetHashCode01">
            <summary>Sets the shim of AttributeDisassembler.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributeDisassembler.AllInstances.HandleErrorTypeException">
            <summary>Sets the shim of AttributeDisassembler.HandleError(Type attributeType, Exception exception)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating">
            <summary>Shim type of Castle.DynamicProxy.Generators.AttributesToAvoidReplicating</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.AddOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Sets the shim of AttributesToAvoidReplicating.Add()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.AddType">
            <summary>Sets the shim of AttributesToAvoidReplicating.Add(Type attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.ContainsType">
            <summary>Sets the shim of AttributesToAvoidReplicating.Contains(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimAttributesToAvoidReplicating.StaticConstructor">
            <summary>Sets the shim of AttributesToAvoidReplicating.AttributesToAvoidReplicating()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.BaseProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.#ctor(Castle.DynamicProxy.Generators.BaseProxyGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AddMappingForISerializableIDictionaryOfTypeITypeContributorITypeContributor">
            <summary>Sets the shim of BaseProxyGenerator.AddMappingForISerializable(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, ITypeContributor instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AddMappingNoCheckTypeITypeContributorIDictionaryOfTypeITypeContributor">
            <summary>Sets the shim of BaseProxyGenerator.AddMappingNoCheck(Type interface, ITypeContributor implementer, IDictionary`2&lt;Type,ITypeContributor&gt; mapping)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AddMappingTypeITypeContributorIDictionaryOfTypeITypeContributor">
            <summary>Sets the shim of BaseProxyGenerator.AddMapping(Type interface, ITypeContributor implementer, IDictionary`2&lt;Type,ITypeContributor&gt; mapping)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AddToCacheCacheKeyType">
            <summary>Sets the shim of BaseProxyGenerator.AddToCache(CacheKey key, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the shim of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CheckNotGenericTypeDefinitionTypeString">
            <summary>Sets the shim of BaseProxyGenerator.CheckNotGenericTypeDefinition(Type type, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CheckNotGenericTypeDefinitionsIEnumerableOfTypeString">
            <summary>Sets the shim of BaseProxyGenerator.CheckNotGenericTypeDefinitions(IEnumerable`1&lt;Type&gt; types, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CompleteInitCacheMethodConstructorCodeBuilder">
            <summary>Sets the shim of BaseProxyGenerator.CompleteInitCacheMethod(ConstructorCodeBuilder constCodeBuilder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.ConstructorModuleScopeType">
            <summary>Sets the shim of BaseProxyGenerator.BaseProxyGenerator(ModuleScope scope, Type targetType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CreateFieldsClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CreateInterceptorsFieldClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateInterceptorsField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CreateOptionsFieldClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateOptionsField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CreateSelectorFieldClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateSelectorField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.EnsureOptionsOverrideEqualsAndGetHashCodeProxyGenerationOptions">
            <summary>Sets the shim of BaseProxyGenerator.EnsureOptionsOverrideEqualsAndGetHashCode(ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.GenerateConstructorClassEmitterConstructorInfoFieldReferenceArray">
            <summary>Sets the shim of BaseProxyGenerator.GenerateConstructor(ClassEmitter emitter, ConstructorInfo baseConstructor, FieldReference[] fields)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.GenerateConstructorsClassEmitterTypeFieldReferenceArray">
            <summary>Sets the shim of BaseProxyGenerator.GenerateConstructors(ClassEmitter emitter, Type baseType, FieldReference[] fields)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.GenerateParameterlessConstructorClassEmitterTypeFieldReference">
            <summary>Sets the shim of BaseProxyGenerator.GenerateParameterlessConstructor(ClassEmitter emitter, Type baseClass, FieldReference interceptorField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.GenerateStaticConstructorClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.GenerateStaticConstructor(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.GetFromCacheCacheKey">
            <summary>Sets the shim of BaseProxyGenerator.GetFromCache(CacheKey key)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.HandleExplicitlyPassedProxyTargetAccessorICollectionOfTypeICollectionOfType">
            <summary>Sets the shim of BaseProxyGenerator.HandleExplicitlyPassedProxyTargetAccessor(ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.InitializeStaticFieldsType">
            <summary>Sets the shim of BaseProxyGenerator.InitializeStaticFields(Type builtType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.IsConstructorVisibleConstructorInfo">
            <summary>Sets the shim of BaseProxyGenerator.IsConstructorVisible(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.LoggerGet">
            <summary>Sets the shim of BaseProxyGenerator.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.LoggerSetILogger">
            <summary>Sets the shim of BaseProxyGenerator.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.ObtainProxyTypeCacheKeyFuncOfStringINamingScopeType">
            <summary>Sets the shim of BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3&lt;String,INamingScope,Type&gt; factory)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.OverridesEqualsAndGetHashCodeType">
            <summary>Sets the shim of BaseProxyGenerator.OverridesEqualsAndGetHashCode(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.ProxyGenerationOptionsGet">
            <summary>Sets the shim of BaseProxyGenerator.get_ProxyGenerationOptions()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.ProxyGenerationOptionsSetProxyGenerationOptions">
            <summary>Sets the shim of BaseProxyGenerator.set_ProxyGenerationOptions(ProxyGenerationOptions value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.ScopeGet">
            <summary>Sets the shim of BaseProxyGenerator.get_Scope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.AddMappingForISerializableIDictionaryOfTypeITypeContributorITypeContributor">
            <summary>Sets the shim of BaseProxyGenerator.AddMappingForISerializable(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, ITypeContributor instance)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.AddMappingNoCheckTypeITypeContributorIDictionaryOfTypeITypeContributor">
            <summary>Sets the shim of BaseProxyGenerator.AddMappingNoCheck(Type interface, ITypeContributor implementer, IDictionary`2&lt;Type,ITypeContributor&gt; mapping)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.AddMappingTypeITypeContributorIDictionaryOfTypeITypeContributor">
            <summary>Sets the shim of BaseProxyGenerator.AddMapping(Type interface, ITypeContributor implementer, IDictionary`2&lt;Type,ITypeContributor&gt; mapping)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.AddToCacheCacheKeyType">
            <summary>Sets the shim of BaseProxyGenerator.AddToCache(CacheKey key, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the shim of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CheckNotGenericTypeDefinitionTypeString">
            <summary>Sets the shim of BaseProxyGenerator.CheckNotGenericTypeDefinition(Type type, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CheckNotGenericTypeDefinitionsIEnumerableOfTypeString">
            <summary>Sets the shim of BaseProxyGenerator.CheckNotGenericTypeDefinitions(IEnumerable`1&lt;Type&gt; types, String argumentName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CompleteInitCacheMethodConstructorCodeBuilder">
            <summary>Sets the shim of BaseProxyGenerator.CompleteInitCacheMethod(ConstructorCodeBuilder constCodeBuilder)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CreateFieldsClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CreateInterceptorsFieldClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateInterceptorsField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CreateOptionsFieldClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateOptionsField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CreateSelectorFieldClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateSelectorField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.CreateTypeAttributesClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.EnsureOptionsOverrideEqualsAndGetHashCodeProxyGenerationOptions">
            <summary>Sets the shim of BaseProxyGenerator.EnsureOptionsOverrideEqualsAndGetHashCode(ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.GenerateConstructorClassEmitterConstructorInfoFieldReferenceArray">
            <summary>Sets the shim of BaseProxyGenerator.GenerateConstructor(ClassEmitter emitter, ConstructorInfo baseConstructor, FieldReference[] fields)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.GenerateConstructorsClassEmitterTypeFieldReferenceArray">
            <summary>Sets the shim of BaseProxyGenerator.GenerateConstructors(ClassEmitter emitter, Type baseType, FieldReference[] fields)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.GenerateParameterlessConstructorClassEmitterTypeFieldReference">
            <summary>Sets the shim of BaseProxyGenerator.GenerateParameterlessConstructor(ClassEmitter emitter, Type baseClass, FieldReference interceptorField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.GenerateStaticConstructorClassEmitter">
            <summary>Sets the shim of BaseProxyGenerator.GenerateStaticConstructor(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.GetFromCacheCacheKey">
            <summary>Sets the shim of BaseProxyGenerator.GetFromCache(CacheKey key)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.HandleExplicitlyPassedProxyTargetAccessorICollectionOfTypeICollectionOfType">
            <summary>Sets the shim of BaseProxyGenerator.HandleExplicitlyPassedProxyTargetAccessor(ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.InitializeStaticFieldsType">
            <summary>Sets the shim of BaseProxyGenerator.InitializeStaticFields(Type builtType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.IsConstructorVisibleConstructorInfo">
            <summary>Sets the shim of BaseProxyGenerator.IsConstructorVisible(ConstructorInfo constructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.LoggerGet">
            <summary>Sets the shim of BaseProxyGenerator.get_Logger()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.LoggerSetILogger">
            <summary>Sets the shim of BaseProxyGenerator.set_Logger(ILogger value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.ObtainProxyTypeCacheKeyFuncOfStringINamingScopeType">
            <summary>Sets the shim of BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3&lt;String,INamingScope,Type&gt; factory)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.OverridesEqualsAndGetHashCodeType">
            <summary>Sets the shim of BaseProxyGenerator.OverridesEqualsAndGetHashCode(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.ProxyGenerationOptionsGet">
            <summary>Sets the shim of BaseProxyGenerator.get_ProxyGenerationOptions()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.ProxyGenerationOptionsSetProxyGenerationOptions">
            <summary>Sets the shim of BaseProxyGenerator.set_ProxyGenerationOptions(ProxyGenerationOptions value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimBaseProxyGenerator.AllInstances.ScopeGet">
            <summary>Sets the shim of BaseProxyGenerator.get_Scope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey">
            <summary>Shim type of Castle.DynamicProxy.Generators.CacheKey</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.#ctor(Castle.DynamicProxy.Generators.CacheKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.ConstructorMemberInfoTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of CacheKey.CacheKey(MemberInfo target, Type type, Type[] interfaces, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.ConstructorTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of CacheKey.CacheKey(Type target, Type[] interfaces, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.EqualsObject">
            <summary>Sets the shim of CacheKey.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.GetHashCode">
            <summary>Sets the shim of CacheKey.GetHashCode()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.AllInstances.EqualsObject">
            <summary>Sets the shim of CacheKey.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCacheKey.AllInstances.GetHashCode01">
            <summary>Sets the shim of CacheKey.GetHashCode()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.ClassProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.#ctor(Castle.DynamicProxy.Generators.ClassProxyGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.ConstructorModuleScopeType">
            <summary>Sets the shim of ClassProxyGenerator.ClassProxyGenerator(ModuleScope scope, Type targetType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.EnsureDoesNotImplementIProxyTargetAccessorTypeString">
            <summary>Sets the shim of ClassProxyGenerator.EnsureDoesNotImplementIProxyTargetAccessor(Type type, String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.GenerateCodeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyGenerator.GenerateCode(Type[] interfaces, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.GenerateTypeStringTypeArrayINamingScope">
            <summary>Sets the shim of ClassProxyGenerator.GenerateType(String name, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator._GetTypeImplementerMappingb__7ClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyGenerator.&lt;GetTypeImplementerMapping&gt;b__7(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.AllInstances.EnsureDoesNotImplementIProxyTargetAccessorTypeString">
            <summary>Sets the shim of ClassProxyGenerator.EnsureDoesNotImplementIProxyTargetAccessor(Type type, String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.AllInstances.GenerateCodeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyGenerator.GenerateCode(Type[] interfaces, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyGenerator.AllInstances.GenerateTypeStringTypeArrayINamingScope">
            <summary>Sets the shim of ClassProxyGenerator.GenerateType(String name, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.#ctor(Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.ConstructorModuleScopeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.ClassProxyWithTargetGenerator(ModuleScope scope, Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.CreateTargetFieldClassEmitter">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.CreateTargetField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.EnsureDoesNotImplementIProxyTargetAccessorTypeString">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.EnsureDoesNotImplementIProxyTargetAccessor(Type type, String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.GenerateTypeStringINamingScope">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.GenerateType(String name, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.GetGeneratedType">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.GetGeneratedType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator._GetTypeImplementerMappingb__4ClassEmitterMethodInfo">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.&lt;GetTypeImplementerMapping&gt;b__4(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.AllInstances.CreateTargetFieldClassEmitter">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.CreateTargetField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.AllInstances.EnsureDoesNotImplementIProxyTargetAccessorTypeString">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.EnsureDoesNotImplementIProxyTargetAccessor(Type type, String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.AllInstances.GenerateTypeStringINamingScope">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.GenerateType(String name, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimClassProxyWithTargetGenerator.AllInstances.GetGeneratedType">
            <summary>Sets the shim of ClassProxyWithTargetGenerator.GetGeneratedType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.#ctor(Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.ConstructorTypeMetaMethodMethodInfoBooleanIInvocationCreationContributor">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.CompositionInvocationTypeGenerator(Type target, MetaMethod method, MethodInfo callback, Boolean canChangeTarget, IInvocationCreationContributor contributor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.GetBaseType">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.GetTargetReference">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.StaticConstructor">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.CompositionInvocationTypeGenerator()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.AllInstances.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.AllInstances.GetBaseType">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.AllInstances.GetTargetReference">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimCompositionInvocationTypeGenerator.AllInstances.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the shim of CompositionInvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector">
            <summary>Shim type of Castle.DynamicProxy.Generators.DelegateMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.#ctor(Castle.DynamicProxy.Generators.DelegateMembersCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.ConstructorType">
            <summary>Sets the shim of DelegateMembersCollector.DelegateMembersCollector(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of DelegateMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateMembersCollector.AllInstances.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the shim of DelegateMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook">
            <summary>Shim type of Castle.DynamicProxy.Generators.DelegateProxyGenerationHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.#ctor(Castle.DynamicProxy.Generators.DelegateProxyGenerationHook)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.Bind(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.Constructor">
            <summary>Sets the shim of DelegateProxyGenerationHook.DelegateProxyGenerationHook()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.EqualsObject">
            <summary>Sets the shim of DelegateProxyGenerationHook.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.GetHashCode">
            <summary>Sets the shim of DelegateProxyGenerationHook.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.MethodsInspected">
            <summary>Sets the shim of DelegateProxyGenerationHook.MethodsInspected()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.NonProxyableMemberNotificationTypeMemberInfo">
            <summary>Sets the shim of DelegateProxyGenerationHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.ShouldInterceptMethodTypeMethodInfo">
            <summary>Sets the shim of DelegateProxyGenerationHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.AllInstances.EqualsObject">
            <summary>Sets the shim of DelegateProxyGenerationHook.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.AllInstances.GetHashCode01">
            <summary>Sets the shim of DelegateProxyGenerationHook.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.AllInstances.MethodsInspected">
            <summary>Sets the shim of DelegateProxyGenerationHook.MethodsInspected()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.AllInstances.NonProxyableMemberNotificationTypeMemberInfo">
            <summary>Sets the shim of DelegateProxyGenerationHook.NonProxyableMemberNotification(Type type, MemberInfo memberInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerationHook.AllInstances.ShouldInterceptMethodTypeMethodInfo">
            <summary>Sets the shim of DelegateProxyGenerationHook.ShouldInterceptMethod(Type type, MethodInfo methodInfo)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.DelegateProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.#ctor(Castle.DynamicProxy.Generators.DelegateProxyGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.ConstructorModuleScopeType">
            <summary>Sets the shim of DelegateProxyGenerator.DelegateProxyGenerator(ModuleScope scope, Type delegateType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.CreateTargetFieldClassEmitter">
            <summary>Sets the shim of DelegateProxyGenerator.CreateTargetField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.GenerateTypeStringINamingScope">
            <summary>Sets the shim of DelegateProxyGenerator.GenerateType(String name, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.GetProxyType">
            <summary>Sets the shim of DelegateProxyGenerator.GetProxyType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.AllInstances.CreateTargetFieldClassEmitter">
            <summary>Sets the shim of DelegateProxyGenerator.CreateTargetField(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.AllInstances.GenerateTypeStringINamingScope">
            <summary>Sets the shim of DelegateProxyGenerator.GenerateType(String name, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimDelegateProxyGenerator.AllInstances.GetProxyType">
            <summary>Sets the shim of DelegateProxyGenerator.GetProxyType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException">
            <summary>Shim type of Castle.DynamicProxy.Generators.GeneratorException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.#ctor(Castle.DynamicProxy.Generators.GeneratorException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of GeneratorException.GeneratorException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.ConstructorString">
            <summary>Sets the shim of GeneratorException.GeneratorException(String message)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.ConstructorStringException">
            <summary>Sets the shim of GeneratorException.GeneratorException(String message, Exception innerException)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil">
            <summary>Shim type of Castle.DynamicProxy.Generators.GeneratorUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.ArgumentInt32LocalReferenceTypeReferenceArray">
            <summary>Sets the shim of GeneratorUtil.Argument(Int32 i, LocalReference invocationArgs, TypeReference[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.AssignArgumentTypeReferenceArrayInt32LocalReference">
            <summary>Sets the shim of GeneratorUtil.AssignArgument(TypeReference[] dereferencedArguments, Int32 i, LocalReference invocationArgs)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.CopyOutAndRefParametersTypeReferenceArrayLocalReferenceMethodInfoMethodEmitter">
            <summary>Sets the shim of GeneratorUtil.CopyOutAndRefParameters(TypeReference[] dereferencedArguments, LocalReference invocation, MethodInfo method, MethodEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.GetArgumentsLocalReferenceLocalReference">
            <summary>Sets the shim of GeneratorUtil.GetArguments(LocalReference invocationArgs, LocalReference invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimGeneratorUtil.StoreInvocationArgumentsInLocalMethodEmitterLocalReference">
            <summary>Sets the shim of GeneratorUtil.StoreInvocationArgumentsInLocal(MethodEmitter emitter, LocalReference invocation)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.#ctor(Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.ConstructorTypeMetaMethodMethodInfoIInvocationCreationContributor">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.InheritanceInvocationTypeGenerator(Type targetType, MetaMethod method, MethodInfo callback, IInvocationCreationContributor contributor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.GetBaseType">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.GetTargetReference">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.StaticConstructor">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.InheritanceInvocationTypeGenerator()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.AllInstances.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.AllInstances.GetBaseType">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInheritanceInvocationTypeGenerator.AllInstances.GetTargetReference">
            <summary>Sets the shim of InheritanceInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.#ctor(Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllowChangeTargetGet">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.ConstructorModuleScopeType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.InterfaceProxyWithTargetGenerator(ModuleScope scope, Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.CreateFieldsClassEmitterType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.CreateFields(ClassEmitter emitter, Type proxyTargetType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.EnsureValidBaseTypeType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.EnsureValidBaseType(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.GenerateCodeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.GenerateCode(Type proxyTargetType, Type[] interfaces, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.GeneratorTypeGet">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.ImplementedByTargetICollectionOfTypeType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.ImplementedByTarget(ICollection`1&lt;Type&gt; targetInterfaces, Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.ThrowInvalidBaseTypeTypeString">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.ThrowInvalidBaseType(Type type, String doesNotHaveAccessibleParameterlessConstructor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator._GetContributorForAdditionalInterfacesb__5ClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.&lt;GetContributorForAdditionalInterfaces&gt;b__5(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.AllowChangeTargetGet">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.CreateFieldsClassEmitterType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.CreateFields(ClassEmitter emitter, Type proxyTargetType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.CreateTypeAttributesClassEmitter">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.EnsureValidBaseTypeType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.EnsureValidBaseType(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.GenerateCodeTypeTypeArrayProxyGenerationOptions">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.GenerateCode(Type proxyTargetType, Type[] interfaces, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.GeneratorTypeGet">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.ImplementedByTargetICollectionOfTypeType">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.ImplementedByTarget(ICollection`1&lt;Type&gt; targetInterfaces, Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetGenerator.AllInstances.ThrowInvalidBaseTypeTypeString">
            <summary>Sets the shim of InterfaceProxyWithTargetGenerator.ThrowInvalidBaseType(Type type, String doesNotHaveAccessibleParameterlessConstructor)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.#ctor(Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllowChangeTargetGet">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.ConstructorModuleScopeType">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.InterfaceProxyWithTargetInterfaceGenerator(ModuleScope scope, Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.GeneratorTypeGet">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.GetTargetClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.GetTarget(ClassEmitter class, MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.GetTargetExpressionClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.GetTargetExpression(ClassEmitter class, MethodInfo method)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances.AllowChangeTargetGet">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances.GeneratorTypeGet">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances.GetTargetClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.GetTarget(ClassEmitter class, MethodInfo method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithTargetInterfaceGenerator.AllInstances.GetTargetExpressionClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyWithTargetInterfaceGenerator.GetTargetExpression(ClassEmitter class, MethodInfo method)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.#ctor(Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; interfaceTypeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.ConstructorModuleScopeType">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.InterfaceProxyWithoutTargetGenerator(ModuleScope scope, Type interface)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.GeneratorTypeGet">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator._AddMappingForTargetTypeb__aClassEmitterMethodInfo">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.&lt;AddMappingForTargetType&gt;b__a(ClassEmitter c, MethodInfo m)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.AllInstances.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; interfaceTypeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.AllInstances.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInterfaceProxyWithoutTargetGenerator.AllInstances.GeneratorTypeGet">
            <summary>Sets the shim of InterfaceProxyWithoutTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.InvocationTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.#ctor(Castle.DynamicProxy.Generators.InvocationTypeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AssignBackByRefArgumentsMethodEmitterDictionaryOfInt32LocalReference">
            <summary>Sets the shim of InvocationTypeGenerator.AssignBackByRefArguments(MethodEmitter invokeMethodOnTarget, Dictionary`2&lt;Int32,LocalReference&gt; byRefArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.ConstructorTypeMetaMethodMethodInfoBooleanIInvocationCreationContributor">
            <summary>Sets the shim of InvocationTypeGenerator.InvocationTypeGenerator(Type targetType, MetaMethod method, MethodInfo callback, Boolean canChangeTarget, IInvocationCreationContributor contributor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.CreateConstructorAbstractTypeEmitterArgumentReferenceArray">
            <summary>Sets the shim of InvocationTypeGenerator.CreateConstructor(AbstractTypeEmitter invocation, ArgumentReference[] baseCtorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.CreateConstructorAbstractTypeEmitterProxyGenerationOptions">
            <summary>Sets the shim of InvocationTypeGenerator.CreateConstructor(AbstractTypeEmitter invocation, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.EmitCallEnsureValidTargetMethodEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.EmitCallEnsureValidTarget(MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.EmitCallThrowOnNoTargetMethodEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.EmitCallThrowOnNoTarget(MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of InvocationTypeGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.GetCallbackMethodAbstractTypeEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.GetCallbackMethod(AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayMethodInfoReferenceMethodEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.GetEmitterClassEmitterTypeArrayINamingScopeMethodInfo">
            <summary>Sets the shim of InvocationTypeGenerator.GetEmitter(ClassEmitter class, Type[] interfaces, INamingScope namingScope, MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.ImplemementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayFieldReferenceMethodInfo">
            <summary>Sets the shim of InvocationTypeGenerator.ImplemementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, FieldReference targetField, MethodInfo callbackMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.ImplementChangeInvocationTargetAbstractTypeEmitterFieldReference">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementChangeInvocationTarget(AbstractTypeEmitter invocation, FieldReference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.ImplementChangeProxyTargetAbstractTypeEmitterClassEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementChangeProxyTarget(AbstractTypeEmitter invocation, ClassEmitter class)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.ImplementChangeProxyTargetInterfaceClassEmitterAbstractTypeEmitterFieldReference">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementChangeProxyTargetInterface(ClassEmitter class, AbstractTypeEmitter invocation, FieldReference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.AssignBackByRefArgumentsMethodEmitterDictionaryOfInt32LocalReference">
            <summary>Sets the shim of InvocationTypeGenerator.AssignBackByRefArguments(MethodEmitter invokeMethodOnTarget, Dictionary`2&lt;Int32,LocalReference&gt; byRefArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.CreateConstructorAbstractTypeEmitterArgumentReferenceArray">
            <summary>Sets the shim of InvocationTypeGenerator.CreateConstructor(AbstractTypeEmitter invocation, ArgumentReference[] baseCtorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.CreateConstructorAbstractTypeEmitterProxyGenerationOptions">
            <summary>Sets the shim of InvocationTypeGenerator.CreateConstructor(AbstractTypeEmitter invocation, ProxyGenerationOptions options)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.EmitCallEnsureValidTargetMethodEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.EmitCallEnsureValidTarget(MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.EmitCallThrowOnNoTargetMethodEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.EmitCallThrowOnNoTarget(MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of InvocationTypeGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.GetCallbackMethodAbstractTypeEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.GetCallbackMethod(AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayMethodInfoReferenceMethodEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.GetEmitterClassEmitterTypeArrayINamingScopeMethodInfo">
            <summary>Sets the shim of InvocationTypeGenerator.GetEmitter(ClassEmitter class, Type[] interfaces, INamingScope namingScope, MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.ImplemementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayFieldReferenceMethodInfo">
            <summary>Sets the shim of InvocationTypeGenerator.ImplemementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, FieldReference targetField, MethodInfo callbackMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.ImplementChangeInvocationTargetAbstractTypeEmitterFieldReference">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementChangeInvocationTarget(AbstractTypeEmitter invocation, FieldReference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.ImplementChangeProxyTargetAbstractTypeEmitterClassEmitter">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementChangeProxyTarget(AbstractTypeEmitter invocation, ClassEmitter class)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.ImplementChangeProxyTargetInterfaceClassEmitterAbstractTypeEmitterFieldReference">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementChangeProxyTargetInterface(ClassEmitter class, AbstractTypeEmitter invocation, FieldReference targetField)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimInvocationTypeGenerator.AllInstances.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the shim of InvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent">
            <summary>Shim type of Castle.DynamicProxy.Generators.MetaEvent</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.#ctor(Castle.DynamicProxy.Generators.MetaEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.Bind(System.IEquatable{Castle.DynamicProxy.Generators.MetaEvent})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AdderGet">
            <summary>Sets the shim of MetaEvent.get_Adder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AttributesGet">
            <summary>Sets the shim of MetaEvent.get_Attributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AttributesSetEventAttributes">
            <summary>Sets the shim of MetaEvent.set_Attributes(EventAttributes value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.BuildEventEmitterClassEmitter">
            <summary>Sets the shim of MetaEvent.BuildEventEmitter(ClassEmitter classEmitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.ConstructorStringTypeTypeMetaMethodMetaMethodEventAttributes">
            <summary>Sets the shim of MetaEvent.MetaEvent(String name, Type declaringType, Type eventDelegateType, MetaMethod adder, MetaMethod remover, EventAttributes attributes)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.EmitterGet">
            <summary>Sets the shim of MetaEvent.get_Emitter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.EqualsMetaEvent">
            <summary>Sets the shim of MetaEvent.Equals(MetaEvent other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.EqualsObject">
            <summary>Sets the shim of MetaEvent.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.GetHashCode">
            <summary>Sets the shim of MetaEvent.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.RemoverGet">
            <summary>Sets the shim of MetaEvent.get_Remover()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.SwitchToExplicitImplementation">
            <summary>Sets the shim of MetaEvent.SwitchToExplicitImplementation()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.AdderGet">
            <summary>Sets the shim of MetaEvent.get_Adder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.AttributesGet">
            <summary>Sets the shim of MetaEvent.get_Attributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.AttributesSetEventAttributes">
            <summary>Sets the shim of MetaEvent.set_Attributes(EventAttributes value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.BuildEventEmitterClassEmitter">
            <summary>Sets the shim of MetaEvent.BuildEventEmitter(ClassEmitter classEmitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.EmitterGet">
            <summary>Sets the shim of MetaEvent.get_Emitter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.EqualsMetaEvent">
            <summary>Sets the shim of MetaEvent.Equals(MetaEvent other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.EqualsObject">
            <summary>Sets the shim of MetaEvent.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.GetHashCode01">
            <summary>Sets the shim of MetaEvent.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.RemoverGet">
            <summary>Sets the shim of MetaEvent.get_Remover()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaEvent.AllInstances.SwitchToExplicitImplementation">
            <summary>Sets the shim of MetaEvent.SwitchToExplicitImplementation()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod">
            <summary>Shim type of Castle.DynamicProxy.Generators.MetaMethod</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.#ctor(Castle.DynamicProxy.Generators.MetaMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.Bind(System.IEquatable{Castle.DynamicProxy.Generators.MetaMethod})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AttributesGet">
            <summary>Sets the shim of MetaMethod.get_Attributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AttributesSetMethodAttributes">
            <summary>Sets the shim of MetaMethod.set_Attributes(MethodAttributes value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.ConstructorMethodInfoMethodInfoBooleanBooleanBoolean">
            <summary>Sets the shim of MetaMethod.MetaMethod(MethodInfo method, MethodInfo methodOnTarget, Boolean standalone, Boolean proxyable, Boolean hasTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.EqualsMetaMethod">
            <summary>Sets the shim of MetaMethod.Equals(MetaMethod other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.HasTargetGet">
            <summary>Sets the shim of MetaMethod.get_HasTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.HasTargetSetBoolean">
            <summary>Sets the shim of MetaMethod.set_HasTarget(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.MethodGet">
            <summary>Sets the shim of MetaMethod.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.MethodOnTargetGet">
            <summary>Sets the shim of MetaMethod.get_MethodOnTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.MethodOnTargetSetMethodInfo">
            <summary>Sets the shim of MetaMethod.set_MethodOnTarget(MethodInfo value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.MethodSetMethodInfo">
            <summary>Sets the shim of MetaMethod.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.NameGet">
            <summary>Sets the shim of MetaMethod.get_Name()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.ObtainAttributes">
            <summary>Sets the shim of MetaMethod.ObtainAttributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.ProxyableGet">
            <summary>Sets the shim of MetaMethod.get_Proxyable()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.ProxyableSetBoolean">
            <summary>Sets the shim of MetaMethod.set_Proxyable(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.StandaloneGet">
            <summary>Sets the shim of MetaMethod.get_Standalone()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.StandaloneSetBoolean">
            <summary>Sets the shim of MetaMethod.set_Standalone(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.SwitchToExplicitImplementation">
            <summary>Sets the shim of MetaMethod.SwitchToExplicitImplementation()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.AttributesGet">
            <summary>Sets the shim of MetaMethod.get_Attributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.AttributesSetMethodAttributes">
            <summary>Sets the shim of MetaMethod.set_Attributes(MethodAttributes value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.EqualsMetaMethod">
            <summary>Sets the shim of MetaMethod.Equals(MetaMethod other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.HasTargetGet">
            <summary>Sets the shim of MetaMethod.get_HasTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.HasTargetSetBoolean">
            <summary>Sets the shim of MetaMethod.set_HasTarget(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.MethodGet">
            <summary>Sets the shim of MetaMethod.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.MethodOnTargetGet">
            <summary>Sets the shim of MetaMethod.get_MethodOnTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.MethodOnTargetSetMethodInfo">
            <summary>Sets the shim of MetaMethod.set_MethodOnTarget(MethodInfo value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.MethodSetMethodInfo">
            <summary>Sets the shim of MetaMethod.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.NameGet">
            <summary>Sets the shim of MetaMethod.get_Name()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.ObtainAttributes">
            <summary>Sets the shim of MetaMethod.ObtainAttributes()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.ProxyableGet">
            <summary>Sets the shim of MetaMethod.get_Proxyable()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.ProxyableSetBoolean">
            <summary>Sets the shim of MetaMethod.set_Proxyable(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.StandaloneGet">
            <summary>Sets the shim of MetaMethod.get_Standalone()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.StandaloneSetBoolean">
            <summary>Sets the shim of MetaMethod.set_Standalone(Boolean value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaMethod.AllInstances.SwitchToExplicitImplementation">
            <summary>Sets the shim of MetaMethod.SwitchToExplicitImplementation()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty">
            <summary>Shim type of Castle.DynamicProxy.Generators.MetaProperty</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.#ctor(Castle.DynamicProxy.Generators.MetaProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.Bind(System.IEquatable{Castle.DynamicProxy.Generators.MetaProperty})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.ArgumentsGet">
            <summary>Sets the shim of MetaProperty.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.BuildPropertyEmitterClassEmitter">
            <summary>Sets the shim of MetaProperty.BuildPropertyEmitter(ClassEmitter classEmitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.CanReadGet">
            <summary>Sets the shim of MetaProperty.get_CanRead()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.CanWriteGet">
            <summary>Sets the shim of MetaProperty.get_CanWrite()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.ConstructorStringTypeTypeMetaMethodMetaMethodIEnumerableOfCustomAttributeBuilderTypeArray">
            <summary>Sets the shim of MetaProperty.MetaProperty(String name, Type propertyType, Type declaringType, MetaMethod getter, MetaMethod setter, IEnumerable`1&lt;CustomAttributeBuilder&gt; customAttributes, Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.EmitterGet">
            <summary>Sets the shim of MetaProperty.get_Emitter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.EqualsMetaProperty">
            <summary>Sets the shim of MetaProperty.Equals(MetaProperty other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.EqualsObject">
            <summary>Sets the shim of MetaProperty.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.GetHashCode">
            <summary>Sets the shim of MetaProperty.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.GetMethodGet">
            <summary>Sets the shim of MetaProperty.get_GetMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.GetterGet">
            <summary>Sets the shim of MetaProperty.get_Getter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.SetMethodGet">
            <summary>Sets the shim of MetaProperty.get_SetMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.SetterGet">
            <summary>Sets the shim of MetaProperty.get_Setter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.SwitchToExplicitImplementation">
            <summary>Sets the shim of MetaProperty.SwitchToExplicitImplementation()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.ArgumentsGet">
            <summary>Sets the shim of MetaProperty.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.BuildPropertyEmitterClassEmitter">
            <summary>Sets the shim of MetaProperty.BuildPropertyEmitter(ClassEmitter classEmitter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.CanReadGet">
            <summary>Sets the shim of MetaProperty.get_CanRead()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.CanWriteGet">
            <summary>Sets the shim of MetaProperty.get_CanWrite()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.EmitterGet">
            <summary>Sets the shim of MetaProperty.get_Emitter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.EqualsMetaProperty">
            <summary>Sets the shim of MetaProperty.Equals(MetaProperty other)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.EqualsObject">
            <summary>Sets the shim of MetaProperty.Equals(Object obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.GetHashCode01">
            <summary>Sets the shim of MetaProperty.GetHashCode()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.GetMethodGet">
            <summary>Sets the shim of MetaProperty.get_GetMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.GetterGet">
            <summary>Sets the shim of MetaProperty.get_Getter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.SetMethodGet">
            <summary>Sets the shim of MetaProperty.get_SetMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.SetterGet">
            <summary>Sets the shim of MetaProperty.get_Setter()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaProperty.AllInstances.SwitchToExplicitImplementation">
            <summary>Sets the shim of MetaProperty.SwitchToExplicitImplementation()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaType">
            <summary>Shim type of Castle.DynamicProxy.Generators.MetaType</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.#ctor(Castle.DynamicProxy.Generators.MetaType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AddEventMetaEvent">
            <summary>Sets the shim of MetaType.AddEvent(MetaEvent event)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AddMethodMetaMethod">
            <summary>Sets the shim of MetaType.AddMethod(MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AddPropertyMetaProperty">
            <summary>Sets the shim of MetaType.AddProperty(MetaProperty property)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.Constructor">
            <summary>Sets the shim of MetaType.MetaType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.EventsGet">
            <summary>Sets the shim of MetaType.get_Events()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.MethodsGet">
            <summary>Sets the shim of MetaType.get_Methods()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.PropertiesGet">
            <summary>Sets the shim of MetaType.get_Properties()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances.AddEventMetaEvent">
            <summary>Sets the shim of MetaType.AddEvent(MetaEvent event)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances.AddMethodMetaMethod">
            <summary>Sets the shim of MetaType.AddMethod(MetaMethod method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances.AddPropertyMetaProperty">
            <summary>Sets the shim of MetaType.AddProperty(MetaProperty property)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances.EventsGet">
            <summary>Sets the shim of MetaType.get_Events()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances.MethodsGet">
            <summary>Sets the shim of MetaType.get_Methods()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaType.AllInstances.PropertiesGet">
            <summary>Sets the shim of MetaType.get_Properties()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement">
            <summary>Shim type of Castle.DynamicProxy.Generators.MetaTypeElement</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.#ctor(Castle.DynamicProxy.Generators.MetaTypeElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.CanBeImplementedExplicitlyGet">
            <summary>Sets the shim of MetaTypeElement.get_CanBeImplementedExplicitly()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.ConstructorType">
            <summary>Sets the shim of MetaTypeElement.MetaTypeElement(Type sourceType)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMetaTypeElement.AllInstances.CanBeImplementedExplicitlyGet">
            <summary>Sets the shim of MetaTypeElement.get_CanBeImplementedExplicitly()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder">
            <summary>Shim type of Castle.DynamicProxy.Generators.MethodFinder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.#ctor(Castle.DynamicProxy.Generators.MethodFinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.Constructor">
            <summary>Sets the shim of MethodFinder.MethodFinder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.GetAllInstanceMethodsTypeBindingFlags">
            <summary>Sets the shim of MethodFinder.GetAllInstanceMethods(Type type, BindingFlags flags)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.MakeFilteredCopyMethodInfoArrayBindingFlags">
            <summary>Sets the shim of MethodFinder.MakeFilteredCopy(MethodInfo[] methodsInCache, BindingFlags visibilityFlags)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.RemoveDuplicatesMethodInfoArray">
            <summary>Sets the shim of MethodFinder.RemoveDuplicates(MethodInfo[] infos)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.StaticConstructor">
            <summary>Sets the shim of MethodFinder.MethodFinder()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodFinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.MethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.#ctor(Castle.DynamicProxy.Generators.MethodGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.ConstructorMetaMethodOverrideMethodDelegate">
            <summary>Sets the shim of MethodGenerator.MethodGenerator(MetaMethod method, OverrideMethodDelegate overrideMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of MethodGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.MethodOnTargetGet">
            <summary>Sets the shim of MethodGenerator.get_MethodOnTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.MethodToOverrideGet">
            <summary>Sets the shim of MethodGenerator.get_MethodToOverride()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.AllInstances.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of MethodGenerator.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.AllInstances.MethodOnTargetGet">
            <summary>Sets the shim of MethodGenerator.get_MethodOnTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodGenerator.AllInstances.MethodToOverrideGet">
            <summary>Sets the shim of MethodGenerator.get_MethodToOverride()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer">
            <summary>Shim type of Castle.DynamicProxy.Generators.MethodSignatureComparer</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.#ctor(Castle.DynamicProxy.Generators.MethodSignatureComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.Bind(System.Collections.Generic.IEqualityComparer{System.Reflection.MethodInfo})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.Constructor">
            <summary>Sets the shim of MethodSignatureComparer.MethodSignatureComparer()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.EqualGenericParametersMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.EqualGenericParameters(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.EqualNamesMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.EqualNames(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.EqualParametersMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.EqualParameters(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.EqualSignatureTypesTypeType">
            <summary>Sets the shim of MethodSignatureComparer.EqualSignatureTypes(Type x, Type y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.EqualsMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.Equals(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.GetHashCodeMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.GetHashCode(MethodInfo obj)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.StaticConstructor">
            <summary>Sets the shim of MethodSignatureComparer.MethodSignatureComparer()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances.EqualGenericParametersMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.EqualGenericParameters(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances.EqualNamesMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.EqualNames(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances.EqualParametersMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.EqualParameters(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances.EqualSignatureTypesTypeType">
            <summary>Sets the shim of MethodSignatureComparer.EqualSignatureTypes(Type x, Type y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances.EqualsMethodInfoMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.Equals(MethodInfo x, MethodInfo y)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodSignatureComparer.AllInstances.GetHashCodeMethodInfo">
            <summary>Sets the shim of MethodSignatureComparer.GetHashCode(MethodInfo obj)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator">
            <summary>Shim type of Castle.DynamicProxy.Generators.MethodWithInvocationGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.#ctor(Castle.DynamicProxy.Generators.MethodWithInvocationGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.Bind(Castle.DynamicProxy.Generators.IGenerator{Castle.DynamicProxy.Generators.Emitters.MethodEmitter})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.BuildMethodInterceptorsFieldClassEmitterMethodInfoINamingScope">
            <summary>Sets the shim of MethodWithInvocationGenerator.BuildMethodInterceptorsField(ClassEmitter class, MethodInfo method, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of MethodWithInvocationGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.ConstructorMetaMethodReferenceTypeGetTargetExpressionDelegateOverrideMethodDelegateIInvocationCreationContributor">
            <summary>Sets the shim of MethodWithInvocationGenerator.MethodWithInvocationGenerator(MetaMethod method, Reference interceptors, Type invocation, GetTargetExpressionDelegate getTargetExpression, OverrideMethodDelegate createMethod, IInvocationCreationContributor contributor)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.EmitLoadGenricMethodArgumentsMethodEmitterMethodInfoReference">
            <summary>Sets the shim of MethodWithInvocationGenerator.EmitLoadGenricMethodArguments(MethodEmitter methodEmitter, MethodInfo method, Reference invocationLocal)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.GetCtorArgumentsClassEmitterExpressionTypeReferenceArrayExpression">
            <summary>Sets the shim of MethodWithInvocationGenerator.GetCtorArguments(ClassEmitter class, Expression proxiedMethodTokenExpression, TypeReference[] dereferencedArguments, Expression methodInterceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.HasByRefArgumentsArgumentReferenceArray">
            <summary>Sets the shim of MethodWithInvocationGenerator.HasByRefArguments(ArgumentReference[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.ModifyArgumentsClassEmitterExpressionArray">
            <summary>Sets the shim of MethodWithInvocationGenerator.ModifyArguments(ClassEmitter class, Expression[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.SetMethodInterceptorsClassEmitterINamingScopeMethodEmitterExpression">
            <summary>Sets the shim of MethodWithInvocationGenerator.SetMethodInterceptors(ClassEmitter class, INamingScope namingScope, MethodEmitter emitter, Expression proxiedMethodTokenExpression)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator._EmitLoadGenricMethodArgumentsb__1Type">
            <summary>Sets the shim of MethodWithInvocationGenerator.&lt;EmitLoadGenricMethodArguments&gt;b__1(Type t)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.BuildMethodInterceptorsFieldClassEmitterMethodInfoINamingScope">
            <summary>Sets the shim of MethodWithInvocationGenerator.BuildMethodInterceptorsField(ClassEmitter class, MethodInfo method, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the shim of MethodWithInvocationGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.EmitLoadGenricMethodArgumentsMethodEmitterMethodInfoReference">
            <summary>Sets the shim of MethodWithInvocationGenerator.EmitLoadGenricMethodArguments(MethodEmitter methodEmitter, MethodInfo method, Reference invocationLocal)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.GetCtorArgumentsClassEmitterExpressionTypeReferenceArrayExpression">
            <summary>Sets the shim of MethodWithInvocationGenerator.GetCtorArguments(ClassEmitter class, Expression proxiedMethodTokenExpression, TypeReference[] dereferencedArguments, Expression methodInterceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.HasByRefArgumentsArgumentReferenceArray">
            <summary>Sets the shim of MethodWithInvocationGenerator.HasByRefArguments(ArgumentReference[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.ModifyArgumentsClassEmitterExpressionArray">
            <summary>Sets the shim of MethodWithInvocationGenerator.ModifyArguments(ClassEmitter class, Expression[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimMethodWithInvocationGenerator.AllInstances.SetMethodInterceptorsClassEmitterINamingScopeMethodEmitterExpression">
            <summary>Sets the shim of MethodWithInvocationGenerator.SetMethodInterceptors(ClassEmitter class, INamingScope namingScope, MethodEmitter emitter, Expression proxiedMethodTokenExpression)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope">
            <summary>Shim type of Castle.DynamicProxy.Generators.NamingScope</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.#ctor(Castle.DynamicProxy.Generators.NamingScope)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.Bind(Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.Constructor">
            <summary>Sets the shim of NamingScope.NamingScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.ConstructorINamingScope">
            <summary>Sets the shim of NamingScope.NamingScope(INamingScope parent)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.GetUniqueNameString">
            <summary>Sets the shim of NamingScope.GetUniqueName(String suggestedName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.ParentScopeGet">
            <summary>Sets the shim of NamingScope.get_ParentScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.SafeSubScope">
            <summary>Sets the shim of NamingScope.SafeSubScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.AllInstances.GetUniqueNameString">
            <summary>Sets the shim of NamingScope.GetUniqueName(String suggestedName)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.AllInstances.ParentScopeGet">
            <summary>Sets the shim of NamingScope.get_ParentScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimNamingScope.AllInstances.SafeSubScope">
            <summary>Sets the shim of NamingScope.SafeSubScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1">
            <summary>Shim type of Castle.DynamicProxy.Generators.TypeElementCollection`1</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.#ctor(Castle.DynamicProxy.Generators.TypeElementCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AddT0">
            <summary>Sets the shim of TypeElementCollection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.Constructor">
            <summary>Sets the shim of TypeElementCollection`1.TypeElementCollection`1()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.ContainsT0">
            <summary>Sets the shim of TypeElementCollection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.CountGet">
            <summary>Sets the shim of TypeElementCollection`1.get_Count()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.GetEnumerator">
            <summary>Sets the shim of TypeElementCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.IsReadOnlySystemCollectionsGenericICollectionTElementget">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.SystemCollectionsGenericICollectionTElementClear">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.Clear()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.SystemCollectionsGenericICollectionTElementCopyToT0ArrayInt32">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.SystemCollectionsGenericICollectionTElementRemoveT0">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.AddT0">
            <summary>Sets the shim of TypeElementCollection`1.Add(!0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.ContainsT0">
            <summary>Sets the shim of TypeElementCollection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.CountGet">
            <summary>Sets the shim of TypeElementCollection`1.get_Count()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of TypeElementCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTElementget">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.SystemCollectionsGenericICollectionTElementClear">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.Clear()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.SystemCollectionsGenericICollectionTElementCopyToT0ArrayInt32">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.SystemCollectionsGenericICollectionTElementRemoveT0">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.Generic.ICollection&lt;TElement&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.ShimTypeElementCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TypeElementCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler">
            <summary>Stub type of Castle.DynamicProxy.Generators.AttributeDisassembler</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.Equals(System.Object)">
            <summary>Sets the stub of AttributeDisassembler.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.EqualsObject">
            <summary>Sets the stub of AttributeDisassembler.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.GetHashCode">
            <summary>Sets the stub of AttributeDisassembler.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.GetHashCode01">
            <summary>Sets the stub of AttributeDisassembler.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.HandleError(System.Type,System.Exception)">
            <summary>Sets the stub of AttributeDisassembler.HandleError(Type attributeType, Exception exception)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.HandleErrorTypeException">
            <summary>Sets the stub of AttributeDisassembler.HandleError(Type attributeType, Exception exception)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeDisassembler</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubAttributeDisassembler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.BaseProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubBaseProxyGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubBaseProxyGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubCacheKey">
            <summary>Stub type of Castle.DynamicProxy.Generators.CacheKey</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.#ctor(System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.#ctor(System.Reflection.MemberInfo,System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.Equals(System.Object)">
            <summary>Sets the stub of CacheKey.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.EqualsObject">
            <summary>Sets the stub of CacheKey.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.GetHashCode">
            <summary>Sets the stub of CacheKey.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.GetHashCode01">
            <summary>Sets the stub of CacheKey.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.InitializeStub">
            <summary>Initializes a new instance of type StubCacheKey</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubCacheKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.ClassProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.GenerateType(System.String,System.Type[],Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of ClassProxyGenerator.GenerateType(String name, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.GenerateTypeStringTypeArrayINamingScope">
            <summary>Sets the stub of ClassProxyGenerator.GenerateType(String name, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.GetTypeImplementerMapping(System.Type[],System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of ClassProxyGenerator.GetTypeImplementerMapping(Type[] interfaces, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.GetTypeImplementerMappingTypeArrayIEnumerableOfITypeContributorOutINamingScope">
            <summary>Sets the stub of ClassProxyGenerator.GetTypeImplementerMapping(Type[] interfaces, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubClassProxyGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubClassProxyGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type,System.Type[],Castle.DynamicProxy.ProxyGenerationOptions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.GetTypeImplementerMapping(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of ClassProxyWithTargetGenerator.GetTypeImplementerMapping(IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.GetTypeImplementerMappingIEnumerableOfITypeContributorOutINamingScope">
            <summary>Sets the stub of ClassProxyWithTargetGenerator.GetTypeImplementerMapping(IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubClassProxyWithTargetGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubClassProxyWithTargetGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.#ctor(System.Type,Castle.DynamicProxy.Generators.MetaMethod,System.Reflection.MethodInfo,System.Boolean,Castle.DynamicProxy.Generators.IInvocationCreationContributor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetBaseCtorArguments(System.Type,Castle.DynamicProxy.ProxyGenerationOptions,System.Reflection.ConstructorInfo@)">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetBaseType">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetBaseType01">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetCallbackMethodInvocation(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[],System.Reflection.MethodInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Sets the stub of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayMethodInfoReferenceMethodEmitter">
            <summary>Sets the stub of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetTargetReference">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.GetTargetReference01">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.ImplementInvokeMethodOnTarget(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.Reflection.ParameterInfo[],Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the stub of CompositionInvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubCompositionInvocationTypeGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubCompositionInvocationTypeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector">
            <summary>Stub type of Castle.DynamicProxy.Generators.DelegateMembersCollector</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.CollectMembersToProxy(Castle.DynamicProxy.IProxyGenerationHook)">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.CollectMembersToProxyIProxyGenerationHook">
            <summary>Sets the stub of MembersCollector.CollectMembersToProxy(IProxyGenerationHook hook)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.GetMethodToGenerate(System.Reflection.MethodInfo,Castle.DynamicProxy.IProxyGenerationHook,System.Boolean)">
            <summary>Sets the stub of DelegateMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.GetMethodToGenerateMethodInfoIProxyGenerationHookBoolean">
            <summary>Sets the stub of DelegateMembersCollector.GetMethodToGenerate(MethodInfo method, IProxyGenerationHook hook, Boolean isStandalone)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.InitializeStub">
            <summary>Initializes a new instance of type StubDelegateMembersCollector</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateMembersCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook">
            <summary>Stub type of Castle.DynamicProxy.Generators.DelegateProxyGenerationHook</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.Equals(System.Object)">
            <summary>Sets the stub of DelegateProxyGenerationHook.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.EqualsObject">
            <summary>Sets the stub of DelegateProxyGenerationHook.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.GetHashCode">
            <summary>Sets the stub of DelegateProxyGenerationHook.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.GetHashCode01">
            <summary>Sets the stub of DelegateProxyGenerationHook.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.InitializeStub">
            <summary>Initializes a new instance of type StubDelegateProxyGenerationHook</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerationHook.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.DelegateProxyGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.GetTypeImplementerMapping(System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of DelegateProxyGenerator.GetTypeImplementerMapping(IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.GetTypeImplementerMappingIEnumerableOfITypeContributorOutINamingScope">
            <summary>Sets the stub of DelegateProxyGenerator.GetTypeImplementerMapping(IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubDelegateProxyGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubDelegateProxyGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException">
            <summary>Stub type of Castle.DynamicProxy.Generators.GeneratorException</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubGeneratorException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubGeneratorException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.InitializeStub">
            <summary>Initializes a new instance of type StubGeneratorException</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubGeneratorException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubIGenerator`1">
            <summary>Stub type of Castle.DynamicProxy.Generators.IGenerator`1</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIGenerator`1.#ctor">
            <summary>Initializes a new instance of type StubIGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIGenerator`1.cc::Castle#DynamicProxy#Generators#IGenerator{T}#Generate(Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of IGenerator`1.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubIGenerator`1.GenerateClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the stub of IGenerator`1.Generate(ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor">
            <summary>Stub type of Castle.DynamicProxy.Generators.IInvocationCreationContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.#ctor">
            <summary>Initializes a new instance of type StubIInvocationCreationContributor</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.cc::Castle#DynamicProxy#Generators#IInvocationCreationContributor#CreateConstructor(Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference[],Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter)">
            <summary>Sets the stub of IInvocationCreationContributor.CreateConstructor(ArgumentReference[] baseCtorArguments, AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.cc::Castle#DynamicProxy#Generators#IInvocationCreationContributor#GetCallbackMethod">
            <summary>Sets the stub of IInvocationCreationContributor.GetCallbackMethod()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.cc::Castle#DynamicProxy#Generators#IInvocationCreationContributor#GetCallbackMethodInvocation(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[],Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Sets the stub of IInvocationCreationContributor.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.cc::Castle#DynamicProxy#Generators#IInvocationCreationContributor#GetConstructorInvocationArguments(Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[],Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of IInvocationCreationContributor.GetConstructorInvocationArguments(Expression[] arguments, ClassEmitter proxy)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.CreateConstructorArgumentReferenceArrayAbstractTypeEmitter">
            <summary>Sets the stub of IInvocationCreationContributor.CreateConstructor(ArgumentReference[] baseCtorArguments, AbstractTypeEmitter invocation)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.GetCallbackMethod">
            <summary>Sets the stub of IInvocationCreationContributor.GetCallbackMethod()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayReferenceMethodEmitter">
            <summary>Sets the stub of IInvocationCreationContributor.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubIInvocationCreationContributor.GetConstructorInvocationArgumentsExpressionArrayClassEmitter">
            <summary>Sets the stub of IInvocationCreationContributor.GetConstructorInvocationArguments(Expression[] arguments, ClassEmitter proxy)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubINamingScope">
            <summary>Stub type of Castle.DynamicProxy.Generators.INamingScope</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.#ctor">
            <summary>Initializes a new instance of type StubINamingScope</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.cc::Castle#DynamicProxy#Generators#INamingScope#GetUniqueName(System.String)">
            <summary>Sets the stub of INamingScope.GetUniqueName(String suggestedName)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.cc::Castle#DynamicProxy#Generators#INamingScope#SafeSubScope">
            <summary>Sets the stub of INamingScope.SafeSubScope()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.GetUniqueNameString">
            <summary>Sets the stub of INamingScope.GetUniqueName(String suggestedName)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.ParentScopeGet">
            <summary>Sets the stub of INamingScope.get_ParentScope()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.SafeSubScope">
            <summary>Sets the stub of INamingScope.SafeSubScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubINamingScope.cc::Castle#DynamicProxy#Generators#INamingScope#ParentScope">
            <summary>Sets the stub of INamingScope.get_ParentScope()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.#ctor(System.Type,Castle.DynamicProxy.Generators.MetaMethod,System.Reflection.MethodInfo,Castle.DynamicProxy.Generators.IInvocationCreationContributor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetBaseCtorArguments(System.Type,Castle.DynamicProxy.ProxyGenerationOptions,System.Reflection.ConstructorInfo@)">
            <summary>Sets the stub of InheritanceInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the stub of InheritanceInvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetBaseType">
            <summary>Sets the stub of InheritanceInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetBaseType01">
            <summary>Sets the stub of InheritanceInvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetCallbackMethodInvocation(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[],System.Reflection.MethodInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Sets the stub of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayMethodInfoReferenceMethodEmitter">
            <summary>Sets the stub of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetTargetReference">
            <summary>Sets the stub of InheritanceInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.GetTargetReference01">
            <summary>Sets the stub of InheritanceInvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.ImplementInvokeMethodOnTarget(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.Reflection.ParameterInfo[],Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Sets the stub of InvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the stub of InvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubInheritanceInvocationTypeGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInheritanceInvocationTypeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.AddMappingForTargetType(System.Collections.Generic.IDictionary{System.Type,Castle.DynamicProxy.Contributors.ITypeContributor},System.Type,System.Collections.Generic.ICollection{System.Type},System.Collections.Generic.ICollection{System.Type},Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.AllowChangeTargetGet">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GenerateType(System.String,System.Type,System.Type[],Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GeneratorTypeGet">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(System.Type[],System.Type,System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(Type[] interfaces, Type proxyTargetType, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GetTypeImplementerMappingTypeArrayTypeIEnumerableOfITypeContributorOutINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(Type[] interfaces, Type proxyTargetType, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.Init(System.String,Castle.DynamicProxy.Generators.Emitters.ClassEmitter@,System.Type,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference@,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.Init(String typeName, ClassEmitter&amp; emitter, Type proxyTargetType, FieldReference&amp; interceptorsField, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.InitStringClassEmitterOutTypeFieldReferenceOutIEnumerableOfType">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.Init(String typeName, ClassEmitter&amp; emitter, Type proxyTargetType, FieldReference&amp; interceptorsField, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyWithTargetGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.AllowChangeTarget">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.GeneratorType">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetType(System.Collections.Generic.IDictionary{System.Type,Castle.DynamicProxy.Contributors.ITypeContributor},System.Type,System.Collections.Generic.ICollection{System.Type},System.Collections.Generic.ICollection{System.Type},Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; typeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.AllowChangeTargetGet">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GenerateType(System.String,System.Type,System.Type[],Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GeneratorTypeGet">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.get_GeneratorType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfaces(Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GetTypeImplementerMapping(System.Type[],System.Type,System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(Type[] interfaces, Type proxyTargetType, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GetTypeImplementerMappingTypeArrayTypeIEnumerableOfITypeContributorOutINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(Type[] interfaces, Type proxyTargetType, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.Init(System.String,Castle.DynamicProxy.Generators.Emitters.ClassEmitter@,System.Type,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference@,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.Init(String typeName, ClassEmitter&amp; emitter, Type proxyTargetType, FieldReference&amp; interceptorsField, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.InitStringClassEmitterOutTypeFieldReferenceOutIEnumerableOfType">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.Init(String typeName, ClassEmitter&amp; emitter, Type proxyTargetType, FieldReference&amp; interceptorsField, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyWithTargetInterfaceGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.AllowChangeTarget">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.GeneratorType">
            <summary>Sets the stub of InterfaceProxyWithTargetInterfaceGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithTargetInterfaceGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.#ctor(Castle.DynamicProxy.ModuleScope,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.AddMappingForTargetType(System.Collections.Generic.IDictionary{System.Type,Castle.DynamicProxy.Contributors.ITypeContributor},System.Type,System.Collections.Generic.ICollection{System.Type},System.Collections.Generic.ICollection{System.Type},Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithoutTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; interfaceTypeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.AddMappingForTargetTypeIDictionaryOfTypeITypeContributorTypeICollectionOfTypeICollectionOfTypeINamingScope">
            <summary>Sets the stub of InterfaceProxyWithoutTargetGenerator.AddMappingForTargetType(IDictionary`2&lt;Type,ITypeContributor&gt; interfaceTypeImplementerMapping, Type proxyTargetType, ICollection`1&lt;Type&gt; targetInterfaces, ICollection`1&lt;Type&gt; additionalInterfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.AllowChangeTargetGet">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.BuildClassEmitter(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.BuildClassEmitterStringTypeIEnumerableOfType">
            <summary>Sets the stub of BaseProxyGenerator.BuildClassEmitter(String typeName, Type parentType, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.CreateFields(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.CreateFieldsClassEmitter">
            <summary>Sets the stub of BaseProxyGenerator.CreateFields(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.CreateTypeAttributes(Castle.DynamicProxy.Generators.Emitters.ClassEmitter)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.CreateTypeAttributesClassEmitter">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.CreateTypeAttributes(ClassEmitter emitter)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GenerateType(System.String,System.Type,System.Type[],Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithoutTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GenerateTypeStringTypeTypeArrayINamingScope">
            <summary>Sets the stub of InterfaceProxyWithoutTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GeneratorTypeGet">
            <summary>Sets the stub of InterfaceProxyWithoutTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GetContributorForAdditionalInterfaces(Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GetContributorForAdditionalInterfacesINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetContributorForAdditionalInterfaces(INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GetTypeImplementerMapping(System.Type[],System.Type,System.Collections.Generic.IEnumerable{Castle.DynamicProxy.Contributors.ITypeContributor}@,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(Type[] interfaces, Type proxyTargetType, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GetTypeImplementerMappingTypeArrayTypeIEnumerableOfITypeContributorOutINamingScope">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.GetTypeImplementerMapping(Type[] interfaces, Type proxyTargetType, IEnumerable`1&lt;ITypeContributor&gt;&amp; contributors, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.Init(System.String,Castle.DynamicProxy.Generators.Emitters.ClassEmitter@,System.Type,Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference@,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.Init(String typeName, ClassEmitter&amp; emitter, Type proxyTargetType, FieldReference&amp; interceptorsField, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.InitStringClassEmitterOutTypeFieldReferenceOutIEnumerableOfType">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.Init(String typeName, ClassEmitter&amp; emitter, Type proxyTargetType, FieldReference&amp; interceptorsField, IEnumerable`1&lt;Type&gt; interfaces)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubInterfaceProxyWithoutTargetGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.AllowChangeTarget">
            <summary>Sets the stub of InterfaceProxyWithTargetGenerator.get_AllowChangeTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.GeneratorType">
            <summary>Sets the stub of InterfaceProxyWithoutTargetGenerator.get_GeneratorType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInterfaceProxyWithoutTargetGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.InvocationTypeGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.#ctor(System.Type,Castle.DynamicProxy.Generators.MetaMethod,System.Reflection.MethodInfo,System.Boolean,Castle.DynamicProxy.Generators.IInvocationCreationContributor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetBaseCtorArguments(System.Type,Castle.DynamicProxy.ProxyGenerationOptions,System.Reflection.ConstructorInfo@)">
            <summary>Sets the stub of InvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetBaseCtorArgumentsTypeProxyGenerationOptionsConstructorInfoOut">
            <summary>Sets the stub of InvocationTypeGenerator.GetBaseCtorArguments(Type targetFieldType, ProxyGenerationOptions proxyGenerationOptions, ConstructorInfo&amp; baseConstructor)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetBaseType">
            <summary>Sets the stub of InvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetBaseType01">
            <summary>Sets the stub of InvocationTypeGenerator.GetBaseType()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetCallbackMethodInvocation(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression[],System.Reflection.MethodInfo,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,Castle.DynamicProxy.Generators.Emitters.MethodEmitter)">
            <summary>Sets the stub of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetCallbackMethodInvocationAbstractTypeEmitterExpressionArrayMethodInfoReferenceMethodEmitter">
            <summary>Sets the stub of InvocationTypeGenerator.GetCallbackMethodInvocation(AbstractTypeEmitter invocation, Expression[] args, MethodInfo callbackMethod, Reference targetField, MethodEmitter invokeMethodOnTarget)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetTargetReference">
            <summary>Sets the stub of InvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.GetTargetReference01">
            <summary>Sets the stub of InvocationTypeGenerator.GetTargetReference()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.ImplementInvokeMethodOnTarget(Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter,System.Reflection.ParameterInfo[],Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference)">
            <summary>Sets the stub of InvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.ImplementInvokeMethodOnTargetAbstractTypeEmitterParameterInfoArrayMethodEmitterReference">
            <summary>Sets the stub of InvocationTypeGenerator.ImplementInvokeMethodOnTarget(AbstractTypeEmitter invocation, ParameterInfo[] parameters, MethodEmitter invokeMethodOnTarget, Reference targetField)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubInvocationTypeGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubInvocationTypeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubMetaType">
            <summary>Stub type of Castle.DynamicProxy.Generators.MetaType</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMetaType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMetaType.InitializeStub">
            <summary>Initializes a new instance of type StubMetaType</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMetaType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMetaType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMetaType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubMethodFinder">
            <summary>Stub type of Castle.DynamicProxy.Generators.MethodFinder</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodFinder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodFinder.InitializeStub">
            <summary>Initializes a new instance of type StubMethodFinder</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodFinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodFinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodFinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.MethodGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.#ctor(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Contributors.OverrideMethodDelegate)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.BuildProxiedMethodBody(Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of MethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the stub of MethodGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubMethodGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubMethodSignatureComparer">
            <summary>Stub type of Castle.DynamicProxy.Generators.MethodSignatureComparer</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodSignatureComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodSignatureComparer.InitializeStub">
            <summary>Initializes a new instance of type StubMethodSignatureComparer</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodSignatureComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodSignatureComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodSignatureComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator">
            <summary>Stub type of Castle.DynamicProxy.Generators.MethodWithInvocationGenerator</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.#ctor(Castle.DynamicProxy.Generators.MetaMethod,Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference,System.Type,Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate,Castle.DynamicProxy.Contributors.OverrideMethodDelegate,Castle.DynamicProxy.Generators.IInvocationCreationContributor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.BuildProxiedMethodBody(Castle.DynamicProxy.Generators.Emitters.MethodEmitter,Castle.DynamicProxy.Generators.Emitters.ClassEmitter,Castle.DynamicProxy.ProxyGenerationOptions,Castle.DynamicProxy.Generators.INamingScope)">
            <summary>Sets the stub of MethodWithInvocationGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.BuildProxiedMethodBodyMethodEmitterClassEmitterProxyGenerationOptionsINamingScope">
            <summary>Sets the stub of MethodWithInvocationGenerator.BuildProxiedMethodBody(MethodEmitter emitter, ClassEmitter class, ProxyGenerationOptions options, INamingScope namingScope)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubMethodWithInvocationGenerator</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubMethodWithInvocationGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubNamingScope">
            <summary>Stub type of Castle.DynamicProxy.Generators.NamingScope</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubNamingScope.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubNamingScope.InitializeStub">
            <summary>Initializes a new instance of type StubNamingScope</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubNamingScope.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubNamingScope.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubNamingScope.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Generators.Fakes.StubTypeElementCollection`1">
            <summary>Stub type of Castle.DynamicProxy.Generators.TypeElementCollection`1</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubTypeElementCollection`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Generators.Fakes.StubTypeElementCollection`1.InitializeStub">
            <summary>Initializes a new instance of type StubTypeElementCollection</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubTypeElementCollection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubTypeElementCollection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Generators.Fakes.StubTypeElementCollection`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil">
            <summary>Shim type of Castle.DynamicProxy.Internal.AttributeUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.AddDisassemblerOf1IAttributeDisassembler``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Castle.DynamicProxy.IAttributeDisassembler})">
            <summary>Sets the shim of AttributeUtil.AddDisassembler(IAttributeDisassembler disassembler)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.CreateBuilderOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.Emit.CustomAttributeBuilder})">
            <summary>Sets the shim of AttributeUtil.CreateBuilder()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.CreateBuilderAttribute">
            <summary>Sets the shim of AttributeUtil.CreateBuilder(Attribute attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.CreateBuilderCustomAttributeData">
            <summary>Sets the shim of AttributeUtil.CreateBuilder(CustomAttributeData attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.CreateBuilderTypeObjectArray">
            <summary>Sets the shim of AttributeUtil.CreateBuilder(Type attribute, Object[] constructorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.FallbackDisassemblerGet">
            <summary>Sets the shim of AttributeUtil.get_FallbackDisassembler()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.FallbackDisassemblerSetIAttributeDisassembler">
            <summary>Sets the shim of AttributeUtil.set_FallbackDisassembler(IAttributeDisassembler value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.GetArgumentsIListOfCustomAttributeTypedArgument">
            <summary>Sets the shim of AttributeUtil.GetArguments(IList`1&lt;CustomAttributeTypedArgument&gt; constructorArguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.GetNonInheritableAttributesMemberInfo">
            <summary>Sets the shim of AttributeUtil.GetNonInheritableAttributes(MemberInfo member)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.GetNonInheritableAttributesParameterInfo">
            <summary>Sets the shim of AttributeUtil.GetNonInheritableAttributes(ParameterInfo parameter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.GetSettersAndFieldsIEnumerableOfCustomAttributeNamedArgumentPropertyInfoArrayOutObjectArrayOutFieldInfoArrayOutObjectArrayOut">
            <summary>Sets the shim of AttributeUtil.GetSettersAndFields(IEnumerable`1&lt;CustomAttributeNamedArgument&gt; namedArguments, PropertyInfo[]&amp; properties, Object[]&amp; propertyValues, FieldInfo[]&amp; fields, Object[]&amp; fieldValues)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.GetTypesObjectArray">
            <summary>Sets the shim of AttributeUtil.GetTypes(Object[] objects)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.ReadAttributeValueCustomAttributeTypedArgument">
            <summary>Sets the shim of AttributeUtil.ReadAttributeValue(CustomAttributeTypedArgument argument)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.ShouldSkipAttributeReplicationType">
            <summary>Sets the shim of AttributeUtil.ShouldSkipAttributeReplication(Type attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.SpecialCaseAttributThatShouldNotBeReplicatedType">
            <summary>Sets the shim of AttributeUtil.SpecialCaseAttributThatShouldNotBeReplicated(Type attribute)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimAttributeUtil.StaticConstructor">
            <summary>Sets the shim of AttributeUtil.AttributeUtil()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation">
            <summary>Shim type of Castle.DynamicProxy.Internal.CompositionInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.#ctor(Castle.DynamicProxy.Internal.CompositionInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.Bind(Castle.DynamicProxy.IInvocation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.ConstructorObjectObjectIInterceptorArrayMethodInfoObjectArray">
            <summary>Sets the shim of CompositionInvocation.CompositionInvocation(Object target, Object proxy, IInterceptor[] interceptors, MethodInfo proxiedMethod, Object[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.EnsureValidProxyTargetObject">
            <summary>Sets the shim of CompositionInvocation.EnsureValidProxyTarget(Object newTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.EnsureValidTarget">
            <summary>Sets the shim of CompositionInvocation.EnsureValidTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.InvocationTargetGet">
            <summary>Sets the shim of CompositionInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.MethodInvocationTargetGet">
            <summary>Sets the shim of CompositionInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.TargetTypeGet">
            <summary>Sets the shim of CompositionInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.AllInstances.EnsureValidProxyTargetObject">
            <summary>Sets the shim of CompositionInvocation.EnsureValidProxyTarget(Object newTarget)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.AllInstances.EnsureValidTarget">
            <summary>Sets the shim of CompositionInvocation.EnsureValidTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.AllInstances.InvocationTargetGet">
            <summary>Sets the shim of CompositionInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.AllInstances.MethodInvocationTargetGet">
            <summary>Sets the shim of CompositionInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimCompositionInvocation.AllInstances.TargetTypeGet">
            <summary>Sets the shim of CompositionInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation">
            <summary>Shim type of Castle.DynamicProxy.Internal.InheritanceInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.#ctor(Castle.DynamicProxy.Internal.InheritanceInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.Bind(Castle.DynamicProxy.IInvocation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.ConstructorTypeObjectIInterceptorArrayMethodInfoObjectArray">
            <summary>Sets the shim of InheritanceInvocation.InheritanceInvocation(Type targetType, Object proxy, IInterceptor[] interceptors, MethodInfo proxiedMethod, Object[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.InvocationTargetGet">
            <summary>Sets the shim of InheritanceInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.MethodInvocationTargetGet">
            <summary>Sets the shim of InheritanceInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.TargetTypeGet">
            <summary>Sets the shim of InheritanceInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.AllInstances.InvocationTargetGet">
            <summary>Sets the shim of InheritanceInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.AllInstances.MethodInvocationTargetGet">
            <summary>Sets the shim of InheritanceInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInheritanceInvocation.AllInstances.TargetTypeGet">
            <summary>Sets the shim of InheritanceInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil">
            <summary>Shim type of Castle.DynamicProxy.Internal.InternalsUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.IsAccessibleMethodBase">
            <summary>Sets the shim of InternalsUtil.IsAccessible(MethodBase method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.IsInternalMethodBase">
            <summary>Sets the shim of InternalsUtil.IsInternal(MethodBase method)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.IsInternalToDynamicProxyAssembly">
            <summary>Sets the shim of InternalsUtil.IsInternalToDynamicProxy(Assembly asm)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.StaticConstructor">
            <summary>Sets the shim of InternalsUtil.InternalsUtil()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInternalsUtil.VisibleToDynamicProxyInternalsVisibleToAttribute">
            <summary>Sets the shim of InternalsUtil.VisibleToDynamicProxy(InternalsVisibleToAttribute attribute)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper">
            <summary>Shim type of Castle.DynamicProxy.Internal.InvocationHelper</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.GetFromCacheMethodInfoType">
            <summary>Sets the shim of InvocationHelper.GetFromCache(MethodInfo methodInfo, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.GetMethodOnObjectObjectMethodInfo">
            <summary>Sets the shim of InvocationHelper.GetMethodOnObject(Object target, MethodInfo proxiedMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.GetMethodOnTypeTypeMethodInfo">
            <summary>Sets the shim of InvocationHelper.GetMethodOnType(Type type, MethodInfo proxiedMethod)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.ObtainMethodMethodInfoType">
            <summary>Sets the shim of InvocationHelper.ObtainMethod(MethodInfo proxiedMethod, Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.PutToCacheMethodInfoTypeMethodInfo">
            <summary>Sets the shim of InvocationHelper.PutToCache(MethodInfo methodInfo, Type type, MethodInfo value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimInvocationHelper.StaticConstructor">
            <summary>Sets the shim of InvocationHelper.InvocationHelper()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil">
            <summary>Shim type of Castle.DynamicProxy.Internal.TypeUtil</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.CloseGenericParametersIfAnyAbstractTypeEmitterTypeArray">
            <summary>Sets the shim of TypeUtil.CloseGenericParametersIfAny(AbstractTypeEmitter emitter, Type[] arguments)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.GetAllFieldsType">
            <summary>Sets the shim of TypeUtil.GetAllFields(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.GetAllInterfacesType">
            <summary>Sets the shim of TypeUtil.GetAllInterfaces(Type type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.GetAllInterfacesTypeArray">
            <summary>Sets the shim of TypeUtil.GetAllInterfaces(Type[] types)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.GetClosedParameterTypeAbstractTypeEmitterType">
            <summary>Sets the shim of TypeUtil.GetClosedParameterType(AbstractTypeEmitter type, Type parameter)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.GetTypeOrNullObject">
            <summary>Sets the shim of TypeUtil.GetTypeOrNull(Object target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.IsFinalizerMethodInfo">
            <summary>Sets the shim of TypeUtil.IsFinalizer(MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.IsGetTypeMethodInfo">
            <summary>Sets the shim of TypeUtil.IsGetType(MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.IsMemberwiseCloneMethodInfo">
            <summary>Sets the shim of TypeUtil.IsMemberwiseClone(MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.SetStaticFieldTypeStringBindingFlagsObject">
            <summary>Sets the shim of TypeUtil.SetStaticField(Type type, String fieldName, BindingFlags additionalFlags, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.SortICollectionOfType">
            <summary>Sets the shim of TypeUtil.Sort(ICollection`1&lt;Type&gt; types)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil.SortMemberInfoArray">
            <summary>Sets the shim of TypeUtil.Sort(MemberInfo[] members)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil._Sortb__0MemberInfoMemberInfo">
            <summary>Sets the shim of TypeUtil.&lt;Sort&gt;b__0(MemberInfo l, MemberInfo r)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.ShimTypeUtil._Sortb__2TypeType">
            <summary>Sets the shim of TypeUtil.&lt;Sort&gt;b__2(Type l, Type r)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation">
            <summary>Stub type of Castle.DynamicProxy.Internal.CompositionInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.#ctor(System.Object,System.Object,Castle.DynamicProxy.IInterceptor[],System.Reflection.MethodInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubCompositionInvocation</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InvocationTargetGet">
            <summary>Sets the stub of CompositionInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InvokeMethodOnTarget">
            <summary>Sets the stub of AbstractInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InvokeMethodOnTarget01">
            <summary>Sets the stub of AbstractInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.MethodInvocationTargetGet">
            <summary>Sets the stub of CompositionInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.TargetTypeGet">
            <summary>Sets the stub of CompositionInvocation.get_TargetType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.InvocationTarget">
            <summary>Sets the stub of CompositionInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.MethodInvocationTarget">
            <summary>Sets the stub of CompositionInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubCompositionInvocation.TargetType">
            <summary>Sets the stub of CompositionInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation">
            <summary>Stub type of Castle.DynamicProxy.Internal.InheritanceInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.#ctor(System.Type,System.Object,Castle.DynamicProxy.IInterceptor[],System.Reflection.MethodInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubInheritanceInvocation</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InvocationTargetGet">
            <summary>Sets the stub of InheritanceInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InvokeMethodOnTarget">
            <summary>Sets the stub of InheritanceInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InvokeMethodOnTarget01">
            <summary>Sets the stub of InheritanceInvocation.InvokeMethodOnTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.MethodInvocationTargetGet">
            <summary>Sets the stub of InheritanceInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.TargetTypeGet">
            <summary>Sets the stub of InheritanceInvocation.get_TargetType()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.InvocationTarget">
            <summary>Sets the stub of InheritanceInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.MethodInvocationTarget">
            <summary>Sets the stub of InheritanceInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Internal.Fakes.StubInheritanceInvocation.TargetType">
            <summary>Sets the stub of InheritanceInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute">
            <summary>Shim type of Castle.DynamicProxy.Serialization.CacheMappingsAttribute</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.#ctor(Castle.DynamicProxy.Serialization.CacheMappingsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.ApplyToAssemblyBuilderDictionaryOfCacheKeyString">
            <summary>Sets the shim of CacheMappingsAttribute.ApplyTo(AssemblyBuilder assemblyBuilder, Dictionary`2&lt;CacheKey,String&gt; mappings)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.ConstructorByteArray">
            <summary>Sets the shim of CacheMappingsAttribute.CacheMappingsAttribute(Byte[] serializedCacheMappings)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.GetDeserializedMappings">
            <summary>Sets the shim of CacheMappingsAttribute.GetDeserializedMappings()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.SerializedCacheMappingsGet">
            <summary>Sets the shim of CacheMappingsAttribute.get_SerializedCacheMappings()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.StaticConstructor">
            <summary>Sets the shim of CacheMappingsAttribute.CacheMappingsAttribute()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.AllInstances.GetDeserializedMappings">
            <summary>Sets the shim of CacheMappingsAttribute.GetDeserializedMappings()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimCacheMappingsAttribute.AllInstances.SerializedCacheMappingsGet">
            <summary>Sets the shim of CacheMappingsAttribute.get_SerializedCacheMappings()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference">
            <summary>Shim type of Castle.DynamicProxy.Serialization.ProxyObjectReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.#ctor(Castle.DynamicProxy.Serialization.ProxyObjectReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.Bind(System.Runtime.Serialization.IObjectReference)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.GetValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of ProxyObjectReference.GetValue(String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyObjectReference.ProxyObjectReference(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.DeserializeProxyMembers">
            <summary>Sets the shim of ProxyObjectReference.DeserializeProxyMembers()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.DeserializeProxyState">
            <summary>Sets the shim of ProxyObjectReference.DeserializeProxyState()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.DeserializeTypeFromStringString">
            <summary>Sets the shim of ProxyObjectReference.DeserializeTypeFromString(String key)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyObjectReference.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.GetRealObjectStreamingContext">
            <summary>Sets the shim of ProxyObjectReference.GetRealObject(StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.InstantiateClassProxyType">
            <summary>Sets the shim of ProxyObjectReference.InstantiateClassProxy(Type proxy_type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.InvokeCallbackObject">
            <summary>Sets the shim of ProxyObjectReference.InvokeCallback(Object target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.ModuleScopeGet">
            <summary>Sets the shim of ProxyObjectReference.get_ModuleScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.OnDeserializationObject">
            <summary>Sets the shim of ProxyObjectReference.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.RecreateClassProxy">
            <summary>Sets the shim of ProxyObjectReference.RecreateClassProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.RecreateClassProxyWithTarget">
            <summary>Sets the shim of ProxyObjectReference.RecreateClassProxyWithTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.RecreateInterfaceProxyString">
            <summary>Sets the shim of ProxyObjectReference.RecreateInterfaceProxy(String generatorType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.RecreateProxy">
            <summary>Sets the shim of ProxyObjectReference.RecreateProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.ResetScope">
            <summary>Sets the shim of ProxyObjectReference.ResetScope()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.SetInterceptorsIInterceptorArray">
            <summary>Sets the shim of ProxyObjectReference.SetInterceptors(IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.SetScopeModuleScope">
            <summary>Sets the shim of ProxyObjectReference.SetScope(ModuleScope scope)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.SetTargetObject">
            <summary>Sets the shim of ProxyObjectReference.SetTarget(Object target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.StaticConstructor">
            <summary>Sets the shim of ProxyObjectReference.ProxyObjectReference()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.GetValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Castle.DynamicProxy.Serialization.ProxyObjectReference,System.String,``0})">
            <summary>Sets the shim of ProxyObjectReference.GetValue(String name)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.DeserializeProxyMembers">
            <summary>Sets the shim of ProxyObjectReference.DeserializeProxyMembers()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.DeserializeProxyState">
            <summary>Sets the shim of ProxyObjectReference.DeserializeProxyState()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.DeserializeTypeFromStringString">
            <summary>Sets the shim of ProxyObjectReference.DeserializeTypeFromString(String key)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of ProxyObjectReference.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.GetRealObjectStreamingContext">
            <summary>Sets the shim of ProxyObjectReference.GetRealObject(StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.InstantiateClassProxyType">
            <summary>Sets the shim of ProxyObjectReference.InstantiateClassProxy(Type proxy_type)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.InvokeCallbackObject">
            <summary>Sets the shim of ProxyObjectReference.InvokeCallback(Object target)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.OnDeserializationObject">
            <summary>Sets the shim of ProxyObjectReference.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.RecreateClassProxy">
            <summary>Sets the shim of ProxyObjectReference.RecreateClassProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.RecreateClassProxyWithTarget">
            <summary>Sets the shim of ProxyObjectReference.RecreateClassProxyWithTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.RecreateInterfaceProxyString">
            <summary>Sets the shim of ProxyObjectReference.RecreateInterfaceProxy(String generatorType)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.RecreateProxy">
            <summary>Sets the shim of ProxyObjectReference.RecreateProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.SetInterceptorsIInterceptorArray">
            <summary>Sets the shim of ProxyObjectReference.SetInterceptors(IInterceptor[] interceptors)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimProxyObjectReference.AllInstances.SetTargetObject">
            <summary>Sets the shim of ProxyObjectReference.SetTarget(Object target)</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation">
            <summary>Shim type of Castle.DynamicProxy.Serialization.RemotableInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.#ctor(Castle.DynamicProxy.Serialization.RemotableInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.Bind(Castle.DynamicProxy.IInvocation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.ArgumentsGet">
            <summary>Sets the shim of RemotableInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.ConstructorIInvocation">
            <summary>Sets the shim of RemotableInvocation.RemotableInvocation(IInvocation parent)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RemotableInvocation.RemotableInvocation(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.GenericArgumentsGet">
            <summary>Sets the shim of RemotableInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.GetArgumentValueInt32">
            <summary>Sets the shim of RemotableInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.GetConcreteMethod">
            <summary>Sets the shim of RemotableInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.GetConcreteMethodInvocationTarget">
            <summary>Sets the shim of RemotableInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of RemotableInvocation.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.InvocationTargetGet">
            <summary>Sets the shim of RemotableInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.MethodGet">
            <summary>Sets the shim of RemotableInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.MethodInvocationTargetGet">
            <summary>Sets the shim of RemotableInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.Proceed">
            <summary>Sets the shim of RemotableInvocation.Proceed()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.ProxyGet">
            <summary>Sets the shim of RemotableInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.ReturnValueGet">
            <summary>Sets the shim of RemotableInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.ReturnValueSetObject">
            <summary>Sets the shim of RemotableInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.SetArgumentValueInt32Object">
            <summary>Sets the shim of RemotableInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.TargetTypeGet">
            <summary>Sets the shim of RemotableInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.ArgumentsGet">
            <summary>Sets the shim of RemotableInvocation.get_Arguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.GenericArgumentsGet">
            <summary>Sets the shim of RemotableInvocation.get_GenericArguments()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.GetArgumentValueInt32">
            <summary>Sets the shim of RemotableInvocation.GetArgumentValue(Int32 index)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.GetConcreteMethod">
            <summary>Sets the shim of RemotableInvocation.GetConcreteMethod()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.GetConcreteMethodInvocationTarget">
            <summary>Sets the shim of RemotableInvocation.GetConcreteMethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of RemotableInvocation.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.InvocationTargetGet">
            <summary>Sets the shim of RemotableInvocation.get_InvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.MethodGet">
            <summary>Sets the shim of RemotableInvocation.get_Method()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.MethodInvocationTargetGet">
            <summary>Sets the shim of RemotableInvocation.get_MethodInvocationTarget()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.Proceed">
            <summary>Sets the shim of RemotableInvocation.Proceed()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.ProxyGet">
            <summary>Sets the shim of RemotableInvocation.get_Proxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.ReturnValueGet">
            <summary>Sets the shim of RemotableInvocation.get_ReturnValue()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.ReturnValueSetObject">
            <summary>Sets the shim of RemotableInvocation.set_ReturnValue(Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.SetArgumentValueInt32Object">
            <summary>Sets the shim of RemotableInvocation.SetArgumentValue(Int32 index, Object value)</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.ShimRemotableInvocation.AllInstances.TargetTypeGet">
            <summary>Sets the shim of RemotableInvocation.get_TargetType()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute">
            <summary>Stub type of Castle.DynamicProxy.Serialization.CacheMappingsAttribute</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCacheMappingsAttribute</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubCacheMappingsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference">
            <summary>Stub type of Castle.DynamicProxy.Serialization.ProxyObjectReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.InitializeStub">
            <summary>Initializes a new instance of type StubProxyObjectReference</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.RecreateProxy">
            <summary>Sets the stub of ProxyObjectReference.RecreateProxy()</summary>
        </member>
        <member name="F:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.RecreateProxy01">
            <summary>Sets the stub of ProxyObjectReference.RecreateProxy()</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubProxyObjectReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation">
            <summary>Stub type of Castle.DynamicProxy.Serialization.RemotableInvocation</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation.#ctor(Castle.DynamicProxy.IInvocation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubRemotableInvocation</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Serialization.Fakes.StubRemotableInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimDelegateMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.DelegateMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimDelegateMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimDelegateMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimDelegateMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimDelegateMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimDelegateMethods.StaticConstructor">
            <summary>Sets the shim of DelegateMethods.DelegateMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimFormatterServicesMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.FormatterServicesMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimFormatterServicesMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimFormatterServicesMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimFormatterServicesMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimFormatterServicesMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimFormatterServicesMethods.StaticConstructor">
            <summary>Sets the shim of FormatterServicesMethods.FormatterServicesMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimInterceptorSelectorMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.InterceptorSelectorMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimInterceptorSelectorMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimInterceptorSelectorMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimInterceptorSelectorMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimInterceptorSelectorMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimInterceptorSelectorMethods.StaticConstructor">
            <summary>Sets the shim of InterceptorSelectorMethods.InterceptorSelectorMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimInvocationMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.InvocationMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimInvocationMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimInvocationMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimInvocationMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimInvocationMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimInvocationMethods.StaticConstructor">
            <summary>Sets the shim of InvocationMethods.InvocationMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimMethodBaseMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.MethodBaseMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimMethodBaseMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimMethodBaseMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimMethodBaseMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimMethodBaseMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimMethodBaseMethods.StaticConstructor">
            <summary>Sets the shim of MethodBaseMethods.MethodBaseMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimSerializationInfoMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.SerializationInfoMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimSerializationInfoMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimSerializationInfoMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimSerializationInfoMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimSerializationInfoMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimSerializationInfoMethods.StaticConstructor">
            <summary>Sets the shim of SerializationInfoMethods.SerializationInfoMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimTypeBuilderMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.TypeBuilderMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeBuilderMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeBuilderMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeBuilderMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimTypeBuilderMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimTypeBuilderMethods.StaticConstructor">
            <summary>Sets the shim of TypeBuilderMethods.TypeBuilderMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimTypeMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.TypeMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimTypeMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimTypeMethods.StaticConstructor">
            <summary>Sets the shim of TypeMethods.TypeMethods()</summary>
        </member>
        <member name="T:Castle.DynamicProxy.Tokens.Fakes.ShimTypeUtilMethods">
            <summary>Shim type of Castle.DynamicProxy.Tokens.TypeUtilMethods</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeUtilMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeUtilMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Castle.DynamicProxy.Tokens.Fakes.ShimTypeUtilMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimTypeUtilMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Castle.DynamicProxy.Tokens.Fakes.ShimTypeUtilMethods.StaticConstructor">
            <summary>Sets the shim of TypeUtilMethods.TypeUtilMethods()</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.CastleCoreDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Castle.Core</summary>
        </member>
    </members>
</doc>
